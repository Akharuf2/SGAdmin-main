[
    {
        "comment": "",
        "content": "SecRule TX:DETECTION_PARANOIA_LEVEL \"@lt 1\" \"id:450011,phase:1,pass,nolog,skipAfter:END-REQUEST-450-APPLICATION-ATTACK-ADV\"",
        "rule_id": "450",
        "sec_rule_id": "450011"
    },
    {
        "comment": "",
        "content": "SecRule TX:DETECTION_PARANOIA_LEVEL \"@lt 1\" \"id:450012,phase:2,pass,nolog,skipAfter:END-REQUEST-450-APPLICATION-ATTACK-ADV\"",
        "rule_id": "450",
        "sec_rule_id": "450012"
    },
    {
        "comment": "# SSRF: Detect SSRF attempt on internal services",
        "content": "SecRule ARGS|ARGS_NAMES \"@rx ^(jar:)?(http|https):\\/\\/([0-9oq]{1,5}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}|[0-9]{1,10}|localhost)(:[0-9]{1,5})?(\\/.*|)$\" \\\n    \"id:450100,\\\n    phase:2,\\\n    block,\\\n    t:none,\\\n    severity:'CRITICAL',\\\n    setvar:'tx.inbound_anomaly_score_pl1=+%{tx.critical_anomaly_score}'\"",
        "description": "SSRF: Detect SSRF attempt on internal services",
        "rule_id": "450",
        "sec_rule_id": "450100",
        "severity": "CRITICAL"
    },
    {
        "comment": "# SSRF: Detect SSRF attempts using IPv6 or octal/hexdecimal obfuscation",
        "content": "SecRule ARGS|ARGS_NAMES \"@rx ^(jar:)?(http|https):\\/\\/((\\[)?[:0-9a-f\\.x]{2,}(\\])?)(:[0-9]{1,5})?(\\/.*)?$\" \\\n    \"id:450101,\\\n    phase:2,\\\n    block,\\\n    t:none,\\\n    severity:'CRITICAL',\\\n    setvar:'tx.inbound_anomaly_score_pl1=+%{tx.critical_anomaly_score}'\"",
        "description": "SSRF: Detect SSRF attempts using IPv6 or octal/hexdecimal obfuscation",
        "rule_id": "450",
        "sec_rule_id": "450101",
        "severity": "CRITICAL"
    },
    {
        "comment": "# SSRF: Detect SSRF attempts using non HTTP protocol",
        "content": "SecRule ARGS|ARGS_NAMES|REQUEST_HEADERS \"@rx ^(jar:)?((file|netdoc):\\/\\/[\\\\\\/]+|(dict|gopher|ldap|sftp|tftp):\\/\\/.*:[0-9]{1,5})\" \\\n    \"id:450102,\\\n    phase:2,\\\n    block,\\\n    t:none,\\\n    severity:'CRITICAL',\\\n    setvar:'tx.inbound_anomaly_score_pl1=+%{tx.critical_anomaly_score}'\"",
        "description": "SSRF: Detect SSRF attempts using non HTTP protocol",
        "rule_id": "450",
        "sec_rule_id": "450102",
        "severity": "CRITICAL"
    },
    {
        "comment": "# SSRF: Detect SSRF domain redirection bypass",
        "content": "SecRule ARGS|ARGS_NAMES|REQUEST_HEADERS \"@rx ^(http|https):\\/\\/(.*burpcollaborator\\.net|localtest\\.me|mail\\.ebc\\.apple\\.com|bugbounty\\.dod\\.network|.*\\.[nx]ip\\.io)\" \\\n    \"id:450103,\\\n    phase:2,\\\n    block,\\\n    t:none,\\\n    severity:'CRITICAL',\\\n    setvar:'tx.inbound_anomaly_score_pl1=+%{tx.critical_anomaly_score}'\"",
        "description": "SSRF: Detect SSRF domain redirection bypass",
        "rule_id": "450",
        "sec_rule_id": "450103",
        "severity": "CRITICAL"
    },
    {
        "comment": "# SSRF: Try to access internal OMI service (CVE-2021-38647)",
        "content": "SecRule ARGS|ARGS_NAMES \"@rx http(s?):\\/\\/([A-Za-z0-9\\.\\-\\_]+|\\[[A-Fa-f0-9\\:]+\\]|):5986\\/wsman\" \\\n    \"id:450104,\\\n    phase:2,\\\n    block,\\\n    t:none,\\\n    severity:'CRITICAL',\\\n    setvar:'tx.inbound_anomaly_score_pl1=+%{tx.critical_anomaly_score}'\"",
        "description": "SSRF: Try to access internal OMI service (CVE-2021-38647)",
        "rule_id": "450",
        "sec_rule_id": "450104",
        "severity": "CRITICAL"
    },
    {
        "comment": "# SSRF: Try to access the credential manager of the main cloud services",
        "content": "SecRule ARGS_NAMES|ARGS \"@rx (?i)^\\W*((http|ftp)s?://)?\\W*((::f{4}:)?(169|(0x)?0*a9|0+251)\\.?(254|(0x)?0*fe|0+376)[0-9a-fx\\.:]+|metadata\\.google\\.internal|metadata\\.goog)\\W*/\" \\\n    \"id:450105,\\\n    phase:2,\\\n    block,\\\n    t:none,t:removeNulls,\\\n    severity:'CRITICAL',\\\n    setvar:'tx.inbound_anomaly_score_pl1=+%{tx.critical_anomaly_score}'\"",
        "description": "SSRF: Try to access the credential manager of the main cloud services",
        "rule_id": "450",
        "sec_rule_id": "450105",
        "severity": "CRITICAL"
    },
    {
        "comment": "",
        "content": "SecRule TX:DETECTION_PARANOIA_LEVEL \"@lt 1\" \"id:452011,phase:1,pass,nolog,skipAfter:END-REQUEST-452-APPLICATION-ATTACK-XSS\"",
        "rule_id": "452",
        "sec_rule_id": "452011"
    },
    {
        "comment": "",
        "content": "SecRule TX:DETECTION_PARANOIA_LEVEL \"@lt 1\" \"id:452012,phase:2,pass,nolog,skipAfter:END-REQUEST-452-APPLICATION-ATTACK-XSS\"",
        "rule_id": "452",
        "sec_rule_id": "452012"
    },
    {
        "comment": "# IE XSS Filters - Attack Detected",
        "content": "SecRule REQUEST_COOKIES|REQUEST_COOKIES_NAMES|ARGS_NAMES|ARGS \"@rx (?i:<style.*?>.*?(?:@[i\\\\\\\\]|(?:[:=]|&#x?0*(?:58|3A|61|3D);?).*?(?:[(?:\\\\\\\\]|&#x?0*(?:40|28|92|5C);?)))\" \\\n    \"id:452100,\\\n    phase:2,\\\n    block,\\\n    t:none,t:removeNulls,\\\n    severity:'CRITICAL',\\\n    setvar:'tx.inbound_anomaly_score_pl1=+%{tx.critical_anomaly_score}'\"",
        "description": "IE XSS Filters - Attack Detected",
        "rule_id": "452",
        "sec_rule_id": "452100",
        "severity": "CRITICAL"
    },
    {
        "comment": "# IE XSS Filters - Attack Detected",
        "content": "SecRule REQUEST_COOKIES|REQUEST_COOKIES_NAMES|ARGS_NAMES|ARGS \"@rx (?i:<.*[:]?vmlframe.*?[\\s/+]*?src[\\s/+]*=)\" \\\n    \"id:452101,\\\n    phase:2,\\\n    block,\\\n    t:none,t:removeNulls,\\\n    severity:'CRITICAL',\\\n    setvar:'tx.inbound_anomaly_score_pl1=+%{tx.critical_anomaly_score}'\"",
        "description": "IE XSS Filters - Attack Detected",
        "rule_id": "452",
        "sec_rule_id": "452101",
        "severity": "CRITICAL"
    },
    {
        "comment": "# IE XSS Filters - Attack Detected",
        "content": "SecRule REQUEST_COOKIES|REQUEST_COOKIES_NAMES|ARGS_NAMES|ARGS \"@rx (?i:(?:j|&#x?0*(?:74|4A|106|6A);?)(?:\\t|&(?:#x?0*(?:9|13|10|A|D);?|tab;|newline;))*(?:a|&#x?0*(?:65|41|97|61);?)(?:\\t|&(?:#x?0*(?:9|13|10|A|D);?|tab;|newline;))*(?:v|&#x?0*(?:86|56|118|76);?)(?:\\t|&(?:#x?0*(?:9|13|10|A|D);?|tab;|newline;))*(?:a|&#x?0*(?:65|41|97|61);?)(?:\\t|&(?:#x?0*(?:9|13|10|A|D);?|tab;|newline;))*(?:s|&#x?0*(?:83|53|115|73);?)(?:\\t|&(?:#x?0*(?:9|13|10|A|D);?|tab;|newline;))*(?:c|&#x?0*(?:67|43|99|63);?)(?:\\t|&(?:#x?0*(?:9|13|10|A|D);?|tab;|newline;))*(?:r|&#x?0*(?:82|52|114|72);?)(?:\\t|&(?:#x?0*(?:9|13|10|A|D);?|tab;|newline;))*(?:i|&#x?0*(?:73|49|105|69);?)(?:\\t|&(?:#x?0*(?:9|13|10|A|D);?|tab;|newline;))*(?:p|&#x?0*(?:80|50|112|70);?)(?:\\t|&(?:#x?0*(?:9|13|10|A|D);?|tab;|newline;))*(?:t|&#x?0*(?:84|54|116|74);?)(?:\\t|&(?:#x?0*(?:9|13|10|A|D);?|tab;|newline;))*(?::|&(?:#x?0*(?:58|3A);?|colon;)).)\" \\\n    \"id:452102,\\\n    phase:2,\\\n    block,\\\n    t:none,t:removeNulls,\\\n    severity:'CRITICAL',\\\n    setvar:'tx.inbound_anomaly_score_pl1=+%{tx.critical_anomaly_score}'\"",
        "description": "IE XSS Filters - Attack Detected",
        "rule_id": "452",
        "sec_rule_id": "452102",
        "severity": "CRITICAL"
    },
    {
        "comment": "# IE XSS Filters - Attack Detected",
        "content": "SecRule REQUEST_COOKIES|REQUEST_COOKIES_NAMES|ARGS_NAMES|ARGS \"@rx (?i:(?:v|&#x?0*(?:86|56|118|76);?)(?:\\t|&(?:#x?0*(?:9|13|10|A|D);?|tab;|newline;))*(?:b|&#x?0*(?:66|42|98|62);?)(?:\\t|&(?:#x?0*(?:9|13|10|A|D);?|tab;|newline;))*(?:s|&#x?0*(?:83|53|115|73);?)(?:\\t|&(?:#x?0*(?:9|13|10|A|D);?|tab;|newline;))*(?:c|&#x?0*(?:67|43|99|63);?)(?:\\t|&(?:#x?0*(?:9|13|10|A|D);?|tab;|newline;))*(?:r|&#x?0*(?:82|52|114|72);?)(?:\\t|&(?:#x?0*(?:9|13|10|A|D);?|tab;|newline;))*(?:i|&#x?0*(?:73|49|105|69);?)(?:\\t|&(?:#x?0*(?:9|13|10|A|D);?|tab;|newline;))*(?:p|&#x?0*(?:80|50|112|70);?)(?:\\t|&(?:#x?0*(?:9|13|10|A|D);?|tab;|newline;))*(?:t|&#x?0*(?:84|54|116|74);?)(?:\\t|&(?:#x?0*(?:9|13|10|A|D);?|tab;|newline;))*(?::|&(?:#x?0*(?:58|3A);?|colon;)).)\" \\\n    \"id:452103,\\\n    phase:2,\\\n    block,\\\n    t:none,t:removeNulls,\\\n    severity:'CRITICAL',\\\n    setvar:'tx.inbound_anomaly_score_pl1=+%{tx.critical_anomaly_score}'\"",
        "description": "IE XSS Filters - Attack Detected",
        "rule_id": "452",
        "sec_rule_id": "452103",
        "severity": "CRITICAL"
    },
    {
        "comment": "# IE XSS Filters - Attack Detected",
        "content": "SecRule REQUEST_COOKIES|REQUEST_COOKIES_NAMES|ARGS_NAMES|ARGS \"@rx <EMBED[\\s/+].*?(?:src|type).*?=\" \\\n    \"id:452104,\\\n    phase:2,\\\n    block,\\\n    t:none,t:removeNulls,\\\n    severity:'CRITICAL',\\\n    setvar:'tx.inbound_anomaly_score_pl1=+%{tx.critical_anomaly_score}'\"",
        "description": "IE XSS Filters - Attack Detected",
        "rule_id": "452",
        "sec_rule_id": "452104",
        "severity": "CRITICAL"
    },
    {
        "comment": "# IE XSS Filters - Attack Detected",
        "content": "SecRule REQUEST_COOKIES|REQUEST_COOKIES_NAMES|ARGS_NAMES|ARGS \"@rx <[?]?import[\\s/+\\S]*?implementation[\\s/+]*?=\" \\\n    \"id:452105,\\\n    phase:2,\\\n    block,\\\n    t:lowercase,t:none,t:removeNulls,\\\n    severity:'CRITICAL',\\\n    setvar:'tx.inbound_anomaly_score_pl1=+%{tx.critical_anomaly_score}'\"",
        "description": "IE XSS Filters - Attack Detected",
        "rule_id": "452",
        "sec_rule_id": "452105",
        "severity": "CRITICAL"
    },
    {
        "comment": "# IE XSS Filters - Attack Detected",
        "content": "SecRule REQUEST_COOKIES|REQUEST_COOKIES_NAMES|ARGS_NAMES|ARGS \"@rx (?i:<META[\\s/+].*?http-equiv[\\s/+]*=[\\s/+]*[\\\"'`]?(?:(?:c|&#x?0*(?:67|43|99|63);?)|(?:r|&#x?0*(?:82|52|114|72);?)|(?:s|&#x?0*(?:83|53|115|73);?)))\" \\\n    \"id:452106,\\\n    phase:2,\\\n    block,\\\n    t:none,t:removeNulls,\\\n    severity:'CRITICAL',\\\n    setvar:'tx.inbound_anomaly_score_pl1=+%{tx.critical_anomaly_score}'\"",
        "description": "IE XSS Filters - Attack Detected",
        "rule_id": "452",
        "sec_rule_id": "452106",
        "severity": "CRITICAL"
    },
    {
        "comment": "# IE XSS Filters - Attack Detected",
        "content": "SecRule REQUEST_COOKIES|REQUEST_COOKIES_NAMES|ARGS_NAMES|ARGS \"@rx (?i:<META[\\s/+].*?charset[\\s/+]*=)\" \\\n    \"id:452107,\\\n    phase:2,\\\n    block,\\\n    t:none,t:removeNulls,\\\n    severity:'CRITICAL',\\\n    setvar:'tx.inbound_anomaly_score_pl1=+%{tx.critical_anomaly_score}'\"",
        "description": "IE XSS Filters - Attack Detected",
        "rule_id": "452",
        "sec_rule_id": "452107",
        "severity": "CRITICAL"
    },
    {
        "comment": "# IE XSS Filters - Attack Detected",
        "content": "SecRule REQUEST_COOKIES|REQUEST_COOKIES_NAMES|ARGS_NAMES|ARGS \"@rx <LINK[\\s/+].*?href[\\s/+]*=\" \\\n    \"id:452108,\\\n    phase:2,\\\n    block,\\\n    t:none,t:removeNulls,\\\n    severity:'CRITICAL',\\\n    setvar:'tx.inbound_anomaly_score_pl1=+%{tx.critical_anomaly_score}'\"",
        "description": "IE XSS Filters - Attack Detected",
        "rule_id": "452",
        "sec_rule_id": "452108",
        "severity": "CRITICAL"
    },
    {
        "comment": "# IE XSS Filters - Attack Detected",
        "content": "SecRule REQUEST_COOKIES|REQUEST_COOKIES_NAMES|ARGS_NAMES|ARGS \"@rx <BASE[\\s/+].*?href[\\s/+]*=\" \\\n    \"id:452109,\\\n    phase:2,\\\n    block,\\\n    t:none,t:removeNulls,\\\n    severity:'CRITICAL',\\\n    setvar:'tx.inbound_anomaly_score_pl1=+%{tx.critical_anomaly_score}'\"",
        "description": "IE XSS Filters - Attack Detected",
        "rule_id": "452",
        "sec_rule_id": "452109",
        "severity": "CRITICAL"
    },
    {
        "comment": "# IE XSS Filters - Attack Detected",
        "content": "SecRule REQUEST_COOKIES|REQUEST_COOKIES_NAMES|ARGS_NAMES|ARGS \"@rx <APPLET[\\s/+>]\" \\\n    \"id:452110,\\\n    phase:2,\\\n    block,\\\n    t:none,t:removeNulls,\\\n    severity:'CRITICAL',\\\n    setvar:'tx.inbound_anomaly_score_pl1=+%{tx.critical_anomaly_score}'\"",
        "description": "IE XSS Filters - Attack Detected",
        "rule_id": "452",
        "sec_rule_id": "452110",
        "severity": "CRITICAL"
    },
    {
        "comment": "# IE XSS Filters - Attack Detected",
        "content": "SecRule REQUEST_COOKIES|REQUEST_COOKIES_NAMES|ARGS_NAMES|ARGS \"@rx <OBJECT[\\s/+].*?(?:type|codetype|classid|code|data)[\\s/+]*=\" \\\n    \"id:452111,\\\n    phase:2,\\\n    block,\\\n    t:none,t:removeNulls,\\\n    severity:'CRITICAL',\\\n    setvar:'tx.inbound_anomaly_score_pl1=+%{tx.critical_anomaly_score}'\"",
        "description": "IE XSS Filters - Attack Detected",
        "rule_id": "452",
        "sec_rule_id": "452111",
        "severity": "CRITICAL"
    },
    {
        "comment": "# JSFuck / Hieroglyphy obfuscation detected",
        "content": "SecRule REQUEST_COOKIES|REQUEST_COOKIES_NAMES|ARGS_NAMES|ARGS \"@rx ![!+ ]\\[\\]\" \\\n    \"id:452112,\\\n    phase:2,\\\n    block,\\\n    t:none,\\\n    severity:'CRITICAL',\\\n    setvar:'tx.inbound_anomaly_score_pl1=+%{tx.critical_anomaly_score}'\"",
        "description": "JSFuck / Hieroglyphy obfuscation detected",
        "rule_id": "452",
        "sec_rule_id": "452112",
        "severity": "CRITICAL"
    },
    {
        "comment": "# JavaScript global variable found",
        "content": "SecRule REQUEST_COOKIES|REQUEST_COOKIES_NAMES|ARGS \"@rx (?:self|document|this|top|window)\\s*(?:/\\*|[\\[)]).+?(?:\\]|\\*/)\" \\\n    \"id:452113,\\\n    phase:2,\\\n    block,\\\n    t:none,\\\n    severity:'CRITICAL',\\\n    setvar:'tx.inbound_anomaly_score_pl1=+%{tx.critical_anomaly_score}'\"",
        "description": "JavaScript global variable found",
        "rule_id": "452",
        "sec_rule_id": "452113",
        "severity": "CRITICAL"
    },
    {
        "comment": "# NoScript XSS InjectionChecker: Attribute Injection",
        "content": "SecRule REQUEST_COOKIES|REQUEST_COOKIES_NAMES|REQUEST_HEADERS:user-agent|REQUEST_HEADERS:referer|ARGS_NAMES|ARGS \"@rx (?:\\W|^)(?:javascript:(?:[\\s\\S]+[=\\\\\\(\\[\\.<]|[\\s\\S]*?(?:\\bname\\b|\\\\[ux]\\d))|data:(?:(?:[a-z]\\w+/\\w[\\w+-]+\\w)?[;,]|[\\s\\S]*?;[\\s\\S]*?\\b(?:base64|charset=)|[\\s\\S]*?,[\\s\\S]*?<[\\s\\S]*?\\w[\\s\\S]*?>))|@\\W*?i\\W*?m\\W*?p\\W*?o\\W*?r\\W*?t\\W*?(?:/\\*[\\s\\S]*?)?(?:[\\\"']|\\W*?u\\W*?r\\W*?l[\\s\\S]*?\\()|\\W*?-\\W*?m\\W*?o\\W*?z\\W*?-\\W*?b\\W*?i\\W*?n\\W*?d\\W*?i\\W*?n\\W*?g[\\s\\S]*?:[\\s\\S]*?\\W*?u\\W*?r\\W*?l[\\s\\S]*?\\(\" \\\n    \"id:452114,\\\n    phase:2,\\\n    block,\\\n    t:none,t:removeNulls,\\\n    severity:'CRITICAL',\\\n    setvar:'tx.inbound_anomaly_score_pl1=+%{tx.critical_anomaly_score}'\"",
        "description": "NoScript XSS InjectionChecker: Attribute Injection",
        "rule_id": "452",
        "sec_rule_id": "452114",
        "severity": "CRITICAL"
    },
    {
        "comment": "# NoScript XSS InjectionChecker: HTML Injection",
        "content": "SecRule REQUEST_COOKIES|REQUEST_COOKIES_NAMES|REQUEST_HEADERS:user-agent|REQUEST_HEADERS:referer|ARGS_NAMES|ARGS \"@rx (?:(?:<\\w[\\s\\S]*[\\s/]|['\\\"](?:[\\s\\S]*[\\s/])?)(?:on(?:d(?:e(?:vice(?:(?:orienta|mo)tion|proximity|found|light)|livery(?:success|error)|activate)|r(?:ag(?:e(?:n(?:ter|d)|xit)|(?:gestur|leav)e|start|drop|over)|op)|i(?:s(?:c(?:hargingtimechange|onnect(?:ing|ed))|abled)|aling)|ata(?:setc(?:omplete|hanged)|(?:availabl|chang)e|error)|urationchange|ownloading|blclick)|Moz(?:M(?:agnifyGesture(?:Update|Start)?|ouse(?:PixelScroll|Hittest))|S(?:wipeGesture(?:Update|Start|End)?|crolledAreaChanged)|(?:(?:Press)?TapGestur|BeforeResiz)e|EdgeUI(?:C(?:omplet|ancel)|Start)ed|RotateGesture(?:Update|Start)?|A(?:udioAvailable|fterPaint))|c(?:o(?:m(?:p(?:osition(?:update|start|end)|lete)|mand(?:update)?)|n(?:t(?:rolselect|extmenu)|nect(?:ing|ed))|py)|a(?:(?:llschang|ch)ed|nplay(?:through)?|rdstatechange)|h(?:(?:arging(?:time)?ch)?ange|ecking)|(?:fstate|ell)change|u(?:echange|t)|l(?:ick|ose))|s(?:t(?:a(?:t(?:uschanged|echange)|lled|rt)|k(?:sessione|comma)nd|op)|e(?:ek(?:complete|ing|ed)|(?:lec(?:tstar)?)?t|n(?:ding|t))|(?:peech|ound)(?:start|end)|u(?:ccess|spend|bmit)|croll|how)|m(?:o(?:z(?:(?:pointerlock|fullscreen)(?:change|error)|(?:orientation|time)change|network(?:down|up)load)|use(?:(?:lea|mo)ve|o(?:ver|ut)|enter|wheel|down|up)|ve(?:start|end)?)|essage|ark)|a(?:n(?:imation(?:iteration|start|end)|tennastatechange)|fter(?:(?:scriptexecu|upda)te|print)|udio(?:process|start|end)|d(?:apteradded|dtrack)|ctivate|lerting|bort)|b(?:e(?:fore(?:(?:(?:de)?activa|scriptexecu)te|u(?:nload|pdate)|p(?:aste|rint)|c(?:opy|ut)|editfocus)|gin(?:Event)?)|oun(?:dary|ce)|l(?:ocked|ur)|roadcast|usy)|DOM(?:Node(?:Inserted(?:IntoDocument)?|Removed(?:FromDocument)?)|(?:CharacterData|Subtree)Modified|A(?:ttrModified|ctivate)|Focus(?:Out|In)|MouseScroll)|r(?:e(?:s(?:u(?:m(?:ing|e)|lt)|ize|et)|adystatechange|pea(?:tEven)?t|movetrack|trieving|ceived)|ow(?:s(?:inserted|delete)|e(?:nter|xit))|atechange)|p(?:op(?:up(?:hid(?:den|ing)|show(?:ing|n))|state)|a(?:ge(?:hide|show)|(?:st|us)e|int)|ro(?:pertychange|gress)|lay(?:ing)?)|t(?:ouch(?:(?:lea|mo)ve|en(?:ter|d)|cancel|start)|ransition(?:cancel|end|run)|ime(?:update|out)|ext)|u(?:s(?:erproximity|sdreceived)|p(?:gradeneeded|dateready)|n(?:derflow|load))|f(?:o(?:rm(?:change|input)|cus(?:out|in)?)|i(?:lterchange|nish)|ailed)|l(?:o(?:ad(?:e(?:d(?:meta)?data|nd)|start)|secapture)|evelchange|y)|g(?:amepad(?:(?:dis)?connected|button(?:down|up)|axismove)|et)|e(?:n(?:d(?:Event|ed)?|abled|ter)|rror(?:update)?|mptied|xit)|i(?:cc(?:cardlockerror|infochange)|n(?:coming|valid|put))|o(?:(?:(?:ff|n)lin|bsolet)e|verflow(?:changed)?|pen)|SVG(?:(?:Unl|L)oad|Resize|Scroll|Abort|Error|Zoom)|h(?:e(?:adphoneschange|l[dp])|ashchange|olding)|v(?:o(?:lum|ic)e|ersion)change|w(?:a(?:it|rn)ing|heel)|key(?:press|down|up)|(?:AppComman|Loa)d|no(?:update|match)|Request|zoom)|s(?:tyle|rc)|background|formaction|lowsrc|ping)[\\s\\x08]*?=|<[^\\w<>]*(?:[^<>\\\"'\\s]*:)?[^\\w<>]*\\W*?(?:(?:a\\W*?(?:n\\W*?i\\W*?m\\W*?a\\W*?t\\W*?e|p\\W*?p\\W*?l\\W*?e\\W*?t|u\\W*?d\\W*?i\\W*?o)|b\\W*?(?:i\\W*?n\\W*?d\\W*?i\\W*?n\\W*?g\\W*?s|a\\W*?s\\W*?e|o\\W*?d\\W*?y)|i?\\W*?f\\W*?r\\W*?a\\W*?m\\W*?e|o\\W*?b\\W*?j\\W*?e\\W*?c\\W*?t|i\\W*?m\\W*?a?\\W*?g\\W*?e?|e\\W*?m\\W*?b\\W*?e\\W*?d|p\\W*?a\\W*?r\\W*?a\\W*?m|v\\W*?i\\W*?d\\W*?e\\W*?o|l\\W*?i\\W*?n\\W*?k)[^>\\w]|s\\W*?(?:c\\W*?r\\W*?i\\W*?p\\W*?t|t\\W*?y\\W*?l\\W*?e|e\\W*?t[^>\\w]|v\\W*?g)|m\\W*?(?:a\\W*?r\\W*?q\\W*?u\\W*?e\\W*?e|e\\W*?t\\W*?a[^>\\w])|f\\W*?o\\W*?r\\W*?m))\" \\\n    \"id:452115,\\\n    phase:2,\\\n    block,\\\n    t:none,t:removeNulls,\\\n    severity:'CRITICAL',\\\n    setvar:'tx.inbound_anomaly_score_pl1=+%{tx.critical_anomaly_score}'\"",
        "description": "NoScript XSS InjectionChecker: HTML Injection",
        "rule_id": "452",
        "sec_rule_id": "452115",
        "severity": "CRITICAL"
    },
    {
        "comment": "# Node-Validator Deny List Keywords",
        "content": "SecRule REQUEST_COOKIES|REQUEST_COOKIES_NAMES|ARGS_NAMES|ARGS \"@pm document.cookie document.write .parentnode .innerhtml window.location -moz-binding <![cdata[\" \\\n    \"id:452116,\\\n    phase:2,\\\n    block,\\\n    t:lowercase,t:none,t:removeNulls,\\\n    severity:'CRITICAL',\\\n    setvar:'tx.inbound_anomaly_score_pl1=+%{tx.critical_anomaly_score}'\"",
        "description": "Node-Validator Deny List Keywords",
        "rule_id": "452",
        "sec_rule_id": "452116",
        "severity": "CRITICAL"
    },
    {
        "comment": "# Possible XSS Attack Detected - HTML Tag Handler",
        "content": "SecRule REQUEST_COOKIES|REQUEST_COOKIES_NAMES|ARGS_NAMES|ARGS \"@rx <(?:a|abbr|acronym|address|applet|area|audioscope|b|base|basefront|bdo|bgsound|big|blackface|blink|blockquote|body|bq|br|button|caption|center|cite|code|col|colgroup|comment|dd|del|dfn|dir|div|dl|dt|em|embed|fieldset|fn|font|form|frame|frameset|h1|head|hr|html|i|iframe|ilayer|img|input|ins|isindex|kdb|keygen|label|layer|legend|li|limittext|link|listing|map|marquee|menu|meta|multicol|nobr|noembed|noframes|noscript|nosmartquotes|object|ol|optgroup|option|p|param|plaintext|pre|q|rt|ruby|s|samp|script|select|server|shadow|sidebar|small|spacer|span|strike|strong|style|sub|sup|table|tbody|td|textarea|tfoot|th|thead|title|tr|tt|u|ul|var|wbr|xml|xmp)\\W\" \\\n    \"id:452117,\\\n    phase:2,\\\n    block,\\\n    t:lowercase,t:none,\\\n    severity:'CRITICAL',\\\n    setvar:'tx.inbound_anomaly_score_pl1=+%{tx.critical_anomaly_score}'\"",
        "description": "Possible XSS Attack Detected - HTML Tag Handler",
        "rule_id": "452",
        "sec_rule_id": "452117",
        "severity": "CRITICAL"
    },
    {
        "comment": "# UTF-7 Encoding IE XSS - Attack Detected",
        "content": "SecRule REQUEST_COOKIES|REQUEST_COOKIES_NAMES|ARGS_NAMES|ARGS \"@rx \\+ADw-.*(?:\\+AD4-|>)|<.*\\+AD4-\" \\\n    \"id:452118,\\\n    phase:2,\\\n    block,\\\n    t:none,\\\n    severity:'CRITICAL',\\\n    setvar:'tx.inbound_anomaly_score_pl1=+%{tx.critical_anomaly_score}'\"",
        "description": "UTF-7 Encoding IE XSS - Attack Detected",
        "rule_id": "452",
        "sec_rule_id": "452118",
        "severity": "CRITICAL"
    },
    {
        "comment": "# XSS Attack Detected via libinjection",
        "content": "SecRule REQUEST_COOKIES|REQUEST_COOKIES_NAMES|REQUEST_HEADERS:user-agent|ARGS_NAMES|ARGS \"@detectXSS \" \\\n    \"id:452119,\\\n    phase:2,\\\n    block,\\\n    t:none,t:removeNulls,\\\n    severity:'CRITICAL',\\\n    setvar:'tx.inbound_anomaly_score_pl1=+%{tx.critical_anomaly_score}'\"",
        "description": "XSS Attack Detected via libinjection",
        "rule_id": "452",
        "sec_rule_id": "452119",
        "severity": "CRITICAL"
    },
    {
        "comment": "# XSS Attack Detected via libinjection in the Referer header",
        "content": "SecRule REQUEST_HEADERS:referer \"@detectXSS \" \\\n    \"id:452120,\\\n    phase:1,\\\n    block,\\\n    t:none,t:removeNulls,\\\n    severity:'CRITICAL',\\\n    setvar:'tx.inbound_anomaly_score_pl1=+%{tx.critical_anomaly_score}'\"",
        "description": "XSS Attack Detected via libinjection in the Referer header",
        "rule_id": "452",
        "sec_rule_id": "452120",
        "severity": "CRITICAL"
    },
    {
        "comment": "# XSS Filter - Category 1: Script Tag Vector",
        "content": "SecRule REQUEST_COOKIES|REQUEST_COOKIES_NAMES|REQUEST_FILENAME|REQUEST_HEADERS:user-agent|REQUEST_HEADERS:referer|ARGS_NAMES|ARGS \"@rx <script[^>]*>[\\s\\S]*?\" \\\n    \"id:452121,\\\n    phase:2,\\\n    block,\\\n    t:none,t:removeNulls,\\\n    severity:'CRITICAL',\\\n    setvar:'tx.inbound_anomaly_score_pl1=+%{tx.critical_anomaly_score}'\"",
        "description": "XSS Filter - Category 1: Script Tag Vector",
        "rule_id": "452",
        "sec_rule_id": "452121",
        "severity": "CRITICAL"
    },
    {
        "comment": "# XSS Filter - Category 2: Event Handler Vector",
        "content": "SecRule REQUEST_COOKIES|REQUEST_COOKIES_NAMES|REQUEST_HEADERS:user-agent|REQUEST_HEADERS:referer|ARGS_NAMES|ARGS \"@rx [\\s\\\"'`;\\/0-9=\\x0B\\x09\\x0C\\x3B\\x2C\\x28\\x3B]on[a-zA-Z]{3,25}[\\s\\x0B\\x09\\x0C\\x3B\\x2C\\x28\\x3B]*?=[^=]\" \\\n    \"id:452122,\\\n    phase:2,\\\n    block,\\\n    t:none,t:removeNulls,\\\n    severity:'CRITICAL',\\\n    setvar:'tx.inbound_anomaly_score_pl1=+%{tx.critical_anomaly_score}'\"",
        "description": "XSS Filter - Category 2: Event Handler Vector",
        "rule_id": "452",
        "sec_rule_id": "452122",
        "severity": "CRITICAL"
    },
    {
        "comment": "# XSS Filter - Category 3: Attribute Vector",
        "content": "SecRule REQUEST_COOKIES|REQUEST_COOKIES_NAMES|REQUEST_HEADERS:user-agent|ARGS_NAMES|ARGS \"@rx [\\s\\S](?:\\b(?:x(?:link:href|html|mlns)|data:text\\/html|pattern\\b.*?=|formaction)|!ENTITY\\s+(?:\\S+|%\\s+\\S+)\\s+(?:PUBLIC|SYSTEM)|;base64|@import)\\b\" \\\n    \"id:452123,\\\n    phase:2,\\\n    block,\\\n    t:none,t:removeNulls,\\\n    severity:'CRITICAL',\\\n    setvar:'tx.inbound_anomaly_score_pl1=+%{tx.critical_anomaly_score}'\"",
        "description": "XSS Filter - Category 3: Attribute Vector",
        "rule_id": "452",
        "sec_rule_id": "452123",
        "severity": "CRITICAL"
    },
    {
        "comment": "# XSS Filter - Category 4: Javascript URI Vector",
        "content": "SecRule REQUEST_COOKIES|REQUEST_COOKIES_NAMES|REQUEST_HEADERS:user-agent|REQUEST_HEADERS:referer|ARGS_NAMES|ARGS \"@rx [a-z]+=(?:[^:=]+:.+;)*?[^:=]+:url\\(javascript\" \\\n    \"id:452124,\\\n    phase:2,\\\n    block,\\\n    t:none,t:removeNulls,\\\n    severity:'CRITICAL',\\\n    setvar:'tx.inbound_anomaly_score_pl1=+%{tx.critical_anomaly_score}'\"",
        "description": "XSS Filter - Category 4: Javascript URI Vector",
        "rule_id": "452",
        "sec_rule_id": "452124",
        "severity": "CRITICAL"
    },
    {
        "comment": "# XSS Filter - Category 5: Disallowed HTML Attributes",
        "content": "SecRule REQUEST_COOKIES|REQUEST_COOKIES_NAMES|REQUEST_HEADERS:user-agent|ARGS_NAMES|ARGS \"@rx \\b(?:s(?:tyle|rc)|href)\\b\\s*?=\" \\\n    \"id:452125,\\\n    phase:2,\\\n    block,\\\n    t:none,t:removeNulls,\\\n    severity:'CRITICAL',\\\n    setvar:'tx.inbound_anomaly_score_pl1=+%{tx.critical_anomaly_score}'\"",
        "description": "XSS Filter - Category 5: Disallowed HTML Attributes",
        "rule_id": "452",
        "sec_rule_id": "452125",
        "severity": "CRITICAL"
    },
    {
        "comment": "# XSS: Run libInjection on the URL and the HTTP headers",
        "content": "SecRule REQUEST_URI|REQUEST_HEADERS \"@detectXSS \" \\\n    \"id:452126,\\\n    phase:2,\\\n    block,\\\n    t:none,\\\n    severity:'CRITICAL',\\\n    setvar:'tx.inbound_anomaly_score_pl1=+%{tx.critical_anomaly_score}'\"",
        "description": "XSS: Run libInjection on the URL and the HTTP headers",
        "rule_id": "452",
        "sec_rule_id": "452126",
        "severity": "CRITICAL"
    },
    {
        "comment": "",
        "content": "SecRule TX:DETECTION_PARANOIA_LEVEL \"@lt 1\" \"id:459011,phase:1,pass,nolog,skipAfter:END-REQUEST-459-APPLICATION-ATTACK-HTTP\"",
        "rule_id": "459",
        "sec_rule_id": "459011"
    },
    {
        "comment": "",
        "content": "SecRule TX:DETECTION_PARANOIA_LEVEL \"@lt 1\" \"id:459012,phase:2,pass,nolog,skipAfter:END-REQUEST-459-APPLICATION-ATTACK-HTTP\"",
        "rule_id": "459",
        "sec_rule_id": "459012"
    },
    {
        "comment": "# Attempt to access a backup or working file",
        "content": "SecRule REQUEST_FILENAME \"@rx \\.[^.~]+~(?:/.*|)$\" \\\n    \"id:459100,\\\n    phase:2,\\\n    block,\\\n    t:none,\\\n    severity:'CRITICAL',\\\n    setvar:'tx.inbound_anomaly_score_pl1=+%{tx.critical_anomaly_score}'\"",
        "description": "Attempt to access a backup or working file",
        "rule_id": "459",
        "sec_rule_id": "459100",
        "severity": "CRITICAL"
    },
    {
        "comment": "# Content-Length HTTP header is not numeric",
        "content": "SecRule REQUEST_HEADERS:content-length \"!@rx ^\\d*$\" \\\n    \"id:459101,\\\n    phase:1,\\\n    block,\\\n    t:none,\\\n    severity:'CRITICAL',\\\n    setvar:'tx.inbound_anomaly_score_pl1=+%{tx.critical_anomaly_score}'\"",
        "description": "Content-Length HTTP header is not numeric",
        "rule_id": "459",
        "sec_rule_id": "459101",
        "severity": "CRITICAL"
    },
    {
        "comment": "# HTTP Header Injection Attack via headers",
        "content": "SecRule REQUEST_HEADERS_NAMES|REQUEST_HEADERS \"@rx [\\n\\r]\" \\\n    \"id:459102,\\\n    phase:1,\\\n    block,\\\n    t:none,\\\n    severity:'CRITICAL',\\\n    setvar:'tx.inbound_anomaly_score_pl1=+%{tx.critical_anomaly_score}'\"",
        "description": "HTTP Header Injection Attack via headers",
        "rule_id": "459",
        "sec_rule_id": "459102",
        "severity": "CRITICAL"
    },
    {
        "comment": "# HTTP Header Injection Attack via payload (CR/LF and header-name detected)",
        "content": "SecRule ARGS_GET_NAMES|ARGS_GET \"@rx [\\n\\r]+(?:\\s|location|refresh|(?:set-)?cookie|(?:x-)?(?:forwarded-(?:for|host|server)|host|via|remote-ip|remote-addr|originating-IP))\\s*:\" \\\n    \"id:459103,\\\n    phase:2,\\\n    block,\\\n    t:lowercase,t:none,\\\n    severity:'CRITICAL',\\\n    setvar:'tx.inbound_anomaly_score_pl1=+%{tx.critical_anomaly_score}'\"",
        "description": "HTTP Header Injection Attack via payload (CR/LF and header-name detected)",
        "rule_id": "459",
        "sec_rule_id": "459103",
        "severity": "CRITICAL"
    },
    {
        "comment": "# HTTP Header Injection Attack via payload (CR/LF detected)",
        "content": "SecRule ARGS_NAMES \"@rx [\\n\\r]\" \\\n    \"id:459104,\\\n    phase:2,\\\n    block,\\\n    t:none,\\\n    severity:'CRITICAL',\\\n    setvar:'tx.inbound_anomaly_score_pl1=+%{tx.critical_anomaly_score}'\"",
        "description": "HTTP Header Injection Attack via payload (CR/LF detected)",
        "rule_id": "459",
        "sec_rule_id": "459104",
        "severity": "CRITICAL"
    },
    {
        "comment": "# HTTP Request Smuggling Attack",
        "content": "SecRule ARGS_NAMES|ARGS \"@rx (?:get|post|head|options|connect|put|delete|trace|track|patch|propfind|propatch|mkcol|copy|move|lock|unlock)\\s+[^\\s]+\\s+http/\\d\" \\\n    \"id:459105,\\\n    phase:2,\\\n    block,\\\n    t:lowercase,t:none,\\\n    severity:'CRITICAL',\\\n    setvar:'tx.inbound_anomaly_score_pl1=+%{tx.critical_anomaly_score}'\"",
        "description": "HTTP Request Smuggling Attack",
        "rule_id": "459",
        "sec_rule_id": "459105",
        "severity": "CRITICAL"
    },
    {
        "comment": "# HTTP Response Splitting Attack",
        "content": "SecRule REQUEST_COOKIES|REQUEST_COOKIES_NAMES|ARGS_NAMES|ARGS \"@rx [\\r\\n]\\W*?(?:content-(?:type|length)|set-cookie|location):\\s*\\w\" \\\n    \"id:459106,\\\n    phase:2,\\\n    block,\\\n    t:lowercase,t:none,\\\n    severity:'CRITICAL',\\\n    setvar:'tx.inbound_anomaly_score_pl1=+%{tx.critical_anomaly_score}'\"",
        "description": "HTTP Response Splitting Attack",
        "rule_id": "459",
        "sec_rule_id": "459106",
        "severity": "CRITICAL"
    },
    {
        "comment": "# HTTP Response Splitting Attack",
        "content": "SecRule REQUEST_COOKIES|REQUEST_COOKIES_NAMES|ARGS_NAMES|ARGS \"@rx (?:\\bhttp/\\d|<(?:html|meta)\\b)\" \\\n    \"id:459107,\\\n    phase:2,\\\n    block,\\\n    t:lowercase,t:none,\\\n    severity:'CRITICAL',\\\n    setvar:'tx.inbound_anomaly_score_pl1=+%{tx.critical_anomaly_score}'\"",
        "description": "HTTP Response Splitting Attack",
        "rule_id": "459",
        "sec_rule_id": "459107",
        "severity": "CRITICAL"
    },
    {
        "comment": "# HTTP Splitting (CR/LF in request filename detected)",
        "content": "SecRule REQUEST_FILENAME \"@rx [\\n\\r].\" \\\n    \"id:459108,\\\n    phase:2,\\\n    block,\\\n    t:none,\\\n    severity:'CRITICAL',\\\n    setvar:'tx.inbound_anomaly_score_pl1=+%{tx.critical_anomaly_score}'\"",
        "description": "HTTP Splitting (CR/LF in request filename detected)",
        "rule_id": "459",
        "sec_rule_id": "459108",
        "severity": "CRITICAL"
    },
    {
        "comment": "# Illegal Content-Type header",
        "content": "SecRule REQUEST_HEADERS:content-type \"!@rx ^[\\w/.+-]+(?:\\s?;\\s?(?:action|boundary|charset|start(?:-info)?|type|version)\\s?=\\s?['\\\"\\w.(?:)+,/:=?<>@#-]+)*$\" \\\n    \"id:459109,\\\n    phase:1,\\\n    block,\\\n    t:lowercase,t:none,\\\n    severity:'CRITICAL',\\\n    setvar:'tx.inbound_anomaly_score_pl1=+%{tx.critical_anomaly_score}'\"",
        "description": "Illegal Content-Type header",
        "rule_id": "459",
        "sec_rule_id": "459109",
        "severity": "CRITICAL"
    },
    {
        "comment": "# Possible Session Fixation Attack: SessionID Parameter Name with No Referer",
        "content": "SecRule ARGS_NAMES \"@rx ^(?:jsessionid|aspsessionid|asp\\.net_sessionid|phpsession|phpsessid|weblogicsession|session_id|session-id|cfid|cftoken|cfsid|jservsession|jwsession)$\" \\\n    \"id:459110,\\\n    phase:2,\\\n    block,\\\n    t:lowercase,t:none,\\\n    severity:'CRITICAL',\\\n    setvar:'tx.inbound_anomaly_score_pl1=+%{tx.critical_anomaly_score}'\"",
        "description": "Possible Session Fixation Attack: SessionID Parameter Name with No Referer",
        "rule_id": "459",
        "sec_rule_id": "459110",
        "severity": "CRITICAL"
    },
    {
        "comment": "# Possible Session Fixation Attack: SessionID Parameter Name with Off-Domain Referer",
        "content": "SecRule ARGS_NAMES \"@rx ^(?:jsessionid|aspsessionid|asp\\.net_sessionid|phpsession|phpsessid|weblogicsession|session_id|session-id|cfid|cftoken|cfsid|jservsession|jwsession)$\" \\\n    \"id:459111,\\\n    phase:2,\\\n    block,\\\n    t:lowercase,t:none,\\\n    severity:'CRITICAL',\\\n    setvar:'tx.inbound_anomaly_score_pl1=+%{tx.critical_anomaly_score}'\"",
        "description": "Possible Session Fixation Attack: SessionID Parameter Name with Off-Domain Referer",
        "rule_id": "459",
        "sec_rule_id": "459111",
        "severity": "CRITICAL"
    },
    {
        "comment": "# Possible Session Fixation Attack: Setting Cookie Values in HTML",
        "content": "SecRule REQUEST_COOKIES|REQUEST_COOKIES_NAMES|ARGS_NAMES|ARGS \"@rx (?i:\\.cookie\\b.*?;\\W*?(?:expires|domain)\\W*?=|\\bhttp-equiv\\W+set-cookie\\b)\" \\\n    \"id:459112,\\\n    phase:2,\\\n    block,\\\n    t:none,\\\n    severity:'CRITICAL',\\\n    setvar:'tx.inbound_anomaly_score_pl1=+%{tx.critical_anomaly_score}'\"",
        "description": "Possible Session Fixation Attack: Setting Cookie Values in HTML",
        "rule_id": "459",
        "sec_rule_id": "459112",
        "severity": "CRITICAL"
    },
    {
        "comment": "# Request header x-up-devcap-post-charset detected in combination with prefix \\'UP\\' to User-Agent",
        "content": "SecRule REQUEST_HEADERS:x-up-devcap-post-charset \"@exist \" \\\n    \"id:459113,\\\n    phase:1,\\\n    block,\\\n    t:none,\\\n    severity:'CRITICAL',\\\n    setvar:'tx.inbound_anomaly_score_pl1=+%{tx.critical_anomaly_score}'\"",
        "description": "Request header x-up-devcap-post-charset detected in combination with prefix \\'UP\\' to User-Agent",
        "rule_id": "459",
        "sec_rule_id": "459113",
        "severity": "CRITICAL"
    },
    {
        "comment": "# Unicode Full/Half Width Abuse Attack Attempt",
        "content": "SecRule REQUEST_URI \"@rx \\%u[fF]{2}[0-9a-fA-F]{2}\" \\\n    \"id:459114,\\\n    phase:2,\\\n    block,\\\n    t:none,\\\n    severity:'CRITICAL',\\\n    setvar:'tx.inbound_anomaly_score_pl1=+%{tx.critical_anomaly_score}'\"",
        "description": "Unicode Full/Half Width Abuse Attack Attempt",
        "rule_id": "459",
        "sec_rule_id": "459114",
        "severity": "CRITICAL"
    },
    {
        "comment": "",
        "content": "SecRule TX:DETECTION_PARANOIA_LEVEL \"@lt 1\" \"id:453011,phase:1,pass,nolog,skipAfter:END-REQUEST-453-APPLICATION-ATTACK-JAVA\"",
        "rule_id": "453",
        "sec_rule_id": "453011"
    },
    {
        "comment": "",
        "content": "SecRule TX:DETECTION_PARANOIA_LEVEL \"@lt 1\" \"id:453012,phase:2,pass,nolog,skipAfter:END-REQUEST-453-APPLICATION-ATTACK-JAVA\"",
        "rule_id": "453",
        "sec_rule_id": "453012"
    },
    {
        "comment": "# Detect OGNL exploitation primitives",
        "content": "SecRule ARGS|ARGS_NAMES|REQUEST_HEADERS \"@rx [@#]ognl\" \\\n    \"id:453100,\\\n    phase:2,\\\n    block,\\\n    t:none,\\\n    severity:'CRITICAL',\\\n    setvar:'tx.inbound_anomaly_score_pl1=+%{tx.critical_anomaly_score}'\"",
        "description": "Detect OGNL exploitation primitives",
        "rule_id": "453",
        "sec_rule_id": "453100",
        "severity": "CRITICAL"
    },
    {
        "comment": "# JNDI: Attempt to exploit log4j CVE-2021-44228",
        "content": "SecRule ARGS|ARGS_NAMES|REQUEST_COOKIES|REQUEST_COOKIES_NAMES|REQUEST_HEADERS|REQUEST_URI \"@rx \\${[^j]*j[^n]*n[^d]*d[^i]*i[^:]*:[^}]*}\" \\\n    \"id:453101,\\\n    phase:2,\\\n    block,\\\n    t:none,\\\n    severity:'CRITICAL',\\\n    setvar:'tx.inbound_anomaly_score_pl1=+%{tx.critical_anomaly_score}'\"",
        "description": "JNDI: Attempt to exploit log4j CVE-2021-44228",
        "rule_id": "453",
        "sec_rule_id": "453101",
        "severity": "CRITICAL"
    },
    {
        "comment": "# Look for formatting injection patterns",
        "content": "SecRule ARGS|ARGS_NAMES|REQUEST_HEADERS \"@rx [#%$]{[^}]+[^\\w\\s][^}]+}\" \\\n    \"id:453102,\\\n    phase:2,\\\n    block,\\\n    t:none,\\\n    severity:'CRITICAL',\\\n    setvar:'tx.inbound_anomaly_score_pl1=+%{tx.critical_anomaly_score}'\"",
        "description": "Look for formatting injection patterns",
        "rule_id": "453",
        "sec_rule_id": "453102",
        "severity": "CRITICAL"
    },
    {
        "comment": "# Remote Command Execution: Java process spawn (CVE-2017-9805)",
        "content": "SecRule ARGS|ARGS_NAMES|REQUEST_COOKIES|REQUEST_COOKIES_NAMES|REQUEST_HEADERS \"@rx (?:runtime|processbuilder)\" \\\n    \"id:453103,\\\n    phase:2,\\\n    block,\\\n    t:lowercase,t:none,\\\n    severity:'CRITICAL',\\\n    setvar:'tx.inbound_anomaly_score_pl1=+%{tx.critical_anomaly_score}'\"",
        "description": "Remote Command Execution: Java process spawn (CVE-2017-9805)",
        "rule_id": "453",
        "sec_rule_id": "453103",
        "severity": "CRITICAL"
    },
    {
        "comment": "# Remote Command Execution: Java serialization (CVE-2015-4852)",
        "content": "SecRule ARGS|ARGS_NAMES|REQUEST_COOKIES|REQUEST_COOKIES_NAMES|REQUEST_HEADERS \"@rx (?:clonetransformer|forclosure|instantiatefactory|instantiatetransformer|invokertransformer|prototypeclonefactory|prototypeserializationfactory|whileclosure|getproperty|filewriter|xmldecoder)\" \\\n    \"id:453104,\\\n    phase:2,\\\n    block,\\\n    t:lowercase,t:none,\\\n    severity:'CRITICAL',\\\n    setvar:'tx.inbound_anomaly_score_pl1=+%{tx.critical_anomaly_score}'\"",
        "description": "Remote Command Execution: Java serialization (CVE-2015-4852)",
        "rule_id": "453",
        "sec_rule_id": "453104",
        "severity": "CRITICAL"
    },
    {
        "comment": "# Remote Command Execution: Suspicious Java class detected",
        "content": "SecRule ARGS|ARGS_NAMES|REQUEST_COOKIES|REQUEST_COOKIES_NAMES|REQUEST_HEADERS \"@rx java\\.lang\\.(?:runtime|processbuilder)\" \\\n    \"id:453105,\\\n    phase:2,\\\n    block,\\\n    t:lowercase,t:none,\\\n    severity:'CRITICAL',\\\n    setvar:'tx.inbound_anomaly_score_pl1=+%{tx.critical_anomaly_score}'\"",
        "description": "Remote Command Execution: Suspicious Java class detected",
        "rule_id": "453",
        "sec_rule_id": "453105",
        "severity": "CRITICAL"
    },
    {
        "comment": "# Spring4shell: Attempt to exploit Spring4Shell",
        "content": "SecRule ARGS|ARGS_NAMES|REQUEST_HEADERS|REQUEST_HEADERS_NAMES|REQUEST_URI \"@rx ^class\\.module\\.classLoader\\.\" \\\n    \"id:453106,\\\n    phase:2,\\\n    block,\\\n    t:none,\\\n    severity:'CRITICAL',\\\n    setvar:'tx.inbound_anomaly_score_pl1=+%{tx.critical_anomaly_score}'\"",
        "description": "Spring4shell: Attempt to exploit Spring4Shell",
        "rule_id": "453",
        "sec_rule_id": "453106",
        "severity": "CRITICAL"
    },
    {
        "comment": "# Suspicious Java class detected",
        "content": "SecRule ARGS|ARGS_NAMES|REQUEST_COOKIES|REQUEST_COOKIES_NAMES|REQUEST_FILENAME|REQUEST_HEADERS \"@pm com.opensymphony.xwork2 com.sun.org.apache java.io.bufferedinputstream java.io.bufferedreader java.io.bytearrayinputstream java.io.bytearrayoutputstream java.io.chararrayreader java.io.datainputstream java.io.file java.io.fileoutputstream java.io.filepermission java.io.filewriter java.io.filterinputstream java.io.filteroutputstream java.io.filterreader java.io.inputstream java.io.inputstreamreader java.io.linenumberreader java.io.objectoutputstream java.io.outputstream java.io.pipedoutputstream java.io.pipedreader java.io.printstream java.io.pushbackinputstream java.io.reader java.io.stringreader java.lang.class java.lang.integer java.lang.number java.lang.object java.lang.process java.lang.processbuilder java.lang.reflect java.lang.runtime java.lang.string java.lang.stringbuilder java.lang.system javax.script.scriptenginemanager org.apache.commons org.apache.struts org.apache.struts2 org.omg.corba java.beans.xmldecode\" \\\n    \"id:453107,\\\n    phase:2,\\\n    block,\\\n    t:lowercase,t:none,\\\n    severity:'CRITICAL',\\\n    setvar:'tx.inbound_anomaly_score_pl1=+%{tx.critical_anomaly_score}'\"",
        "description": "Suspicious Java class detected",
        "rule_id": "453",
        "sec_rule_id": "453107",
        "severity": "CRITICAL"
    },
    {
        "comment": "",
        "content": "SecRule TX:DETECTION_PARANOIA_LEVEL \"@lt 1\" \"id:454011,phase:1,pass,nolog,skipAfter:END-REQUEST-454-APPLICATION-ATTACK-JSI\"",
        "rule_id": "454",
        "sec_rule_id": "454011"
    },
    {
        "comment": "",
        "content": "SecRule TX:DETECTION_PARANOIA_LEVEL \"@lt 1\" \"id:454012,phase:2,pass,nolog,skipAfter:END-REQUEST-454-APPLICATION-ATTACK-JSI\"",
        "rule_id": "454",
        "sec_rule_id": "454012"
    },
    {
        "comment": "# AngularJS client side template injection detected",
        "content": "SecRule REQUEST_COOKIES|REQUEST_COOKIES_NAMES|ARGS_NAMES|ARGS \"@rx ^{{[\\w\\s\\.]*[^\\w\\.\\s}][^}]*}}$\" \\\n    \"id:454100,\\\n    phase:2,\\\n    block,\\\n    t:none,\\\n    severity:'CRITICAL',\\\n    setvar:'tx.inbound_anomaly_score_pl1=+%{tx.critical_anomaly_score}'\"",
        "description": "AngularJS client side template injection detected",
        "rule_id": "454",
        "sec_rule_id": "454100",
        "severity": "CRITICAL"
    },
    {
        "comment": "# Node.js Injection Attack",
        "content": "SecRule REQUEST_COOKIES|REQUEST_COOKIES_NAMES|ARGS_NAMES|ARGS \"@rx (?:(?:_(?:\\$\\$ND_FUNC\\$\\$_|_js_function)|(?:new\\s+Function|\\beval)\\s*\\(|String\\s*\\.\\s*fromCharCode|function\\s*\\(\\s*\\)\\s*{|this\\.constructor)|module\\.exports\\s*=)\" \\\n    \"id:454101,\\\n    phase:2,\\\n    block,\\\n    t:none,\\\n    severity:'CRITICAL',\\\n    setvar:'tx.inbound_anomaly_score_pl1=+%{tx.critical_anomaly_score}'\"",
        "description": "Node.js Injection Attack",
        "rule_id": "454",
        "sec_rule_id": "454101",
        "severity": "CRITICAL"
    },
    {
        "comment": "# Node.js: Prototype pollution",
        "content": "SecRule ARGS|ARGS_NAMES|REQUEST_HEADERS \"@rx __proto__[\\.\\[]\" \\\n    \"id:454102,\\\n    phase:2,\\\n    block,\\\n    t:none,\\\n    severity:'CRITICAL',\\\n    setvar:'tx.inbound_anomaly_score_pl1=+%{tx.critical_anomaly_score}'\"",
        "description": "Node.js: Prototype pollution",
        "rule_id": "454",
        "sec_rule_id": "454102",
        "severity": "CRITICAL"
    },
    {
        "comment": "# Server-side Javascript injection: Try to detect obvious JS injection",
        "content": "SecRule ARGS_NAMES|ARGS \"@rx require\\(['\\\"][\\w\\.]+['\\\"]\\)|process\\.\\w+\\([\\w\\.]*\\)|\\.toString\\(\\)\" \\\n    \"id:454103,\\\n    phase:2,\\\n    block,\\\n    t:none,t:removeNulls,\\\n    severity:'CRITICAL',\\\n    setvar:'tx.inbound_anomaly_score_pl1=+%{tx.critical_anomaly_score}'\"",
        "description": "Server-side Javascript injection: Try to detect obvious JS injection",
        "rule_id": "454",
        "sec_rule_id": "454103",
        "severity": "CRITICAL"
    },
    {
        "comment": "",
        "content": "SecRule TX:DETECTION_PARANOIA_LEVEL \"@lt 1\" \"id:455011,phase:1,pass,nolog,skipAfter:END-REQUEST-455-APPLICATION-ATTACK-LFI\"",
        "rule_id": "455",
        "sec_rule_id": "455011"
    },
    {
        "comment": "",
        "content": "SecRule TX:DETECTION_PARANOIA_LEVEL \"@lt 1\" \"id:455012,phase:2,pass,nolog,skipAfter:END-REQUEST-455-APPLICATION-ATTACK-LFI\"",
        "rule_id": "455",
        "sec_rule_id": "455012"
    },
    {
        "comment": "# OS File Access Attempt",
        "content": "SecRule REQUEST_COOKIES|REQUEST_COOKIES_NAMES|ARGS_NAMES|ARGS \"@pm .htaccess .htdigest .htpasswd .addressbook .aptitude/config .bash_config .bash_history .bash_logout .bash_profile .bashrc .cache/notify-osd.log .config/odesk/odesk^team.conf .cshrc .dockerignore .drush/ .eslintignore .fbcindex .forward .gitattributes .gitconfig .gnupg/ .hplip/hplip.conf .ksh_history .lesshst .lftp/ .lhistory .lldb-history .local/share/mc/ .lynx_cookies .my.cnf .mysql_history .nano_history .node_repl_history .pearrc .php_history .pinerc .pki/ .proclog .procmailrc .psql_history .python_history .rediscli_history .rhistory .rhosts .sh_history .sqlite_history .ssh/authorized_keys .ssh/config .ssh/id_dsa .ssh/id_dsa.pub .ssh/id_rsa .ssh/id_rsa.pub .ssh/identity .ssh/identity.pub .ssh/known_hosts .subversion/auth .subversion/config .subversion/servers .tconn/tconn.conf .tcshrc .vidalia/vidalia.conf .viminfo .vimrc .www_acl .wwwacl .xauthority .zhistory .zshrc .zsh_history .nsconfig etc/redis.conf etc/redis-sentinel.conf etc/php.ini bin/php.ini etc/httpd/php.ini usr/lib/php.ini usr/lib/php/php.ini usr/local/etc/php.ini usr/local/lib/php.ini usr/local/php/lib/php.ini usr/local/php4/lib/php.ini usr/local/php5/lib/php.ini usr/local/apache/conf/php.ini etc/php4.4/fcgi/php.ini etc/php4/apache/php.ini etc/php4/apache2/php.ini etc/php5/apache/php.ini etc/php5/apache2/php.ini etc/php/php.ini etc/php/php4/php.ini etc/php/apache/php.ini etc/php/apache2/php.ini web/conf/php.ini usr/local/zend/etc/php.ini opt/xampp/etc/php.ini var/local/www/conf/php.ini etc/php/cgi/php.ini etc/php4/cgi/php.ini etc/php5/cgi/php.ini home2/bin/stable/apache/php.ini home/bin/stable/apache/php.ini etc/httpd/conf.d/php.conf php5/php.ini php4/php.ini php/php.ini windows/php.ini winnt/php.ini apache/php/php.ini xampp/apache/bin/php.ini netserver/bin/stable/apache/php.ini volumes/macintosh_hd1/usr/local/php/lib/php.ini etc/mono/1.0/machine.config etc/mono/2.0/machine.config etc/mono/2.0/web.config etc/mono/config usr/local/cpanel/logs/stats_log usr/local/cpanel/logs/access_log usr/local/cpanel/logs/error_log usr/local/cpanel/logs/license_log usr/local/cpanel/logs/login_log var/cpanel/cpanel.config var/log/sw-cp-server/error_log usr/local/psa/admin/logs/httpsd_access_log usr/local/psa/admin/logs/panel.log var/log/sso/sso.log usr/local/psa/admin/conf/php.ini etc/sw-cp-server/applications.d/plesk.conf usr/local/psa/admin/conf/site_isolation_settings.ini usr/local/sb/config etc/sw-cp-server/applications.d/00-sso-cpserver.conf etc/sso/sso_config.ini etc/mysql/conf.d/old_passwords.cnf var/log/mysql/mysql-bin.log var/log/mysql/mysql-bin.index var/log/mysql/data/mysql-bin.index var/log/mysql.log var/log/mysql.err var/log/mysqlderror.log var/log/mysql/mysql.log var/log/mysql/mysql-slow.log var/log/mysql-bin.index var/log/data/mysql-bin.index var/mysql.log var/mysql-bin.index var/data/mysql-bin.index program^files/mysql/mysql^server^5.0/data/{host}.err program^files/mysql/mysql^server^5.0/data/mysql.log program^files/mysql/mysql^server^5.0/data/mysql.err program^files/mysql/mysql^server^5.0/data/mysql-bin.log program^files/mysql/mysql^server^5.0/data/mysql-bin.index program^files/mysql/data/{host}.err program^files/mysql/data/mysql.log program^files/mysql/data/mysql.err program^files/mysql/data/mysql-bin.log program^files/mysql/data/mysql-bin.index mysql/data/{host}.err mysql/data/mysql.log mysql/data/mysql.err mysql/data/mysql-bin.log mysql/data/mysql-bin.index usr/local/mysql/data/mysql.log usr/local/mysql/data/mysql.err usr/local/mysql/data/mysql-bin.log usr/local/mysql/data/mysql-slow.log usr/local/mysql/data/mysqlderror.log usr/local/mysql/data/{host}.err usr/local/mysql/data/mysql-bin.index var/lib/mysql/my.cnf etc/mysql/my.cnf etc/my.cnf program^files/mysql/mysql^server^5.0/my.ini program^files/mysql/mysql^server^5.0/my.cnf program^files/mysql/my.ini program^files/mysql/my.cnf mysql/my.ini mysql/my.cnf mysql/bin/my.ini var/postgresql/log/postgresql.log var/log/postgresql/postgresql.log var/log/postgres/pg_backup.log var/log/postgres/postgres.log var/log/postgresql.log var/log/pgsql/pgsql.log var/log/postgresql/postgresql-8.1-main.log var/log/postgresql/postgresql-8.3-main.log var/log/postgresql/postgresql-8.4-main.log var/log/postgresql/postgresql-9.0-main.log var/log/postgresql/postgresql-9.1-main.log var/log/pgsql8.log var/log/postgresql/postgres.log var/log/pgsql_log var/log/postgresql/main.log var/log/cron/var/log/postgres.log usr/internet/pgsql/data/postmaster.log usr/local/pgsql/data/postgresql.log usr/local/pgsql/data/pg_log postgresql/log/pgadmin.log var/lib/pgsql/data/postgresql.conf var/postgresql/db/postgresql.conf var/nm2/postgresql.conf usr/local/pgsql/data/postgresql.conf usr/local/pgsql/data/pg_hba.conf usr/internet/pgsql/data/pg_hba.conf usr/local/pgsql/data/passwd usr/local/pgsql/bin/pg_passwd etc/postgresql/postgresql.conf etc/postgresql/pg_hba.conf home/postgres/data/postgresql.conf home/postgres/data/pg_version home/postgres/data/pg_ident.conf home/postgres/data/pg_hba.conf program^files/postgresql/8.3/data/pg_hba.conf program^files/postgresql/8.3/data/pg_ident.conf program^files/postgresql/8.3/data/postgresql.conf program^files/postgresql/8.4/data/pg_hba.conf program^files/postgresql/8.4/data/pg_ident.conf program^files/postgresql/8.4/data/postgresql.conf program^files/postgresql/9.0/data/pg_hba.conf program^files/postgresql/9.0/data/pg_ident.conf program^files/postgresql/9.0/data/postgresql.conf program^files/postgresql/9.1/data/pg_hba.conf program^files/postgresql/9.1/data/pg_ident.conf program^files/postgresql/9.1/data/postgresql.conf wamp/logs/access.log wamp/logs/apache_error.log wamp/logs/genquery.log wamp/logs/mysql.log wamp/logs/slowquery.log wamp/bin/apache/apache2.2.22/logs/access.log wamp/bin/apache/apache2.2.22/logs/error.log wamp/bin/apache/apache2.2.21/logs/access.log wamp/bin/apache/apache2.2.21/logs/error.log wamp/bin/mysql/mysql5.5.24/data/mysql-bin.index wamp/bin/mysql/mysql5.5.16/data/mysql-bin.index wamp/bin/apache/apache2.2.21/conf/httpd.conf wamp/bin/apache/apache2.2.22/conf/httpd.conf wamp/bin/apache/apache2.2.21/wampserver.conf wamp/bin/apache/apache2.2.22/wampserver.conf wamp/bin/apache/apache2.2.22/conf/wampserver.conf wamp/bin/mysql/mysql5.5.24/my.ini wamp/bin/mysql/mysql5.5.24/wampserver.conf wamp/bin/mysql/mysql5.5.16/my.ini wamp/bin/mysql/mysql5.5.16/wampserver.conf wamp/bin/php/php5.3.8/php.ini wamp/bin/php/php5.4.3/php.ini xampp/apache/logs/access.log xampp/apache/logs/error.log xampp/mysql/data/mysql-bin.index xampp/mysql/data/mysql.err xampp/mysql/data/{host}.err xampp/sendmail/sendmail.log xampp/apache/conf/httpd.conf xampp/filezillaftp/filezilla^server.xml xampp/mercurymail/mercury.ini xampp/php/php.ini xampp/phpmyadmin/config.inc.php xampp/sendmail/sendmail.ini xampp/webalizer/webalizer.conf opt/lampp/etc/httpd.conf xampp/htdocs/aca.txt xampp/htdocs/admin.php xampp/htdocs/leer.txt usr/local/apache/logs/audit_log usr/local/apache2/logs/audit_log logs/security_debug_log logs/security_log usr/local/apache/conf/modsec.conf usr/local/apache2/conf/modsec.conf winnt/system32/logfiles/msftpsvc winnt/system32/logfiles/msftpsvc1 winnt/system32/logfiles/msftpsvc2 windows/system32/logfiles/msftpsvc windows/system32/logfiles/msftpsvc1 windows/system32/logfiles/msftpsvc2 etc/logrotate.d/proftpd www/logs/proftpd.system.log var/log/proftpd var/log/proftpd/xferlog.legacy var/log/proftpd.access_log var/log/proftpd.xferlog etc/pam.d/proftpd etc/proftp.conf etc/protpd/proftpd.conf etc/vhcs2/proftpd/proftpd.conf etc/proftpd/modules.conf var/log/vsftpd.log etc/vsftpd.chroot_list etc/logrotate.d/vsftpd.log etc/vsftpd/vsftpd.conf etc/vsftpd.conf etc/chrootusers var/log/xferlog var/adm/log/xferlog etc/wu-ftpd/ftpaccess etc/wu-ftpd/ftphosts etc/wu-ftpd/ftpusers var/log/pure-ftpd/pure-ftpd.log logs/pure-ftpd.log var/log/pureftpd.log usr/sbin/pure-config.pl usr/etc/pure-ftpd.conf etc/pure-ftpd/pure-ftpd.conf usr/local/etc/pure-ftpd.conf usr/local/etc/pureftpd.pdb usr/local/pureftpd/etc/pureftpd.pdb usr/local/pureftpd/sbin/pure-config.pl usr/local/pureftpd/etc/pure-ftpd.conf etc/pure-ftpd.conf etc/pure-ftpd/pure-ftpd.pdb etc/pureftpd.pdb etc/pureftpd.passwd etc/pure-ftpd/pureftpd.pdb usr/ports/ftp/pure-ftpd/pure-ftpd.conf usr/ports/ftp/pure-ftpd/pureftpd.pdb usr/ports/ftp/pure-ftpd/pureftpd.passwd usr/ports/net/pure-ftpd/pure-ftpd.conf usr/ports/net/pure-ftpd/pureftpd.pdb usr/ports/net/pure-ftpd/pureftpd.passwd usr/pkgsrc/net/pureftpd/pure-ftpd.conf usr/pkgsrc/net/pureftpd/pureftpd.pdb usr/pkgsrc/net/pureftpd/pureftpd.passwd usr/ports/contrib/pure-ftpd/pure-ftpd.conf usr/ports/contrib/pure-ftpd/pureftpd.pdb usr/ports/contrib/pure-ftpd/pureftpd.passwd var/log/muddleftpd usr/sbin/mudlogd etc/muddleftpd/mudlog etc/muddleftpd.com etc/muddleftpd/mudlogd.conf etc/muddleftpd/muddleftpd.conf var/log/muddleftpd.conf usr/sbin/mudpasswd etc/muddleftpd/muddleftpd.passwd etc/muddleftpd/passwd var/log/ftp-proxy/ftp-proxy.log var/log/ftp-proxy var/log/ftplog etc/logrotate.d/ftp etc/ftpchroot etc/ftphosts etc/ftpusers var/log/exim_mainlog var/log/exim/mainlog var/log/maillog var/log/exim_paniclog var/log/exim/paniclog var/log/exim/rejectlog var/log/exim_rejectlog winnt/system32/logfiles/smtpsvc winnt/system32/logfiles/smtpsvc1 winnt/system32/logfiles/smtpsvc2 winnt/system32/logfiles/smtpsvc3 winnt/system32/logfiles/smtpsvc4 winnt/system32/logfiles/smtpsvc5 windows/system32/logfiles/smtpsvc windows/system32/logfiles/smtpsvc1 windows/system32/logfiles/smtpsvc2 windows/system32/logfiles/smtpsvc3 windows/system32/logfiles/smtpsvc4 windows/system32/logfiles/smtpsvc5 etc/osxhttpd/osxhttpd.conf system/library/webobjects/adaptors/apache2.2/apache.conf etc/apache2/sites-available/default etc/apache2/sites-available/default-ssl etc/apache2/sites-enabled/000-default etc/apache2/sites-enabled/default etc/apache2/apache2.conf etc/apache2/ports.conf usr/local/etc/apache/httpd.conf usr/pkg/etc/httpd/httpd.conf usr/pkg/etc/httpd/httpd-default.conf usr/pkg/etc/httpd/httpd-vhosts.conf etc/httpd/mod_php.conf etc/httpd/extra/httpd-ssl.conf etc/rc.d/rc.httpd usr/local/apache/conf/httpd.conf.default usr/local/apache/conf/access.conf usr/local/apache22/conf/httpd.conf usr/local/apache22/httpd.conf usr/local/etc/apache22/conf/httpd.conf usr/local/apps/apache22/conf/httpd.conf etc/apache22/conf/httpd.conf etc/apache22/httpd.conf opt/apache22/conf/httpd.conf usr/local/etc/apache2/vhosts.conf usr/local/apache/conf/vhosts.conf usr/local/apache2/conf/vhosts.conf usr/local/apache/conf/vhosts-custom.conf usr/local/apache2/conf/vhosts-custom.conf etc/apache/default-server.conf etc/apache2/default-server.conf usr/local/apache2/conf/extra/httpd-ssl.conf usr/local/apache2/conf/ssl.conf etc/httpd/conf.d usr/local/etc/apache22/httpd.conf usr/local/etc/apache2/httpd.conf etc/apache2/httpd2.conf etc/apache2/ssl-global.conf etc/apache2/vhosts.d/00_default_vhost.conf apache/conf/httpd.conf etc/apache/httpd.conf etc/httpd/conf http/httpd.conf usr/local/apache1.3/conf/httpd.conf usr/local/etc/httpd/conf var/apache/conf/httpd.conf var/www/conf www/apache/conf/httpd.conf www/conf/httpd.conf etc/init.d etc/apache/access.conf etc/rc.conf www/logs/freebsddiary-error.log www/logs/freebsddiary-access_log library/webserver/documents/index.html library/webserver/documents/index.htm library/webserver/documents/default.html library/webserver/documents/default.htm library/webserver/documents/index.php library/webserver/documents/default.php var/log/webmin/miniserv.log usr/local/etc/webmin/miniserv.conf etc/webmin/miniserv.conf usr/local/etc/webmin/miniserv.users etc/webmin/miniserv.users winnt/system32/logfiles/w3svc/inetsvn1.log winnt/system32/logfiles/w3svc1/inetsvn1.log winnt/system32/logfiles/w3svc2/inetsvn1.log winnt/system32/logfiles/w3svc3/inetsvn1.log windows/system32/logfiles/w3svc/inetsvn1.log windows/system32/logfiles/w3svc1/inetsvn1.log windows/system32/logfiles/w3svc2/inetsvn1.log windows/system32/logfiles/w3svc3/inetsvn1.log var/log/httpd/access_log var/log/httpd/error_log apache/logs/error.log apache/logs/access.log apache2/logs/error.log apache2/logs/access.log logs/error.log logs/access.log etc/httpd/logs/access_log etc/httpd/logs/access.log etc/httpd/logs/error_log etc/httpd/logs/error.log usr/local/apache/logs/access_log usr/local/apache/logs/access.log usr/local/apache/logs/error_log usr/local/apache/logs/error.log usr/local/apache2/logs/access_log usr/local/apache2/logs/access.log usr/local/apache2/logs/error_log usr/local/apache2/logs/error.log var/www/logs/access_log var/www/logs/access.log var/www/logs/error_log var/www/logs/error.log var/log/httpd/access.log var/log/httpd/error.log var/log/apache/access_log var/log/apache/access.log var/log/apache/error_log var/log/apache/error.log var/log/apache2/access_log var/log/apache2/access.log var/log/apache2/error_log var/log/apache2/error.log var/log/access_log var/log/access.log var/log/error_log var/log/error.log opt/lampp/logs/access_log opt/lampp/logs/error_log opt/xampp/logs/access_log opt/xampp/logs/error_log opt/lampp/logs/access.log opt/lampp/logs/error.log opt/xampp/logs/access.log opt/xampp/logs/error.log program^files/apache^group/apache/logs/access.log program^files/apache^group/apache/logs/error.log program^files/apache^software^foundation/apache2.2/logs/error.log program^files/apache^software^foundation/apache2.2/logs/access.log opt/apache/apache.conf opt/apache/conf/apache.conf opt/apache2/apache.conf opt/apache2/conf/apache.conf opt/httpd/apache.conf opt/httpd/conf/apache.conf etc/httpd/apache.conf etc/apache2/apache.conf etc/httpd/conf/apache.conf usr/local/apache/apache.conf usr/local/apache/conf/apache.conf usr/local/apache2/apache.conf usr/local/apache2/conf/apache.conf usr/local/php/apache.conf.php usr/local/php4/apache.conf.php usr/local/php5/apache.conf.php usr/local/php/apache.conf usr/local/php4/apache.conf usr/local/php5/apache.conf private/etc/httpd/apache.conf opt/apache/apache2.conf opt/apache/conf/apache2.conf opt/apache2/apache2.conf opt/apache2/conf/apache2.conf opt/httpd/apache2.conf opt/httpd/conf/apache2.conf etc/httpd/apache2.conf etc/httpd/conf/apache2.conf usr/local/apache/apache2.conf usr/local/apache/conf/apache2.conf usr/local/apache2/apache2.conf usr/local/apache2/conf/apache2.conf usr/local/php/apache2.conf.php usr/local/php4/apache2.conf.php usr/local/php5/apache2.conf.php usr/local/php/apache2.conf usr/local/php4/apache2.conf usr/local/php5/apache2.conf private/etc/httpd/apache2.conf usr/local/apache/conf/httpd.conf usr/local/apache2/conf/httpd.conf etc/httpd/conf/httpd.conf etc/apache/apache.conf etc/apache/conf/httpd.conf etc/apache2/httpd.conf usr/apache2/conf/httpd.conf usr/apache/conf/httpd.conf usr/local/etc/apache/conf/httpd.conf usr/local/apache/httpd.conf usr/local/apache2/httpd.conf usr/local/httpd/conf/httpd.conf usr/local/etc/apache2/conf/httpd.conf usr/local/etc/httpd/conf/httpd.conf usr/local/apps/apache2/conf/httpd.conf usr/local/apps/apache/conf/httpd.conf usr/local/php/httpd.conf.php usr/local/php4/httpd.conf.php usr/local/php5/httpd.conf.php usr/local/php/httpd.conf usr/local/php4/httpd.conf usr/local/php5/httpd.conf etc/apache2/conf/httpd.conf etc/http/conf/httpd.conf etc/httpd/httpd.conf etc/http/httpd.conf etc/httpd.conf opt/apache/conf/httpd.conf opt/apache2/conf/httpd.conf var/www/conf/httpd.conf private/etc/httpd/httpd.conf private/etc/httpd/httpd.conf.default etc/apache2/vhosts.d/default_vhost.include etc/apache2/conf.d/charset etc/apache2/conf.d/security etc/apache2/envvars etc/apache2/mods-available/autoindex.conf etc/apache2/mods-available/deflate.conf etc/apache2/mods-available/dir.conf etc/apache2/mods-available/mem_cache.conf etc/apache2/mods-available/mime.conf etc/apache2/mods-available/proxy.conf etc/apache2/mods-available/setenvif.conf etc/apache2/mods-available/ssl.conf etc/apache2/mods-enabled/alias.conf etc/apache2/mods-enabled/deflate.conf etc/apache2/mods-enabled/dir.conf etc/apache2/mods-enabled/mime.conf etc/apache2/mods-enabled/negotiation.conf etc/apache2/mods-enabled/php5.conf etc/apache2/mods-enabled/status.conf program^files/apache^group/apache/conf/httpd.conf program^files/apache^group/apache2/conf/httpd.conf program^files/xampp/apache/conf/apache.conf program^files/xampp/apache/conf/apache2.conf program^files/xampp/apache/conf/httpd.conf program^files/apache^group/apache/apache.conf program^files/apache^group/apache/conf/apache.conf program^files/apache^group/apache2/conf/apache.conf program^files/apache^group/apache/apache2.conf program^files/apache^group/apache/conf/apache2.conf program^files/apache^group/apache2/conf/apache2.conf program^files/apache^software^foundation/apache2.2/conf/httpd.conf volumes/macintosh_hd1/opt/httpd/conf/httpd.conf volumes/macintosh_hd1/opt/apache/conf/httpd.conf volumes/macintosh_hd1/opt/apache2/conf/httpd.conf volumes/macintosh_hd1/usr/local/php/httpd.conf.php volumes/macintosh_hd1/usr/local/php4/httpd.conf.php volumes/macintosh_hd1/usr/local/php5/httpd.conf.php volumes/webbackup/opt/apache2/conf/httpd.conf volumes/webbackup/private/etc/httpd/httpd.conf volumes/webbackup/private/etc/httpd/httpd.conf.default usr/local/etc/apache/vhosts.conf usr/local/jakarta/tomcat/conf/jakarta.conf usr/local/jakarta/tomcat/conf/server.xml usr/local/jakarta/tomcat/conf/context.xml usr/local/jakarta/tomcat/conf/workers.properties usr/local/jakarta/tomcat/conf/logging.properties usr/local/jakarta/dist/tomcat/conf/jakarta.conf usr/local/jakarta/dist/tomcat/conf/server.xml usr/local/jakarta/dist/tomcat/conf/context.xml usr/local/jakarta/dist/tomcat/conf/workers.properties usr/local/jakarta/dist/tomcat/conf/logging.properties usr/share/tomcat6/conf/server.xml usr/share/tomcat6/conf/context.xml usr/share/tomcat6/conf/workers.properties usr/share/tomcat6/conf/logging.properties var/log/tomcat6/catalina.out var/cpanel/tomcat.options usr/local/jakarta/tomcat/logs/catalina.out usr/local/jakarta/tomcat/logs/catalina.err opt/tomcat/logs/catalina.out opt/tomcat/logs/catalina.err usr/share/logs/catalina.out usr/share/logs/catalina.err usr/share/tomcat/logs/catalina.out usr/share/tomcat/logs/catalina.err usr/share/tomcat6/logs/catalina.out usr/share/tomcat6/logs/catalina.err usr/local/apache/logs/mod_jk.log usr/local/jakarta/tomcat/logs/mod_jk.log usr/local/jakarta/dist/tomcat/logs/mod_jk.log opt/[jboss]/server/default/conf/jboss-minimal.xml opt/[jboss]/server/default/conf/jboss-service.xml opt/[jboss]/server/default/conf/jndi.properties opt/[jboss]/server/default/conf/log4j.xml opt/[jboss]/server/default/conf/login-config.xml opt/[jboss]/server/default/conf/standardjaws.xml opt/[jboss]/server/default/conf/standardjboss.xml opt/[jboss]/server/default/conf/server.log.properties opt/[jboss]/server/default/deploy/jboss-logging.xml usr/local/[jboss]/server/default/conf/jboss-minimal.xml usr/local/[jboss]/server/default/conf/jboss-service.xml usr/local/[jboss]/server/default/conf/jndi.properties usr/local/[jboss]/server/default/conf/log4j.xml usr/local/[jboss]/server/default/conf/login-config.xml usr/local/[jboss]/server/default/conf/standardjaws.xml usr/local/[jboss]/server/default/conf/standardjboss.xml usr/local/[jboss]/server/default/conf/server.log.properties usr/local/[jboss]/server/default/deploy/jboss-logging.xml private/tmp/[jboss]/server/default/conf/jboss-minimal.xml private/tmp/[jboss]/server/default/conf/jboss-service.xml private/tmp/[jboss]/server/default/conf/jndi.properties private/tmp/[jboss]/server/default/conf/log4j.xml private/tmp/[jboss]/server/default/conf/login-config.xml private/tmp/[jboss]/server/default/conf/standardjaws.xml private/tmp/[jboss]/server/default/conf/standardjboss.xml private/tmp/[jboss]/server/default/conf/server.log.properties private/tmp/[jboss]/server/default/deploy/jboss-logging.xml tmp/[jboss]/server/default/conf/jboss-minimal.xml tmp/[jboss]/server/default/conf/jboss-service.xml tmp/[jboss]/server/default/conf/jndi.properties tmp/[jboss]/server/default/conf/log4j.xml tmp/[jboss]/server/default/conf/login-config.xml tmp/[jboss]/server/default/conf/standardjaws.xml tmp/[jboss]/server/default/conf/standardjboss.xml tmp/[jboss]/server/default/conf/server.log.properties tmp/[jboss]/server/default/deploy/jboss-logging.xml program^files/[jboss]/server/default/conf/jboss-minimal.xml program^files/[jboss]/server/default/conf/jboss-service.xml program^files/[jboss]/server/default/conf/jndi.properties program^files/[jboss]/server/default/conf/log4j.xml program^files/[jboss]/server/default/conf/login-config.xml program^files/[jboss]/server/default/conf/standardjaws.xml program^files/[jboss]/server/default/conf/standardjboss.xml program^files/[jboss]/server/default/conf/server.log.properties program^files/[jboss]/server/default/deploy/jboss-logging.xml [jboss]/server/default/conf/jboss-minimal.xml [jboss]/server/default/conf/jboss-service.xml [jboss]/server/default/conf/jndi.properties [jboss]/server/default/conf/log4j.xml [jboss]/server/default/conf/login-config.xml [jboss]/server/default/conf/standardjaws.xml [jboss]/server/default/conf/standardjboss.xml [jboss]/server/default/conf/server.log.properties [jboss]/server/default/deploy/jboss-logging.xml opt/[jboss]/server/default/log/server.log opt/[jboss]/server/default/log/boot.log usr/local/[jboss]/server/default/log/server.log usr/local/[jboss]/server/default/log/boot.log private/tmp/[jboss]/server/default/log/server.log private/tmp/[jboss]/server/default/log/boot.log tmp/[jboss]/server/default/log/server.log tmp/[jboss]/server/default/log/boot.log program^files/[jboss]/server/default/log/server.log program^files/[jboss]/server/default/log/boot.log [jboss]/server/default/log/server.log [jboss]/server/default/log/boot.log var/log/lighttpd.error.log var/log/lighttpd.access.log var/lighttpd.log var/logs/access.log var/log/lighttpd/ var/log/lighttpd/error.log var/log/lighttpd/access.www.log var/log/lighttpd/error.www.log var/log/lighttpd/access.log usr/local/apache2/logs/lighttpd.error.log usr/local/apache2/logs/lighttpd.log usr/local/apache/logs/lighttpd.error.log usr/local/apache/logs/lighttpd.log usr/local/lighttpd/log/lighttpd.error.log usr/local/lighttpd/log/access.log var/log/lighttpd/{domain}/access.log var/log/lighttpd/{domain}/error.log usr/home/user/var/log/lighttpd.error.log usr/home/user/var/log/apache.log home/user/lighttpd/lighttpd.conf usr/home/user/lighttpd/lighttpd.conf etc/lighttpd/lighthttpd.conf usr/local/etc/lighttpd.conf usr/local/lighttpd/conf/lighttpd.conf usr/local/etc/lighttpd.conf.new var/www/.lighttpdpassword var/log/nginx/access_log var/log/nginx/error_log var/log/nginx/access.log var/log/nginx/error.log var/log/nginx.access_log var/log/nginx.error_log logs/access_log logs/error_log etc/nginx/nginx.conf usr/local/etc/nginx/nginx.conf usr/local/nginx/conf/nginx.conf usr/local/zeus/web/global.cfg usr/local/zeus/web/log/errors opt/lsws/conf/httpd_conf.xml usr/local/lsws/conf/httpd_conf.xml opt/lsws/logs/error.log opt/lsws/logs/access.log usr/local/lsws/logs/error.log usr/local/logs/access.log usr/local/samba/lib/log.user usr/local/logs/samba.log var/log/samba/log.smbd var/log/samba/log.nmbd var/log/samba.log var/log/samba.log1 var/log/samba.log2 var/log/log.smb etc/samba/netlogon etc/smbpasswd etc/smb.conf etc/samba/dhcp.conf etc/samba/smb.conf etc/samba/samba.conf etc/samba/smb.conf.user etc/samba/smbpasswd etc/samba/smbusers etc/samba/private/smbpasswd usr/local/etc/smb.conf usr/local/samba/lib/smb.conf.user etc/dhcp3/dhclient.conf etc/dhcp3/dhcpd.conf etc/dhcp/dhclient.conf program^files/vidalia^bundle/polipo/polipo.conf etc/tor/tor-tsocks.conf etc/stunnel/stunnel.conf etc/tsocks.conf etc/tinyproxy/tinyproxy.conf etc/miredo-server.conf etc/miredo.conf etc/miredo/miredo-server.conf etc/miredo/miredo.conf etc/wicd/dhclient.conf.template.default etc/wicd/manager-settings.conf etc/wicd/wired-settings.conf etc/wicd/wireless-settings.conf var/log/ipfw.log var/log/ipfw var/log/ipfw/ipfw.log var/log/ipfw.today etc/ipfw.rules etc/ipfw.conf etc/firewall.rules winnt/system32/logfiles/firewall/pfirewall.log winnt/system32/logfiles/firewall/pfirewall.log.old windows/system32/logfiles/firewall/pfirewall.log windows/system32/logfiles/firewall/pfirewall.log.old etc/clamav/clamd.conf etc/clamav/freshclam.conf etc/x11/xorg.conf etc/x11/xorg.conf-vesa etc/x11/xorg.conf-vmware etc/x11/xorg.conf.beforevmwaretoolsinstall etc/x11/xorg.conf.orig etc/bluetooth/input.conf etc/bluetooth/main.conf etc/bluetooth/network.conf etc/bluetooth/rfcomm.conf proc/self/environ proc/self/mounts proc/self/stat proc/self/status proc/self/cmdline proc/self/fd/0 proc/self/fd/1 proc/self/fd/2 proc/self/fd/3 proc/self/fd/4 proc/self/fd/5 proc/self/fd/6 proc/self/fd/7 proc/self/fd/8 proc/self/fd/9 proc/self/fd/10 proc/self/fd/11 proc/self/fd/12 proc/self/fd/13 proc/self/fd/14 proc/self/fd/15 proc/version proc/devices proc/cpuinfo proc/meminfo proc/net/tcp proc/net/udp etc/bash_completion.d/debconf root/.bash_logout root/.bash_history root/.bash_config root/.bashrc etc/bash.bashrc var/adm/syslog var/adm/sulog var/adm/utmp var/adm/utmpx var/adm/wtmp var/adm/wtmpx var/adm/lastlog/username usr/spool/lp/log var/adm/lp/lpd-errs usr/lib/cron/log var/adm/loginlog var/adm/pacct var/adm/dtmp var/adm/acct/sum/loginlog var/adm/x0msgs var/adm/crash/vmcore var/adm/crash/unix etc/newsyslog.conf var/adm/qacct var/adm/ras/errlog var/adm/ras/bootlog var/adm/cron/log etc/utmp etc/security/lastlog etc/security/failedlogin usr/spool/mqueue/syslog var/adm/messages var/adm/aculogs var/adm/aculog var/adm/vold.log var/adm/log/asppp.log var/log/poplog var/log/authlog var/lp/logs/lpsched var/lp/logs/lpnet var/lp/logs/requests var/cron/log var/saf/_log var/saf/port/log var/log/news.all var/log/news/news.all var/log/news/news.crit var/log/news/news.err var/log/news/news.notice var/log/news/suck.err var/log/news/suck.notice var/log/messages var/log/messages.1 var/log/user.log var/log/user.log.1 var/log/auth.log var/log/pm-powersave.log var/log/xorg.0.log var/log/daemon.log var/log/daemon.log.1 var/log/kern.log var/log/kern.log.1 var/log/mail.err var/log/mail.info var/log/mail.warn var/log/ufw.log var/log/boot.log var/log/syslog var/log/syslog.1 tmp/access.log etc/sensors.conf etc/sensors3.conf etc/host.conf etc/pam.conf etc/resolv.conf etc/apt/apt.conf etc/inetd.conf etc/syslog.conf etc/sysctl.conf etc/sysctl.d/10-console-messages.conf etc/sysctl.d/10-network-security.conf etc/sysctl.d/10-process-security.conf etc/sysctl.d/wine.sysctl.conf etc/security/access.conf etc/security/group.conf etc/security/limits.conf etc/security/namespace.conf etc/security/pam_env.conf etc/security/sepermit.conf etc/security/time.conf etc/ssh/sshd_config etc/adduser.conf etc/deluser.conf etc/avahi/avahi-daemon.conf etc/ca-certificates.conf etc/ca-certificates.conf.dpkg-old etc/casper.conf etc/chkrootkit.conf etc/debconf.conf etc/dns2tcpd.conf etc/e2fsck.conf etc/esound/esd.conf etc/etter.conf etc/fuse.conf etc/foremost.conf etc/hdparm.conf etc/kernel-img.conf etc/kernel-pkg.conf etc/ld.so.conf etc/ltrace.conf etc/mail/sendmail.conf etc/manpath.config etc/kbd/config etc/ldap/ldap.conf etc/logrotate.conf etc/mtools.conf etc/smi.conf etc/updatedb.conf etc/pulse/client.conf usr/share/adduser/adduser.conf etc/hostname etc/networks etc/timezone etc/modules etc/passwd etc/passwd~ etc/passwd- etc/shadow etc/shadow~ etc/shadow- etc/fstab etc/motd etc/hosts etc/group etc/group- etc/alias etc/crontab etc/crypttab etc/exports etc/mtab etc/hosts.allow etc/hosts.deny etc/os-release etc/password.master etc/profile etc/default/grub etc/resolvconf/update-libc.d/sendmail etc/inittab etc/issue etc/issue.net etc/login.defs etc/sudoers etc/sysconfig/network-scripts/ifcfg-eth0 etc/redhat-release etc/debian_version etc/fedora-release etc/mandrake-release etc/slackware-release etc/suse-release etc/security/group etc/security/passwd etc/security/user etc/security/environ etc/security/limits etc/security/opasswd boot/grub/grub.cfg boot/grub/menu.lst root/.ksh_history root/.xauthority usr/lib/security/mkuser.default var/log/squirrelmail.log var/log/apache2/squirrelmail.log var/log/apache2/squirrelmail.err.log var/lib/squirrelmail/prefs/squirrelmail.log var/log/mail.log etc/squirrelmail/apache.conf etc/squirrelmail/config_local.php etc/squirrelmail/default_pref etc/squirrelmail/index.php etc/squirrelmail/config_default.php etc/squirrelmail/config.php etc/squirrelmail/filters_setup.php etc/squirrelmail/sqspell_config.php etc/squirrelmail/config/config.php etc/httpd/conf.d/squirrelmail.conf usr/share/squirrelmail/config/config.php private/etc/squirrelmail/config/config.php srv/www/htdos/squirrelmail/config/config.php var/www/squirrelmail/config/config.php var/www/html/squirrelmail/config/config.php var/www/html/squirrelmail-1.2.9/config/config.php usr/share/squirrelmail/plugins/squirrel_logger/setup.php usr/local/squirrelmail/www/readme windows/system32/drivers/etc/hosts windows/system32/drivers/etc/lmhosts.sam windows/system32/drivers/etc/networks windows/system32/drivers/etc/protocol windows/system32/drivers/etc/services /boot.ini windows/debug/netsetup.log windows/comsetup.log windows/repair/setup.log windows/setupact.log windows/setupapi.log windows/setuperr.log windows/updspapi.log windows/wmsetup.log windows/windowsupdate.log windows/odbc.ini usr/local/psa/admin/htdocs/domains/databases/phpmyadmin/libraries/config.default.php etc/apache2/conf.d/phpmyadmin.conf etc/phpmyadmin/config.inc.php etc/openldap/ldap.conf etc/cups/acroread.conf etc/cups/cupsd.conf etc/cups/cupsd.conf.default etc/cups/pdftops.conf etc/cups/printers.conf windows/system32/macromed/flash/flashinstall.log windows/system32/macromed/flash/install.log etc/cvs-cron.conf etc/cvs-pserver.conf etc/subversion/config etc/modprobe.d/vmware-tools.conf etc/updatedb.conf.beforevmwaretoolsinstall etc/vmware-tools/config etc/vmware-tools/tpvmlp.conf etc/vmware-tools/vmware-tools-libraries.conf var/log/vmware/hostd.log var/log/vmware/hostd-1.log wp-config.php wp-config.bak wp-config.old wp-config.temp wp-config.tmp wp-config.txt config.yml config_dev.yml config_prod.yml config_test.yml parameters.yml routing.yml security.yml services.yml sites/default/default.settings.php sites/default/settings.php sites/default/settings.local.php app/etc/local.xml sftp-config.json web.config includes/config.php includes/configure.php config.inc.php localsettings.php inc/config.php typo3conf/localconf.php config/app.php config/custom.php config/database.php /configuration.php /config.php var/mail/www-data etc/network/ etc/init/ inetpub/wwwroot/global.asa system32/inetsrv/config/applicationhost.config system32/inetsrv/config/administration.config system32/inetsrv/config/redirection.config system32/config/default system32/config/sam system32/config/system system32/config/software winnt/repair/sam._ package.json package-lock.json gruntfile.js npm-debug.log ormconfig.json tsconfig.json webpack.config.js yarn.lock\" \\\n    \"id:455100,\\\n    phase:2,\\\n    block,\\\n    t:lowercase,t:none,t:normalizePath,\\\n    severity:'CRITICAL',\\\n    setvar:'tx.inbound_anomaly_score_pl1=+%{tx.critical_anomaly_score}'\"",
        "description": "OS File Access Attempt",
        "rule_id": "455",
        "sec_rule_id": "455100",
        "severity": "CRITICAL"
    },
    {
        "comment": "# OS File Access Attempt",
        "content": "SecRule REQUEST_COOKIES|REQUEST_COOKIES_NAMES \"@pm .htaccess .htdigest .htpasswd .addressbook .aptitude/config .bash_config .bash_history .bash_logout .bash_profile .bashrc .cache/notify-osd.log .config/odesk/odesk^team.conf .cshrc .dockerignore .drush/ .eslintignore .fbcindex .forward .gitattributes .gitconfig .gnupg/ .hplip/hplip.conf .ksh_history .lesshst .lftp/ .lhistory .lldb-history .local/share/mc/ .lynx_cookies .my.cnf .mysql_history .nano_history .node_repl_history .nsr .pearrc .php_history .pinerc .pki/ .proclog .procmailrc .profile .psql_history .python_history .rediscli_history .rhistory .rhosts .sh_history .sqlite_history .ssh/authorized_keys .ssh/config .ssh/id_dsa .ssh/id_dsa.pub .ssh/id_rsa .ssh/id_rsa.pub .ssh/identity .ssh/identity.pub .ssh/known_hosts .subversion/auth .subversion/config .subversion/servers .tconn/tconn.conf .tcshrc .vidalia/vidalia.conf .viminfo .vimrc .www_acl .wwwacl .xauthority .zhistory .zshrc .zsh_history .nsconfig etc/redis.conf etc/redis-sentinel.conf etc/php.ini bin/php.ini etc/httpd/php.ini usr/lib/php.ini usr/lib/php/php.ini usr/local/etc/php.ini usr/local/lib/php.ini usr/local/php/lib/php.ini usr/local/php4/lib/php.ini usr/local/php5/lib/php.ini usr/local/apache/conf/php.ini etc/php4.4/fcgi/php.ini etc/php4/apache/php.ini etc/php4/apache2/php.ini etc/php5/apache/php.ini etc/php5/apache2/php.ini etc/php/php.ini etc/php/php4/php.ini etc/php/apache/php.ini etc/php/apache2/php.ini web/conf/php.ini usr/local/zend/etc/php.ini opt/xampp/etc/php.ini var/local/www/conf/php.ini etc/php/cgi/php.ini etc/php4/cgi/php.ini etc/php5/cgi/php.ini home2/bin/stable/apache/php.ini home/bin/stable/apache/php.ini etc/httpd/conf.d/php.conf php5/php.ini php4/php.ini php/php.ini windows/php.ini winnt/php.ini apache/php/php.ini xampp/apache/bin/php.ini netserver/bin/stable/apache/php.ini volumes/macintosh_hd1/usr/local/php/lib/php.ini etc/mono/1.0/machine.config etc/mono/2.0/machine.config etc/mono/2.0/web.config etc/mono/config usr/local/cpanel/logs/stats_log usr/local/cpanel/logs/access_log usr/local/cpanel/logs/error_log usr/local/cpanel/logs/license_log usr/local/cpanel/logs/login_log var/cpanel/cpanel.config var/log/sw-cp-server/error_log usr/local/psa/admin/logs/httpsd_access_log usr/local/psa/admin/logs/panel.log var/log/sso/sso.log usr/local/psa/admin/conf/php.ini etc/sw-cp-server/applications.d/plesk.conf usr/local/psa/admin/conf/site_isolation_settings.ini usr/local/sb/config etc/sw-cp-server/applications.d/00-sso-cpserver.conf etc/sso/sso_config.ini etc/mysql/conf.d/old_passwords.cnf var/log/mysql/mysql-bin.log var/log/mysql/mysql-bin.index var/log/mysql/data/mysql-bin.index var/log/mysql.log var/log/mysql.err var/log/mysqlderror.log var/log/mysql/mysql.log var/log/mysql/mysql-slow.log var/log/mysql-bin.index var/log/data/mysql-bin.index var/mysql.log var/mysql-bin.index var/data/mysql-bin.index program^files/mysql/mysql^server^5.0/data/{host}.err program^files/mysql/mysql^server^5.0/data/mysql.log program^files/mysql/mysql^server^5.0/data/mysql.err program^files/mysql/mysql^server^5.0/data/mysql-bin.log program^files/mysql/mysql^server^5.0/data/mysql-bin.index program^files/mysql/data/{host}.err program^files/mysql/data/mysql.log program^files/mysql/data/mysql.err program^files/mysql/data/mysql-bin.log program^files/mysql/data/mysql-bin.index mysql/data/{host}.err mysql/data/mysql.log mysql/data/mysql.err mysql/data/mysql-bin.log mysql/data/mysql-bin.index usr/local/mysql/data/mysql.log usr/local/mysql/data/mysql.err usr/local/mysql/data/mysql-bin.log usr/local/mysql/data/mysql-slow.log usr/local/mysql/data/mysqlderror.log usr/local/mysql/data/{host}.err usr/local/mysql/data/mysql-bin.index var/lib/mysql/my.cnf etc/mysql/my.cnf etc/my.cnf program^files/mysql/mysql^server^5.0/my.ini program^files/mysql/mysql^server^5.0/my.cnf program^files/mysql/my.ini program^files/mysql/my.cnf mysql/my.ini mysql/my.cnf mysql/bin/my.ini var/postgresql/log/postgresql.log var/log/postgresql/postgresql.log var/log/postgres/pg_backup.log var/log/postgres/postgres.log var/log/postgresql.log var/log/pgsql/pgsql.log var/log/postgresql/postgresql-8.1-main.log var/log/postgresql/postgresql-8.3-main.log var/log/postgresql/postgresql-8.4-main.log var/log/postgresql/postgresql-9.0-main.log var/log/postgresql/postgresql-9.1-main.log var/log/pgsql8.log var/log/postgresql/postgres.log var/log/pgsql_log var/log/postgresql/main.log var/log/cron/var/log/postgres.log usr/internet/pgsql/data/postmaster.log usr/local/pgsql/data/postgresql.log usr/local/pgsql/data/pg_log postgresql/log/pgadmin.log var/lib/pgsql/data/postgresql.conf var/postgresql/db/postgresql.conf var/nm2/postgresql.conf usr/local/pgsql/data/postgresql.conf usr/local/pgsql/data/pg_hba.conf usr/internet/pgsql/data/pg_hba.conf usr/local/pgsql/data/passwd usr/local/pgsql/bin/pg_passwd etc/postgresql/postgresql.conf etc/postgresql/pg_hba.conf home/postgres/data/postgresql.conf home/postgres/data/pg_version home/postgres/data/pg_ident.conf home/postgres/data/pg_hba.conf program^files/postgresql/8.3/data/pg_hba.conf program^files/postgresql/8.3/data/pg_ident.conf program^files/postgresql/8.3/data/postgresql.conf program^files/postgresql/8.4/data/pg_hba.conf program^files/postgresql/8.4/data/pg_ident.conf program^files/postgresql/8.4/data/postgresql.conf program^files/postgresql/9.0/data/pg_hba.conf program^files/postgresql/9.0/data/pg_ident.conf program^files/postgresql/9.0/data/postgresql.conf program^files/postgresql/9.1/data/pg_hba.conf program^files/postgresql/9.1/data/pg_ident.conf program^files/postgresql/9.1/data/postgresql.conf wamp/logs/access.log wamp/logs/apache_error.log wamp/logs/genquery.log wamp/logs/mysql.log wamp/logs/slowquery.log wamp/bin/apache/apache2.2.22/logs/access.log wamp/bin/apache/apache2.2.22/logs/error.log wamp/bin/apache/apache2.2.21/logs/access.log wamp/bin/apache/apache2.2.21/logs/error.log wamp/bin/mysql/mysql5.5.24/data/mysql-bin.index wamp/bin/mysql/mysql5.5.16/data/mysql-bin.index wamp/bin/apache/apache2.2.21/conf/httpd.conf wamp/bin/apache/apache2.2.22/conf/httpd.conf wamp/bin/apache/apache2.2.21/wampserver.conf wamp/bin/apache/apache2.2.22/wampserver.conf wamp/bin/apache/apache2.2.22/conf/wampserver.conf wamp/bin/mysql/mysql5.5.24/my.ini wamp/bin/mysql/mysql5.5.24/wampserver.conf wamp/bin/mysql/mysql5.5.16/my.ini wamp/bin/mysql/mysql5.5.16/wampserver.conf wamp/bin/php/php5.3.8/php.ini wamp/bin/php/php5.4.3/php.ini xampp/apache/logs/access.log xampp/apache/logs/error.log xampp/mysql/data/mysql-bin.index xampp/mysql/data/mysql.err xampp/mysql/data/{host}.err xampp/sendmail/sendmail.log xampp/apache/conf/httpd.conf xampp/filezillaftp/filezilla^server.xml xampp/mercurymail/mercury.ini xampp/php/php.ini xampp/phpmyadmin/config.inc.php xampp/sendmail/sendmail.ini xampp/webalizer/webalizer.conf opt/lampp/etc/httpd.conf xampp/htdocs/aca.txt xampp/htdocs/admin.php xampp/htdocs/leer.txt usr/local/apache/logs/audit_log usr/local/apache2/logs/audit_log logs/security_debug_log logs/security_log usr/local/apache/conf/modsec.conf usr/local/apache2/conf/modsec.conf winnt/system32/logfiles/msftpsvc winnt/system32/logfiles/msftpsvc1 winnt/system32/logfiles/msftpsvc2 windows/system32/logfiles/msftpsvc windows/system32/logfiles/msftpsvc1 windows/system32/logfiles/msftpsvc2 etc/logrotate.d/proftpd www/logs/proftpd.system.log var/log/proftpd var/log/proftpd/xferlog.legacy var/log/proftpd.access_log var/log/proftpd.xferlog etc/pam.d/proftpd etc/proftp.conf etc/protpd/proftpd.conf etc/vhcs2/proftpd/proftpd.conf etc/proftpd/modules.conf var/log/vsftpd.log etc/vsftpd.chroot_list etc/logrotate.d/vsftpd.log etc/vsftpd/vsftpd.conf etc/vsftpd.conf etc/chrootusers var/log/xferlog var/adm/log/xferlog etc/wu-ftpd/ftpaccess etc/wu-ftpd/ftphosts etc/wu-ftpd/ftpusers var/log/pure-ftpd/pure-ftpd.log logs/pure-ftpd.log var/log/pureftpd.log usr/sbin/pure-config.pl usr/etc/pure-ftpd.conf etc/pure-ftpd/pure-ftpd.conf usr/local/etc/pure-ftpd.conf usr/local/etc/pureftpd.pdb usr/local/pureftpd/etc/pureftpd.pdb usr/local/pureftpd/sbin/pure-config.pl usr/local/pureftpd/etc/pure-ftpd.conf etc/pure-ftpd.conf etc/pure-ftpd/pure-ftpd.pdb etc/pureftpd.pdb etc/pureftpd.passwd etc/pure-ftpd/pureftpd.pdb usr/ports/ftp/pure-ftpd/pure-ftpd.conf usr/ports/ftp/pure-ftpd/pureftpd.pdb usr/ports/ftp/pure-ftpd/pureftpd.passwd usr/ports/net/pure-ftpd/pure-ftpd.conf usr/ports/net/pure-ftpd/pureftpd.pdb usr/ports/net/pure-ftpd/pureftpd.passwd usr/pkgsrc/net/pureftpd/pure-ftpd.conf usr/pkgsrc/net/pureftpd/pureftpd.pdb usr/pkgsrc/net/pureftpd/pureftpd.passwd usr/ports/contrib/pure-ftpd/pure-ftpd.conf usr/ports/contrib/pure-ftpd/pureftpd.pdb usr/ports/contrib/pure-ftpd/pureftpd.passwd var/log/muddleftpd usr/sbin/mudlogd etc/muddleftpd/mudlog etc/muddleftpd.com etc/muddleftpd/mudlogd.conf etc/muddleftpd/muddleftpd.conf var/log/muddleftpd.conf usr/sbin/mudpasswd etc/muddleftpd/muddleftpd.passwd etc/muddleftpd/passwd var/log/ftp-proxy/ftp-proxy.log var/log/ftp-proxy var/log/ftplog etc/logrotate.d/ftp etc/ftpchroot etc/ftphosts etc/ftpusers var/log/exim_mainlog var/log/exim/mainlog var/log/maillog var/log/exim_paniclog var/log/exim/paniclog var/log/exim/rejectlog var/log/exim_rejectlog winnt/system32/logfiles/smtpsvc winnt/system32/logfiles/smtpsvc1 winnt/system32/logfiles/smtpsvc2 winnt/system32/logfiles/smtpsvc3 winnt/system32/logfiles/smtpsvc4 winnt/system32/logfiles/smtpsvc5 windows/system32/logfiles/smtpsvc windows/system32/logfiles/smtpsvc1 windows/system32/logfiles/smtpsvc2 windows/system32/logfiles/smtpsvc3 windows/system32/logfiles/smtpsvc4 windows/system32/logfiles/smtpsvc5 etc/osxhttpd/osxhttpd.conf system/library/webobjects/adaptors/apache2.2/apache.conf etc/apache2/sites-available/default etc/apache2/sites-available/default-ssl etc/apache2/sites-enabled/000-default etc/apache2/sites-enabled/default etc/apache2/apache2.conf etc/apache2/ports.conf usr/local/etc/apache/httpd.conf usr/pkg/etc/httpd/httpd.conf usr/pkg/etc/httpd/httpd-default.conf usr/pkg/etc/httpd/httpd-vhosts.conf etc/httpd/mod_php.conf etc/httpd/extra/httpd-ssl.conf etc/rc.d/rc.httpd usr/local/apache/conf/httpd.conf.default usr/local/apache/conf/access.conf usr/local/apache22/conf/httpd.conf usr/local/apache22/httpd.conf usr/local/etc/apache22/conf/httpd.conf usr/local/apps/apache22/conf/httpd.conf etc/apache22/conf/httpd.conf etc/apache22/httpd.conf opt/apache22/conf/httpd.conf usr/local/etc/apache2/vhosts.conf usr/local/apache/conf/vhosts.conf usr/local/apache2/conf/vhosts.conf usr/local/apache/conf/vhosts-custom.conf usr/local/apache2/conf/vhosts-custom.conf etc/apache/default-server.conf etc/apache2/default-server.conf usr/local/apache2/conf/extra/httpd-ssl.conf usr/local/apache2/conf/ssl.conf etc/httpd/conf.d usr/local/etc/apache22/httpd.conf usr/local/etc/apache2/httpd.conf etc/apache2/httpd2.conf etc/apache2/ssl-global.conf etc/apache2/vhosts.d/00_default_vhost.conf apache/conf/httpd.conf etc/apache/httpd.conf etc/httpd/conf http/httpd.conf usr/local/apache1.3/conf/httpd.conf usr/local/etc/httpd/conf var/apache/conf/httpd.conf var/www/conf www/apache/conf/httpd.conf www/conf/httpd.conf etc/init.d etc/apache/access.conf etc/rc.conf www/logs/freebsddiary-error.log www/logs/freebsddiary-access_log library/webserver/documents/index.html library/webserver/documents/index.htm library/webserver/documents/default.html library/webserver/documents/default.htm library/webserver/documents/index.php library/webserver/documents/default.php var/log/webmin/miniserv.log usr/local/etc/webmin/miniserv.conf etc/webmin/miniserv.conf usr/local/etc/webmin/miniserv.users etc/webmin/miniserv.users winnt/system32/logfiles/w3svc/inetsvn1.log winnt/system32/logfiles/w3svc1/inetsvn1.log winnt/system32/logfiles/w3svc2/inetsvn1.log winnt/system32/logfiles/w3svc3/inetsvn1.log windows/system32/logfiles/w3svc/inetsvn1.log windows/system32/logfiles/w3svc1/inetsvn1.log windows/system32/logfiles/w3svc2/inetsvn1.log windows/system32/logfiles/w3svc3/inetsvn1.log var/log/httpd/access_log var/log/httpd/error_log apache/logs/error.log apache/logs/access.log apache2/logs/error.log apache2/logs/access.log logs/error.log logs/access.log etc/httpd/logs/access_log etc/httpd/logs/access.log etc/httpd/logs/error_log etc/httpd/logs/error.log usr/local/apache/logs/access_log usr/local/apache/logs/access.log usr/local/apache/logs/error_log usr/local/apache/logs/error.log usr/local/apache2/logs/access_log usr/local/apache2/logs/access.log usr/local/apache2/logs/error_log usr/local/apache2/logs/error.log var/www/logs/access_log var/www/logs/access.log var/www/logs/error_log var/www/logs/error.log var/log/httpd/access.log var/log/httpd/error.log var/log/apache/access_log var/log/apache/access.log var/log/apache/error_log var/log/apache/error.log var/log/apache2/access_log var/log/apache2/access.log var/log/apache2/error_log var/log/apache2/error.log var/log/access_log var/log/access.log var/log/error_log var/log/error.log opt/lampp/logs/access_log opt/lampp/logs/error_log opt/xampp/logs/access_log opt/xampp/logs/error_log opt/lampp/logs/access.log opt/lampp/logs/error.log opt/xampp/logs/access.log opt/xampp/logs/error.log program^files/apache^group/apache/logs/access.log program^files/apache^group/apache/logs/error.log program^files/apache^software^foundation/apache2.2/logs/error.log program^files/apache^software^foundation/apache2.2/logs/access.log opt/apache/apache.conf opt/apache/conf/apache.conf opt/apache2/apache.conf opt/apache2/conf/apache.conf opt/httpd/apache.conf opt/httpd/conf/apache.conf etc/httpd/apache.conf etc/apache2/apache.conf etc/httpd/conf/apache.conf usr/local/apache/apache.conf usr/local/apache/conf/apache.conf usr/local/apache2/apache.conf usr/local/apache2/conf/apache.conf usr/local/php/apache.conf.php usr/local/php4/apache.conf.php usr/local/php5/apache.conf.php usr/local/php/apache.conf usr/local/php4/apache.conf usr/local/php5/apache.conf private/etc/httpd/apache.conf opt/apache/apache2.conf opt/apache/conf/apache2.conf opt/apache2/apache2.conf opt/apache2/conf/apache2.conf opt/httpd/apache2.conf opt/httpd/conf/apache2.conf etc/httpd/apache2.conf etc/httpd/conf/apache2.conf usr/local/apache/apache2.conf usr/local/apache/conf/apache2.conf usr/local/apache2/apache2.conf usr/local/apache2/conf/apache2.conf usr/local/php/apache2.conf.php usr/local/php4/apache2.conf.php usr/local/php5/apache2.conf.php usr/local/php/apache2.conf usr/local/php4/apache2.conf usr/local/php5/apache2.conf private/etc/httpd/apache2.conf usr/local/apache/conf/httpd.conf usr/local/apache2/conf/httpd.conf etc/httpd/conf/httpd.conf etc/apache/apache.conf etc/apache/conf/httpd.conf etc/apache2/httpd.conf usr/apache2/conf/httpd.conf usr/apache/conf/httpd.conf usr/local/etc/apache/conf/httpd.conf usr/local/apache/httpd.conf usr/local/apache2/httpd.conf usr/local/httpd/conf/httpd.conf usr/local/etc/apache2/conf/httpd.conf usr/local/etc/httpd/conf/httpd.conf usr/local/apps/apache2/conf/httpd.conf usr/local/apps/apache/conf/httpd.conf usr/local/php/httpd.conf.php usr/local/php4/httpd.conf.php usr/local/php5/httpd.conf.php usr/local/php/httpd.conf usr/local/php4/httpd.conf usr/local/php5/httpd.conf etc/apache2/conf/httpd.conf etc/http/conf/httpd.conf etc/httpd/httpd.conf etc/http/httpd.conf etc/httpd.conf opt/apache/conf/httpd.conf opt/apache2/conf/httpd.conf var/www/conf/httpd.conf private/etc/httpd/httpd.conf private/etc/httpd/httpd.conf.default etc/apache2/vhosts.d/default_vhost.include etc/apache2/conf.d/charset etc/apache2/conf.d/security etc/apache2/envvars etc/apache2/mods-available/autoindex.conf etc/apache2/mods-available/deflate.conf etc/apache2/mods-available/dir.conf etc/apache2/mods-available/mem_cache.conf etc/apache2/mods-available/mime.conf etc/apache2/mods-available/proxy.conf etc/apache2/mods-available/setenvif.conf etc/apache2/mods-available/ssl.conf etc/apache2/mods-enabled/alias.conf etc/apache2/mods-enabled/deflate.conf etc/apache2/mods-enabled/dir.conf etc/apache2/mods-enabled/mime.conf etc/apache2/mods-enabled/negotiation.conf etc/apache2/mods-enabled/php5.conf etc/apache2/mods-enabled/status.conf program^files/apache^group/apache/conf/httpd.conf program^files/apache^group/apache2/conf/httpd.conf program^files/xampp/apache/conf/apache.conf program^files/xampp/apache/conf/apache2.conf program^files/xampp/apache/conf/httpd.conf program^files/apache^group/apache/apache.conf program^files/apache^group/apache/conf/apache.conf program^files/apache^group/apache2/conf/apache.conf program^files/apache^group/apache/apache2.conf program^files/apache^group/apache/conf/apache2.conf program^files/apache^group/apache2/conf/apache2.conf program^files/apache^software^foundation/apache2.2/conf/httpd.conf volumes/macintosh_hd1/opt/httpd/conf/httpd.conf volumes/macintosh_hd1/opt/apache/conf/httpd.conf volumes/macintosh_hd1/opt/apache2/conf/httpd.conf volumes/macintosh_hd1/usr/local/php/httpd.conf.php volumes/macintosh_hd1/usr/local/php4/httpd.conf.php volumes/macintosh_hd1/usr/local/php5/httpd.conf.php volumes/webbackup/opt/apache2/conf/httpd.conf volumes/webbackup/private/etc/httpd/httpd.conf volumes/webbackup/private/etc/httpd/httpd.conf.default usr/local/etc/apache/vhosts.conf usr/local/jakarta/tomcat/conf/jakarta.conf usr/local/jakarta/tomcat/conf/server.xml usr/local/jakarta/tomcat/conf/context.xml usr/local/jakarta/tomcat/conf/workers.properties usr/local/jakarta/tomcat/conf/logging.properties usr/local/jakarta/dist/tomcat/conf/jakarta.conf usr/local/jakarta/dist/tomcat/conf/server.xml usr/local/jakarta/dist/tomcat/conf/context.xml usr/local/jakarta/dist/tomcat/conf/workers.properties usr/local/jakarta/dist/tomcat/conf/logging.properties usr/share/tomcat6/conf/server.xml usr/share/tomcat6/conf/context.xml usr/share/tomcat6/conf/workers.properties usr/share/tomcat6/conf/logging.properties var/log/tomcat6/catalina.out var/cpanel/tomcat.options usr/local/jakarta/tomcat/logs/catalina.out usr/local/jakarta/tomcat/logs/catalina.err opt/tomcat/logs/catalina.out opt/tomcat/logs/catalina.err usr/share/logs/catalina.out usr/share/logs/catalina.err usr/share/tomcat/logs/catalina.out usr/share/tomcat/logs/catalina.err usr/share/tomcat6/logs/catalina.out usr/share/tomcat6/logs/catalina.err usr/local/apache/logs/mod_jk.log usr/local/jakarta/tomcat/logs/mod_jk.log usr/local/jakarta/dist/tomcat/logs/mod_jk.log opt/[jboss]/server/default/conf/jboss-minimal.xml opt/[jboss]/server/default/conf/jboss-service.xml opt/[jboss]/server/default/conf/jndi.properties opt/[jboss]/server/default/conf/log4j.xml opt/[jboss]/server/default/conf/login-config.xml opt/[jboss]/server/default/conf/standardjaws.xml opt/[jboss]/server/default/conf/standardjboss.xml opt/[jboss]/server/default/conf/server.log.properties opt/[jboss]/server/default/deploy/jboss-logging.xml usr/local/[jboss]/server/default/conf/jboss-minimal.xml usr/local/[jboss]/server/default/conf/jboss-service.xml usr/local/[jboss]/server/default/conf/jndi.properties usr/local/[jboss]/server/default/conf/log4j.xml usr/local/[jboss]/server/default/conf/login-config.xml usr/local/[jboss]/server/default/conf/standardjaws.xml usr/local/[jboss]/server/default/conf/standardjboss.xml usr/local/[jboss]/server/default/conf/server.log.properties usr/local/[jboss]/server/default/deploy/jboss-logging.xml private/tmp/[jboss]/server/default/conf/jboss-minimal.xml private/tmp/[jboss]/server/default/conf/jboss-service.xml private/tmp/[jboss]/server/default/conf/jndi.properties private/tmp/[jboss]/server/default/conf/log4j.xml private/tmp/[jboss]/server/default/conf/login-config.xml private/tmp/[jboss]/server/default/conf/standardjaws.xml private/tmp/[jboss]/server/default/conf/standardjboss.xml private/tmp/[jboss]/server/default/conf/server.log.properties private/tmp/[jboss]/server/default/deploy/jboss-logging.xml tmp/[jboss]/server/default/conf/jboss-minimal.xml tmp/[jboss]/server/default/conf/jboss-service.xml tmp/[jboss]/server/default/conf/jndi.properties tmp/[jboss]/server/default/conf/log4j.xml tmp/[jboss]/server/default/conf/login-config.xml tmp/[jboss]/server/default/conf/standardjaws.xml tmp/[jboss]/server/default/conf/standardjboss.xml tmp/[jboss]/server/default/conf/server.log.properties tmp/[jboss]/server/default/deploy/jboss-logging.xml program^files/[jboss]/server/default/conf/jboss-minimal.xml program^files/[jboss]/server/default/conf/jboss-service.xml program^files/[jboss]/server/default/conf/jndi.properties program^files/[jboss]/server/default/conf/log4j.xml program^files/[jboss]/server/default/conf/login-config.xml program^files/[jboss]/server/default/conf/standardjaws.xml program^files/[jboss]/server/default/conf/standardjboss.xml program^files/[jboss]/server/default/conf/server.log.properties program^files/[jboss]/server/default/deploy/jboss-logging.xml [jboss]/server/default/conf/jboss-minimal.xml [jboss]/server/default/conf/jboss-service.xml [jboss]/server/default/conf/jndi.properties [jboss]/server/default/conf/log4j.xml [jboss]/server/default/conf/login-config.xml [jboss]/server/default/conf/standardjaws.xml [jboss]/server/default/conf/standardjboss.xml [jboss]/server/default/conf/server.log.properties [jboss]/server/default/deploy/jboss-logging.xml opt/[jboss]/server/default/log/server.log opt/[jboss]/server/default/log/boot.log usr/local/[jboss]/server/default/log/server.log usr/local/[jboss]/server/default/log/boot.log private/tmp/[jboss]/server/default/log/server.log private/tmp/[jboss]/server/default/log/boot.log tmp/[jboss]/server/default/log/server.log tmp/[jboss]/server/default/log/boot.log program^files/[jboss]/server/default/log/server.log program^files/[jboss]/server/default/log/boot.log [jboss]/server/default/log/server.log [jboss]/server/default/log/boot.log var/log/lighttpd.error.log var/log/lighttpd.access.log var/lighttpd.log var/logs/access.log var/log/lighttpd/ var/log/lighttpd/error.log var/log/lighttpd/access.www.log var/log/lighttpd/error.www.log var/log/lighttpd/access.log usr/local/apache2/logs/lighttpd.error.log usr/local/apache2/logs/lighttpd.log usr/local/apache/logs/lighttpd.error.log usr/local/apache/logs/lighttpd.log usr/local/lighttpd/log/lighttpd.error.log usr/local/lighttpd/log/access.log var/log/lighttpd/{domain}/access.log var/log/lighttpd/{domain}/error.log usr/home/user/var/log/lighttpd.error.log usr/home/user/var/log/apache.log home/user/lighttpd/lighttpd.conf usr/home/user/lighttpd/lighttpd.conf etc/lighttpd/lighthttpd.conf usr/local/etc/lighttpd.conf usr/local/lighttpd/conf/lighttpd.conf usr/local/etc/lighttpd.conf.new var/www/.lighttpdpassword var/log/nginx/access_log var/log/nginx/error_log var/log/nginx/access.log var/log/nginx/error.log var/log/nginx.access_log var/log/nginx.error_log logs/access_log logs/error_log etc/nginx/nginx.conf usr/local/etc/nginx/nginx.conf usr/local/nginx/conf/nginx.conf usr/local/zeus/web/global.cfg usr/local/zeus/web/log/errors opt/lsws/conf/httpd_conf.xml usr/local/lsws/conf/httpd_conf.xml opt/lsws/logs/error.log opt/lsws/logs/access.log usr/local/lsws/logs/error.log usr/local/logs/access.log usr/local/samba/lib/log.user usr/local/logs/samba.log var/log/samba/log.smbd var/log/samba/log.nmbd var/log/samba.log var/log/samba.log1 var/log/samba.log2 var/log/log.smb etc/samba/netlogon etc/smbpasswd etc/smb.conf etc/samba/dhcp.conf etc/samba/smb.conf etc/samba/samba.conf etc/samba/smb.conf.user etc/samba/smbpasswd etc/samba/smbusers etc/samba/private/smbpasswd usr/local/etc/smb.conf usr/local/samba/lib/smb.conf.user etc/dhcp3/dhclient.conf etc/dhcp3/dhcpd.conf etc/dhcp/dhclient.conf program^files/vidalia^bundle/polipo/polipo.conf etc/tor/tor-tsocks.conf etc/stunnel/stunnel.conf etc/tsocks.conf etc/tinyproxy/tinyproxy.conf etc/miredo-server.conf etc/miredo.conf etc/miredo/miredo-server.conf etc/miredo/miredo.conf etc/wicd/dhclient.conf.template.default etc/wicd/manager-settings.conf etc/wicd/wired-settings.conf etc/wicd/wireless-settings.conf var/log/ipfw.log var/log/ipfw var/log/ipfw/ipfw.log var/log/ipfw.today etc/ipfw.rules etc/ipfw.conf etc/firewall.rules winnt/system32/logfiles/firewall/pfirewall.log winnt/system32/logfiles/firewall/pfirewall.log.old windows/system32/logfiles/firewall/pfirewall.log windows/system32/logfiles/firewall/pfirewall.log.old etc/clamav/clamd.conf etc/clamav/freshclam.conf etc/x11/xorg.conf etc/x11/xorg.conf-vesa etc/x11/xorg.conf-vmware etc/x11/xorg.conf.beforevmwaretoolsinstall etc/x11/xorg.conf.orig etc/bluetooth/input.conf etc/bluetooth/main.conf etc/bluetooth/network.conf etc/bluetooth/rfcomm.conf etc/bash_completion.d/debconf root/.bash_logout root/.bash_history root/.bash_config root/.bashrc etc/bash.bashrc var/adm/syslog var/adm/sulog var/adm/utmp var/adm/utmpx var/adm/wtmp var/adm/wtmpx var/adm/lastlog/username usr/spool/lp/log var/adm/lp/lpd-errs usr/lib/cron/log var/adm/loginlog var/adm/pacct var/adm/dtmp var/adm/acct/sum/loginlog var/adm/x0msgs var/adm/crash/vmcore var/adm/crash/unix etc/newsyslog.conf var/adm/qacct var/adm/ras/errlog var/adm/ras/bootlog var/adm/cron/log etc/utmp etc/security/lastlog etc/security/failedlogin usr/spool/mqueue/syslog var/adm/messages var/adm/aculogs var/adm/aculog var/adm/vold.log var/adm/log/asppp.log var/log/poplog var/log/authlog var/lp/logs/lpsched var/lp/logs/lpnet var/lp/logs/requests var/cron/log var/saf/_log var/saf/port/log var/log/news.all var/log/news/news.all var/log/news/news.crit var/log/news/news.err var/log/news/news.notice var/log/news/suck.err var/log/news/suck.notice var/log/messages var/log/messages.1 var/log/user.log var/log/user.log.1 var/log/auth.log var/log/pm-powersave.log var/log/xorg.0.log var/log/daemon.log var/log/daemon.log.1 var/log/kern.log var/log/kern.log.1 var/log/mail.err var/log/mail.info var/log/mail.warn var/log/ufw.log var/log/boot.log var/log/syslog var/log/syslog.1 tmp/access.log etc/sensors.conf etc/sensors3.conf etc/host.conf etc/pam.conf etc/resolv.conf etc/apt/apt.conf etc/inetd.conf etc/syslog.conf etc/sysctl.conf etc/sysctl.d/10-console-messages.conf etc/sysctl.d/10-network-security.conf etc/sysctl.d/10-process-security.conf etc/sysctl.d/wine.sysctl.conf etc/security/access.conf etc/security/group.conf etc/security/limits.conf etc/security/namespace.conf etc/security/pam_env.conf etc/security/sepermit.conf etc/security/time.conf etc/ssh/sshd_config etc/adduser.conf etc/deluser.conf etc/avahi/avahi-daemon.conf etc/ca-certificates.conf etc/ca-certificates.conf.dpkg-old etc/casper.conf etc/chkrootkit.conf etc/debconf.conf etc/dns2tcpd.conf etc/e2fsck.conf etc/esound/esd.conf etc/etter.conf etc/fuse.conf etc/foremost.conf etc/hdparm.conf etc/kernel-img.conf etc/kernel-pkg.conf etc/ld.so.conf etc/ltrace.conf etc/mail/sendmail.conf etc/manpath.config etc/kbd/config etc/ldap/ldap.conf etc/logrotate.conf etc/mtools.conf etc/smi.conf etc/updatedb.conf etc/pulse/client.conf usr/share/adduser/adduser.conf etc/hostname etc/networks etc/timezone etc/modules etc/passwd etc/passwd~ etc/passwd- etc/shadow etc/shadow~ etc/shadow- etc/fstab etc/motd etc/hosts etc/group etc/group- etc/alias etc/crontab etc/crypttab etc/exports etc/mtab etc/hosts.allow etc/hosts.deny etc/os-release etc/password.master etc/profile etc/default/grub etc/resolvconf/update-libc.d/sendmail etc/inittab etc/issue etc/issue.net etc/login.defs etc/sudoers etc/sysconfig/network-scripts/ifcfg-eth0 etc/redhat-release etc/debian_version etc/fedora-release etc/mandrake-release etc/slackware-release etc/suse-release etc/security/group etc/security/passwd etc/security/user etc/security/environ etc/security/limits etc/security/opasswd boot/grub/grub.cfg boot/grub/menu.lst root/.ksh_history root/.xauthority usr/lib/security/mkuser.default var/log/squirrelmail.log var/log/apache2/squirrelmail.log var/log/apache2/squirrelmail.err.log var/lib/squirrelmail/prefs/squirrelmail.log var/log/mail.log etc/squirrelmail/apache.conf etc/squirrelmail/config_local.php etc/squirrelmail/default_pref etc/squirrelmail/index.php etc/squirrelmail/config_default.php etc/squirrelmail/config.php etc/squirrelmail/filters_setup.php etc/squirrelmail/sqspell_config.php etc/squirrelmail/config/config.php etc/httpd/conf.d/squirrelmail.conf usr/share/squirrelmail/config/config.php private/etc/squirrelmail/config/config.php srv/www/htdos/squirrelmail/config/config.php var/www/squirrelmail/config/config.php var/www/html/squirrelmail/config/config.php var/www/html/squirrelmail-1.2.9/config/config.php usr/share/squirrelmail/plugins/squirrel_logger/setup.php usr/local/squirrelmail/www/readme windows/system32/drivers/etc/hosts windows/system32/drivers/etc/lmhosts.sam windows/system32/drivers/etc/networks windows/system32/drivers/etc/protocol windows/system32/drivers/etc/services /boot.ini windows/debug/netsetup.log windows/comsetup.log windows/repair/setup.log windows/setupact.log windows/setupapi.log windows/setuperr.log windows/updspapi.log windows/wmsetup.log windows/windowsupdate.log windows/odbc.ini usr/local/psa/admin/htdocs/domains/databases/phpmyadmin/libraries/config.default.php etc/apache2/conf.d/phpmyadmin.conf etc/phpmyadmin/config.inc.php etc/openldap/ldap.conf etc/cups/acroread.conf etc/cups/cupsd.conf etc/cups/cupsd.conf.default etc/cups/pdftops.conf etc/cups/printers.conf windows/system32/macromed/flash/flashinstall.log windows/system32/macromed/flash/install.log etc/cvs-cron.conf etc/cvs-pserver.conf etc/subversion/config etc/modprobe.d/vmware-tools.conf etc/updatedb.conf.beforevmwaretoolsinstall etc/vmware-tools/config etc/vmware-tools/tpvmlp.conf etc/vmware-tools/vmware-tools-libraries.conf var/log/vmware/hostd.log var/log/vmware/hostd-1.log wp-config.php wp-config.bak wp-config.old wp-config.temp wp-config.tmp wp-config.txt config.yml config_dev.yml config_prod.yml config_test.yml parameters.yml routing.yml security.yml services.yml sites/default/default.settings.php sites/default/settings.php sites/default/settings.local.php app/etc/local.xml sftp-config.json web.config includes/config.php includes/configure.php config.inc.php localsettings.php inc/config.php typo3conf/localconf.php config/app.php config/custom.php config/database.php /configuration.php /config.php var/mail/www-data etc/network/ etc/init/ inetpub/wwwroot/global.asa system32/inetsrv/config/applicationhost.config system32/inetsrv/config/administration.config system32/inetsrv/config/redirection.config system32/config/default system32/config/sam system32/config/system system32/config/software winnt/repair/sam._ package.json package-lock.json gruntfile.js npm-debug.log ormconfig.json tsconfig.json webpack.config.js yarn.lock proc/0 proc/1 proc/2 proc/3 proc/4 proc/5 proc/6 proc/7 proc/8 proc/9 proc/acpi proc/asound proc/bootconfig proc/buddyinfo proc/bus proc/cgroups proc/cmdline proc/config.gz proc/consoles proc/cpuinfo proc/crypto proc/devices proc/diskstats proc/dma proc/docker proc/driver proc/dynamic_debug proc/execdomains proc/fb proc/filesystems proc/fs proc/interrupts proc/iomem proc/ioports proc/ipmi proc/irq proc/kallsyms proc/kcore proc/keys proc/keys proc/key-users proc/kmsg proc/kpagecgroup proc/kpagecount proc/kpageflags proc/latency_stats proc/loadavg proc/locks proc/mdstat proc/meminfo proc/misc proc/modules proc/mounts proc/mpt proc/mtd proc/mtrr proc/net proc/net/tcp proc/net/udp proc/pagetypeinfo proc/partitions proc/pressure proc/sched_debug proc/schedstat proc/scsi proc/self proc/self/cmdline proc/self/environ proc/self/fd/0 proc/self/fd/1 proc/self/fd/10 proc/self/fd/11 proc/self/fd/12 proc/self/fd/13 proc/self/fd/14 proc/self/fd/15 proc/self/fd/2 proc/self/fd/3 proc/self/fd/4 proc/self/fd/5 proc/self/fd/6 proc/self/fd/7 proc/self/fd/8 proc/self/fd/9 proc/self/mounts proc/self/stat proc/self/status proc/slabinfo proc/softirqs proc/stat proc/swaps proc/sys proc/sysrq-trigger proc/sysvipc proc/thread-self proc/timer_list proc/timer_stats proc/tty proc/uptime proc/version proc/version_signature proc/vmallocinfo proc/vmstat proc/zoneinfo sys/block sys/bus sys/class sys/dev sys/devices sys/firmware sys/fs sys/hypervisor sys/kernel sys/module sys/power\" \\\n    \"id:455101,\\\n    phase:2,\\\n    block,\\\n    t:lowercase,t:none,t:normalizePath,\\\n    severity:'CRITICAL',\\\n    setvar:'tx.inbound_anomaly_score_pl1=+%{tx.critical_anomaly_score}'\"",
        "description": "OS File Access Attempt",
        "rule_id": "455",
        "sec_rule_id": "455101",
        "severity": "CRITICAL"
    },
    {
        "comment": "# Obfuscated Path Traversal Attack (/../)",
        "content": "SecRule REQUEST_URI|REQUEST_HEADERS \"@rx (?:\\x5c|(?:%(?:c(?:0%(?:[2aq]f|5c|9v)|1%(?:[19p]c|8s|af))|2(?:5(?:c(?:0%25af|1%259c)|2f|5c)|%46|f)|(?:(?:f(?:8%8)?0%8|e)0%80%a|bg%q)f|%3(?:2(?:%(?:%6|4)6|F)|5%%63)|u(?:221[56]|002f|EFC8|F025)|1u|5c)|0x(?:2f|5c)|/))(?:%(?:(?:f(?:(?:c%80|8)%8)?0%8|e)0%80%ae|2(?:(?:5(?:c0%25a|2))?e|%45)|u(?:(?:002|ff0)e|2024)|%32(?:%(?:%6|4)5|E)|c0(?:%[256aef]e|\\.))|\\.(?:%0[01]|\\?)?|\\?\\.?|0x2e){2}(?:\\x5c|(?:%(?:c(?:0%(?:[2aq]f|5c|9v)|1%(?:[19p]c|8s|af))|2(?:5(?:c(?:0%25af|1%259c)|2f|5c)|%46|f)|(?:(?:f(?:8%8)?0%8|e)0%80%a|bg%q)f|%3(?:2(?:%(?:%6|4)6|F)|5%%63)|u(?:221[56]|002f|EFC8|F025)|1u|5c)|0x(?:2f|5c)|/))\" \\\n    \"id:455102,\\\n    phase:2,\\\n    block,\\\n    t:none,t:normalizePath,\\\n    severity:'CRITICAL',\\\n    setvar:'tx.inbound_anomaly_score_pl1=+%{tx.critical_anomaly_score}'\"",
        "description": "Obfuscated Path Traversal Attack (/../)",
        "rule_id": "455",
        "sec_rule_id": "455102",
        "severity": "CRITICAL"
    },
    {
        "comment": "# Obfuscated Path Traversal Attack (/../)",
        "content": "SecRule REQUEST_URI|REQUEST_HEADERS \"@rx (?:(?:^|[\\\\\\\\/])\\.\\.[\\\\\\\\/]|[\\\\\\\\/]\\.\\.(?:[\\\\\\\\/]|$))\" \\\n    \"id:455103,\\\n    phase:2,\\\n    block,\\\n    t:none,t:removeNulls,\\\n    severity:'CRITICAL',\\\n    setvar:'tx.inbound_anomaly_score_pl1=+%{tx.critical_anomaly_score}'\"",
        "description": "Obfuscated Path Traversal Attack (/../)",
        "rule_id": "455",
        "sec_rule_id": "455103",
        "severity": "CRITICAL"
    },
    {
        "comment": "# Obfuscated Path Traversal Attack (/../) on any parameter",
        "content": "SecRule ARGS_NAMES|ARGS \"@rx (?:\\x5c|(?:%(?:c(?:0%(?:[2aq]f|5c|9v)|1%(?:[19p]c|8s|af))|2(?:5(?:c(?:0%25af|1%259c)|2f|5c)|%46|f)|(?:(?:f(?:8%8)?0%8|e)0%80%a|bg%q)f|%3(?:2(?:%(?:%6|4)6|F)|5%%63)|u(?:221[56]|002f|EFC8|F025)|1u|5c)|0x(?:2f|5c)|/))(?:%(?:(?:f(?:(?:c%80|8)%8)?0%8|e)0%80%ae|2(?:(?:5(?:c0%25a|2))?e|%45)|u(?:(?:002|ff0)e|2024)|%32(?:%(?:%6|4)5|E)|c0(?:%[256aef]e|\\.))|\\.(?:%0[01]|\\?)?|\\?\\.?|0x2e){2}(?:\\x5c|(?:%(?:c(?:0%(?:[2aq]f|5c|9v)|1%(?:[19p]c|8s|af))|2(?:5(?:c(?:0%25af|1%259c)|2f|5c)|%46|f)|(?:(?:f(?:8%8)?0%8|e)0%80%a|bg%q)f|%3(?:2(?:%(?:%6|4)6|F)|5%%63)|u(?:221[56]|002f|EFC8|F025)|1u|5c)|0x(?:2f|5c)|/))\" \\\n    \"id:455104,\\\n    phase:2,\\\n    block,\\\n    t:none,\\\n    severity:'CRITICAL',\\\n    setvar:'tx.inbound_anomaly_score_pl1=+%{tx.critical_anomaly_score}'\"",
        "description": "Obfuscated Path Traversal Attack (/../) on any parameter",
        "rule_id": "455",
        "sec_rule_id": "455104",
        "severity": "CRITICAL"
    },
    {
        "comment": "# Obfuscated Path Traversal Attack (/../) on any parameter",
        "content": "SecRule ARGS_NAMES|ARGS \"@rx (?:(?:^|[\\\\\\\\/])\\.\\.[\\\\\\\\/]|[\\\\\\\\/]\\.\\.(?:[\\\\\\\\/]|$))\" \\\n    \"id:455105,\\\n    phase:2,\\\n    block,\\\n    t:none,t:removeNulls,\\\n    severity:'CRITICAL',\\\n    setvar:'tx.inbound_anomaly_score_pl1=+%{tx.critical_anomaly_score}'\"",
        "description": "Obfuscated Path Traversal Attack (/../) on any parameter",
        "rule_id": "455",
        "sec_rule_id": "455105",
        "severity": "CRITICAL"
    },
    {
        "comment": "# Restricted File Access Attempt",
        "content": "SecRule REQUEST_FILENAME \"@pm .htaccess .htdigest .htpasswd .addressbook .aptitude/config .bash_config .bash_history .bash_logout .bash_profile .bashrc .cache/notify-osd.log .config/odesk/odesk^team.conf .cshrc .dockerignore .drush/ .eslintignore .fbcindex .forward .gitattributes .gitconfig .gnupg/ .hplip/hplip.conf .ksh_history .lesshst .lftp/ .lhistory .lldb-history .local/share/mc/ .lynx_cookies .my.cnf .mysql_history .nano_history .node_repl_history .nsr .pearrc .php_history .pinerc .pki/ .proclog .procmailrc .profile .psql_history .python_history .rediscli_history .rhistory .rhosts .sh_history .sqlite_history .ssh/authorized_keys .ssh/config .ssh/id_dsa .ssh/id_dsa.pub .ssh/id_rsa .ssh/id_rsa.pub .ssh/identity .ssh/identity.pub .ssh/known_hosts .subversion/auth .subversion/config .subversion/servers .tconn/tconn.conf .tcshrc .vidalia/vidalia.conf .viminfo .vimrc .www_acl .wwwacl .xauthority .zhistory .zshrc .zsh_history .nsconfig /.git/ /.gitignore /.hg/ /.hgignore /.svn/ wp-config.php wp-config.bak wp-config.old wp-config.temp wp-config.tmp wp-config.txt /config/config.yml /config/config_dev.yml /config/config_prod.yml /config/config_test.yml /config/parameters.yml /config/routing.yml /config/security.yml /config/services.yml /sites/default/default.settings.php /sites/default/settings.php /sites/default/settings.local.php /config/settings.inc.php /app/etc/local.xml /sftp-config.json /web.config /package.json /package-lock.json /gruntfile.js /npm-debug.log /ormconfig.json /tsconfig.json /webpack.config.js /yarn.lock /composer.json /composer.lock /packages.json /.env /.ds_store /.ws_ftp.ini .netrc .thunderbird/ .vmware/ .kube/ .java/ .anydesk/ .docker/ .npm/ .nvm/ .minikube/ .atom/ .aws/config .aws/credentials .cups/ .dbus/ .boto .gem/ .gnonme/ .gsutil/ .idea nbproject/ bower.json .bowerrc .eslintrc .jshintrc .gitlab-ci.yml .travis.yml database.yml dockerfile .php_cs.dist .phpcs.xml phpcs.xml .phpcs.xml.dist phpcs.xml.dist desktop.ini thumbs.db .user.ini php.ini weblogic.xml soapconfig.xml php_error.log php_errors.log web-inf/ proc/0 proc/1 proc/2 proc/3 proc/4 proc/5 proc/6 proc/7 proc/8 proc/9 proc/acpi proc/asound proc/bootconfig proc/buddyinfo proc/bus proc/cgroups proc/cmdline proc/config.gz proc/consoles proc/cpuinfo proc/crypto proc/devices proc/diskstats proc/dma proc/docker proc/driver proc/dynamic_debug proc/execdomains proc/fb proc/filesystems proc/fs proc/interrupts proc/iomem proc/ioports proc/ipmi proc/irq proc/kallsyms proc/kcore proc/keys proc/keys proc/key-users proc/kmsg proc/kpagecgroup proc/kpagecount proc/kpageflags proc/latency_stats proc/loadavg proc/locks proc/mdstat proc/meminfo proc/misc proc/modules proc/mounts proc/mpt proc/mtd proc/mtrr proc/net proc/net/tcp proc/net/udp proc/pagetypeinfo proc/partitions proc/pressure proc/sched_debug proc/schedstat proc/scsi proc/self proc/self/cmdline proc/self/environ proc/self/fd/0 proc/self/fd/1 proc/self/fd/10 proc/self/fd/11 proc/self/fd/12 proc/self/fd/13 proc/self/fd/14 proc/self/fd/15 proc/self/fd/2 proc/self/fd/3 proc/self/fd/4 proc/self/fd/5 proc/self/fd/6 proc/self/fd/7 proc/self/fd/8 proc/self/fd/9 proc/self/mounts proc/self/stat proc/self/status proc/slabinfo proc/softirqs proc/stat proc/swaps proc/sys proc/sysrq-trigger proc/sysvipc proc/thread-self proc/timer_list proc/timer_stats proc/tty proc/uptime proc/version proc/version_signature proc/vmallocinfo proc/vmstat proc/zoneinfo sys/block sys/bus sys/class sys/dev sys/devices sys/firmware sys/fs sys/hypervisor sys/kernel sys/module sys/power\" \\\n    \"id:455106,\\\n    phase:2,\\\n    block,\\\n    t:lowercase,t:none,t:normalizePath,\\\n    severity:'CRITICAL',\\\n    setvar:'tx.inbound_anomaly_score_pl1=+%{tx.critical_anomaly_score}'\"",
        "description": "Restricted File Access Attempt",
        "rule_id": "455",
        "sec_rule_id": "455106",
        "severity": "CRITICAL"
    },
    {
        "comment": "",
        "content": "SecRule TX:DETECTION_PARANOIA_LEVEL \"@lt 1\" \"id:456011,phase:1,pass,nolog,skipAfter:END-REQUEST-456-APPLICATION-ATTACK-NOSQLI\"",
        "rule_id": "456",
        "sec_rule_id": "456011"
    },
    {
        "comment": "",
        "content": "SecRule TX:DETECTION_PARANOIA_LEVEL \"@lt 1\" \"id:456012,phase:2,pass,nolog,skipAfter:END-REQUEST-456-APPLICATION-ATTACK-NOSQLI\"",
        "rule_id": "456",
        "sec_rule_id": "456012"
    },
    {
        "comment": "# Finds basic MongoDB SQL injection attempts",
        "content": "SecRule REQUEST_COOKIES|REQUEST_COOKIES_NAMES|ARGS_NAMES|ARGS \"@rx (?i:(?:\\[\\$(?:ne|eq|lte?|gte?|n?in|mod|all|size|exists|type|slice|x?or|div|like|between|and)\\]))\" \\\n    \"id:456100,\\\n    phase:2,\\\n    block,\\\n    t:none,\\\n    severity:'CRITICAL',\\\n    setvar:'tx.inbound_anomaly_score_pl1=+%{tx.critical_anomaly_score}'\"",
        "description": "Finds basic MongoDB SQL injection attempts",
        "rule_id": "456",
        "sec_rule_id": "456100",
        "severity": "CRITICAL"
    },
    {
        "comment": "# Look for Cassandra injections",
        "content": "SecRule ARGS|ARGS_NAMES|REQUEST_HEADERS|REQUEST_URI \"@rx \\ballow\\s+filtering\\b\" \\\n    \"id:456101,\\\n    phase:2,\\\n    block,\\\n    t:none,t:removeComments,\\\n    severity:'CRITICAL',\\\n    setvar:'tx.inbound_anomaly_score_pl1=+%{tx.critical_anomaly_score}'\"",
        "description": "Look for Cassandra injections",
        "rule_id": "456",
        "sec_rule_id": "456101",
        "severity": "CRITICAL"
    },
    {
        "comment": "# NoSQL: Detect common exploitation strategy",
        "content": "SecRule ARGS_NAMES|REQUEST_HEADERS_NAMES|REQUEST_COOKIES_NAMES \"@rx ^\\$(eq|ne|(l|g)te?|n?in|not|(n|x|)or|and|regex|where|expr|exists)$\" \\\n    \"id:456102,\\\n    phase:2,\\\n    block,\\\n    t:none,\\\n    severity:'CRITICAL',\\\n    setvar:'tx.inbound_anomaly_score_pl1=+%{tx.critical_anomaly_score}'\"",
        "description": "NoSQL: Detect common exploitation strategy",
        "rule_id": "456",
        "sec_rule_id": "456102",
        "severity": "CRITICAL"
    },
    {
        "comment": "",
        "content": "SecRule TX:DETECTION_PARANOIA_LEVEL \"@lt 1\" \"id:457011,phase:1,pass,nolog,skipAfter:END-REQUEST-457-APPLICATION-ATTACK-PHP\"",
        "rule_id": "457",
        "sec_rule_id": "457011"
    },
    {
        "comment": "",
        "content": "SecRule TX:DETECTION_PARANOIA_LEVEL \"@lt 1\" \"id:457012,phase:2,pass,nolog,skipAfter:END-REQUEST-457-APPLICATION-ATTACK-PHP\"",
        "rule_id": "457",
        "sec_rule_id": "457012"
    },
    {
        "comment": "# PHP Injection Attack: High-Risk PHP Function Call Found",
        "content": "SecRule REQUEST_COOKIES|REQUEST_COOKIES_NAMES|REQUEST_FILENAME|ARGS_NAMES|ARGS \"@rx \\b(?:s(?:e(?:t(?:_(?:e(?:xception|rror)_handler|magic_quotes_runtime|include_path)|defaultstub)|ssion_s(?:et_save_handler|tart))|qlite_(?:(?:(?:unbuffered|single|array)_)?query|create_(?:aggregate|function)|p?open|exec)|tr(?:eam_(?:context_create|socket_client)|ipc?slashes|rev)|implexml_load_(?:string|file)|ocket_c(?:onnect|reate)|h(?:ow_sourc|a1_fil)e|pl_autoload_register|ystem)|p(?:r(?:eg_(?:replace(?:_callback(?:_array)?)?|match(?:_all)?|split)|oc_(?:(?:terminat|clos|nic)e|get_status|open)|int_r)|o(?:six_(?:get(?:(?:e[gu]|g)id|login|pwnam)|mk(?:fifo|nod)|ttyname|kill)|pen)|hp(?:_(?:strip_whitespac|unam)e|version|info)|g_(?:(?:execut|prepar)e|connect|query)|a(?:rse_(?:ini_file|str)|ssthru)|utenv)|r(?:unkit_(?:function_(?:re(?:defin|nam)e|copy|add)|method_(?:re(?:defin|nam)e|copy|add)|constant_(?:redefine|add))|e(?:(?:gister_(?:shutdown|tick)|name)_function|ad(?:(?:gz)?file|_exif_data|dir))|awurl(?:de|en)code)|i(?:mage(?:createfrom(?:(?:jpe|pn)g|x[bp]m|wbmp|gif)|(?:jpe|pn)g|g(?:d2?|if)|2?wbmp|xbm)|s_(?:(?:(?:execut|write?|read)ab|fi)le|dir)|ni_(?:get(?:_all)?|set)|terator_apply|ptcembed)|g(?:et(?:_(?:c(?:urrent_use|fg_va)r|meta_tags)|my(?:[gpu]id|inode)|(?:lastmo|cw)d|imagesize|env)|z(?:(?:(?:defla|wri)t|encod|fil)e|compress|open|read)|lob)|a(?:rray_(?:u(?:intersect(?:_u?assoc)?|diff(?:_u?assoc)?)|intersect_u(?:assoc|key)|diff_u(?:assoc|key)|filter|reduce|map)|ssert(?:_options)?)|h(?:tml(?:specialchars(?:_decode)?|_entity_decode|entities)|(?:ash(?:_(?:update|hmac))?|ighlight)_file|e(?:ader_register_callback|x2bin))|f(?:i(?:le(?:(?:[acm]tim|inod)e|(?:_exist|perm)s|group)?|nfo_open)|tp_(?:nb_(?:ge|pu)|connec|ge|pu)t|(?:unction_exis|pu)ts|write|open)|o(?:b_(?:get_(?:c(?:ontents|lean)|flush)|end_(?:clean|flush)|clean|flush|start)|dbc_(?:result(?:_all)?|exec(?:ute)?|connect)|pendir)|m(?:b_(?:ereg(?:_(?:replace(?:_callback)?|match)|i(?:_replace)?)?|parse_str)|(?:ove_uploaded|d5)_file|ethod_exists|ysql_query|kdir)|e(?:x(?:if_(?:t(?:humbnail|agname)|imagetype|read_data)|ec)|scapeshell(?:arg|cmd)|rror_reporting|val)|c(?:url_(?:file_create|exec|init)|onvert_uuencode|reate_function|hr)|u(?:n(?:serialize|pack)|rl(?:de|en)code|[ak]?sort)|(?:json_(?:de|en)cod|debug_backtrac|tmpfil)e|b(?:(?:son_(?:de|en)|ase64_en)code|zopen)|var_dump)(?:\\s|/\\*.*\\*/|//.*|#.*)*\\(.*\\)\" \\\n    \"id:457100,\\\n    phase:2,\\\n    block,\\\n    t:none,\\\n    severity:'CRITICAL',\\\n    setvar:'tx.inbound_anomaly_score_pl1=+%{tx.critical_anomaly_score}'\"",
        "description": "PHP Injection Attack: High-Risk PHP Function Call Found",
        "rule_id": "457",
        "sec_rule_id": "457100",
        "severity": "CRITICAL"
    },
    {
        "comment": "# PHP Injection Attack: High-Risk PHP Function Name Found",
        "content": "SecRule REQUEST_COOKIES|REQUEST_COOKIES_NAMES|REQUEST_FILENAME|ARGS_NAMES|ARGS \"@pm __halt_compiler apache_child_terminate base64_decode bzdecompress call_user_func call_user_func_array call_user_method call_user_method_array convert_uudecode file_get_contents file_put_contents fsockopen get_class_methods get_class_vars get_defined_constants get_defined_functions get_defined_vars gzdecode gzinflate gzuncompress include_once invokeargs pcntl_exec pcntl_fork pfsockopen posix_getcwd posix_getpwuid posix_getuid posix_uname reflectionfunction require_once shell_exec str_rot13 sys_get_temp_dir wp_remote_fopen wp_remote_get wp_remote_head wp_remote_post wp_remote_request wp_safe_remote_get wp_safe_remote_head wp_safe_remote_post wp_safe_remote_request zlib_decode\" \\\n    \"id:457101,\\\n    phase:2,\\\n    block,\\\n    t:lowercase,t:none,\\\n    severity:'CRITICAL',\\\n    setvar:'tx.inbound_anomaly_score_pl1=+%{tx.critical_anomaly_score}'\"",
        "description": "PHP Injection Attack: High-Risk PHP Function Name Found",
        "rule_id": "457",
        "sec_rule_id": "457101",
        "severity": "CRITICAL"
    },
    {
        "comment": "# PHP Injection Attack: I/O Stream Found",
        "content": "SecRule REQUEST_COOKIES|REQUEST_COOKIES_NAMES|ARGS_NAMES|ARGS \"@rx php://(?:std(?:in|out|err)|(?:in|out)put|fd|memory|temp|filter)\" \\\n    \"id:457102,\\\n    phase:2,\\\n    block,\\\n    t:none,\\\n    severity:'CRITICAL',\\\n    setvar:'tx.inbound_anomaly_score_pl1=+%{tx.critical_anomaly_score}'\"",
        "description": "PHP Injection Attack: I/O Stream Found",
        "rule_id": "457",
        "sec_rule_id": "457102",
        "severity": "CRITICAL"
    },
    {
        "comment": "# PHP Injection Attack: PHP Script File Upload Found",
        "content": "SecRule FILES|REQUEST_HEADERS:x-filename|REQUEST_HEADERS:x_filename|REQUEST_HEADERS:x.filename|REQUEST_HEADERS:x-file-name \"@rx .*\\.(?:php\\d*|phtml)\\.*$\" \\\n    \"id:457103,\\\n    phase:2,\\\n    block,\\\n    t:lowercase,t:none,\\\n    severity:'CRITICAL',\\\n    setvar:'tx.inbound_anomaly_score_pl1=+%{tx.critical_anomaly_score}'\"",
        "description": "PHP Injection Attack: PHP Script File Upload Found",
        "rule_id": "457",
        "sec_rule_id": "457103",
        "severity": "CRITICAL"
    },
    {
        "comment": "# PHP Injection Attack: PHP Script File Upload Found",
        "content": "SecRule FILES|REQUEST_HEADERS:x-filename|REQUEST_HEADERS:x_filename|REQUEST_HEADERS:x.filename|REQUEST_HEADERS:x-file-name \"@rx .*\\.(?:php\\d*|phtml)\\..*$\" \\\n    \"id:457104,\\\n    phase:2,\\\n    block,\\\n    t:lowercase,t:none,\\\n    severity:'CRITICAL',\\\n    setvar:'tx.inbound_anomaly_score_pl1=+%{tx.critical_anomaly_score}'\"",
        "description": "PHP Injection Attack: PHP Script File Upload Found",
        "rule_id": "457",
        "sec_rule_id": "457104",
        "severity": "CRITICAL"
    },
    {
        "comment": "# PHP Injection Attack: Serialized Object Injection",
        "content": "SecRule REQUEST_COOKIES|REQUEST_COOKIES_NAMES|REQUEST_HEADERS|ARGS_NAMES|ARGS \"@rx [oOcC]:\\d+:\\\".+?\\\":\\d+:{[\\W\\w]*}\" \\\n    \"id:457105,\\\n    phase:2,\\\n    block,\\\n    t:none,\\\n    severity:'CRITICAL',\\\n    setvar:'tx.inbound_anomaly_score_pl1=+%{tx.critical_anomaly_score}'\"",
        "description": "PHP Injection Attack: Serialized Object Injection",
        "rule_id": "457",
        "sec_rule_id": "457105",
        "severity": "CRITICAL"
    },
    {
        "comment": "# PHP Injection Attack: Variable Function Call Found",
        "content": "SecRule REQUEST_COOKIES|REQUEST_COOKIES_NAMES|REQUEST_FILENAME|ARGS_NAMES|ARGS \"@rx \\$+(?:[a-zA-Z_\\x7f-\\xff][a-zA-Z0-9_\\x7f-\\xff]*|\\s*{.+})(?:\\s|\\[.+\\]|{.+}|/\\*.*\\*/|//.*|#.*)*\\(.*\\)\" \\\n    \"id:457106,\\\n    phase:2,\\\n    block,\\\n    t:none,\\\n    severity:'CRITICAL',\\\n    setvar:'tx.inbound_anomaly_score_pl1=+%{tx.critical_anomaly_score}'\"",
        "description": "PHP Injection Attack: Variable Function Call Found",
        "rule_id": "457",
        "sec_rule_id": "457106",
        "severity": "CRITICAL"
    },
    {
        "comment": "# PHP Injection Attack: Variable Function Call Found",
        "content": "SecRule REQUEST_COOKIES|REQUEST_COOKIES_NAMES|REQUEST_FILENAME|ARGS_NAMES|ARGS \"@rx (?:(?:\\(|\\[|\\\")[a-zA-Z0-9_.$\\\"'\\[\\](?:){}*\\s\\\\]+(?:\\)|\\]|\\\")[0-9_.$\\\"'\\[\\](?:){}*\\s]*\\([a-zA-Z0-9_.$\\\"'\\[\\](?:){}*\\s].*\\)|\\([\\s]*string[\\s]*\\)[\\s]*(?:\\\"|'))[;]\" \\\n    \"id:457107,\\\n    phase:2,\\\n    block,\\\n    t:none,\\\n    severity:'CRITICAL',\\\n    setvar:'tx.inbound_anomaly_score_pl1=+%{tx.critical_anomaly_score}'\"",
        "description": "PHP Injection Attack: Variable Function Call Found",
        "rule_id": "457",
        "sec_rule_id": "457107",
        "severity": "CRITICAL"
    },
    {
        "comment": "# PHP Injection Attack: Variables Found",
        "content": "SecRule REQUEST_COOKIES|REQUEST_COOKIES_NAMES|ARGS_NAMES|ARGS \"@pm $globals $http_cookie_vars $http_env_vars $http_get_vars $http_post_files $http_post_vars $http_raw_post_data $http_request_vars $http_server_vars $_cookie $_env $_files $_get $_post $_request $_server $_session $argc $argv\" \\\n    \"id:457108,\\\n    phase:2,\\\n    block,\\\n    t:lowercase,t:none,\\\n    severity:'CRITICAL',\\\n    setvar:'tx.inbound_anomaly_score_pl1=+%{tx.critical_anomaly_score}'\"",
        "description": "PHP Injection Attack: Variables Found",
        "rule_id": "457",
        "sec_rule_id": "457108",
        "severity": "CRITICAL"
    },
    {
        "comment": "# PHP Injection Attack: Variables Found",
        "content": "SecRule REQUEST_COOKIES|REQUEST_COOKIES_NAMES|ARGS_NAMES|ARGS \"@rx (?:HTTP_(?:ACCEPT(?:_(?:ENCODING|LANGUAGE|CHARSET))?|(?:X_FORWARDED_FO|REFERE)R|(?:USER_AGEN|HOS)T|CONNECTION|KEEP_ALIVE)|PATH_(?:TRANSLATED|INFO)|ORIG_PATH_INFO|QUERY_STRING|REQUEST_URI|AUTH_TYPE)\" \\\n    \"id:457109,\\\n    phase:2,\\\n    block,\\\n    t:none,\\\n    severity:'CRITICAL',\\\n    setvar:'tx.inbound_anomaly_score_pl1=+%{tx.critical_anomaly_score}'\"",
        "description": "PHP Injection Attack: Variables Found",
        "rule_id": "457",
        "sec_rule_id": "457109",
        "severity": "CRITICAL"
    },
    {
        "comment": "# PHP Injection Attack: Wrapper scheme detected",
        "content": "SecRule REQUEST_COOKIES|REQUEST_COOKIES_NAMES|ARGS_NAMES|ARGS \"@rx (?i:zlib|glob|phar|ssh2|rar|ogg|expect|zip)://\" \\\n    \"id:457110,\\\n    phase:2,\\\n    block,\\\n    t:none,t:removeNulls,\\\n    severity:'CRITICAL',\\\n    setvar:'tx.inbound_anomaly_score_pl1=+%{tx.critical_anomaly_score}'\"",
        "description": "PHP Injection Attack: Wrapper scheme detected",
        "rule_id": "457",
        "sec_rule_id": "457110",
        "severity": "CRITICAL"
    },
    {
        "comment": "",
        "content": "SecRule TX:DETECTION_PARANOIA_LEVEL \"@lt 1\" \"id:458011,phase:1,pass,nolog,skipAfter:END-REQUEST-458-APPLICATION-ATTACK-RFI\"",
        "rule_id": "458",
        "sec_rule_id": "458011"
    },
    {
        "comment": "",
        "content": "SecRule TX:DETECTION_PARANOIA_LEVEL \"@lt 1\" \"id:458012,phase:2,pass,nolog,skipAfter:END-REQUEST-458-APPLICATION-ATTACK-RFI\"",
        "rule_id": "458",
        "sec_rule_id": "458012"
    },
    {
        "comment": "# Possible Remote File Inclusion (RFI) Attack: Common RFI Vulnerable Parameter Name used w/URL Payload",
        "content": "SecRule QUERY_STRING \"@rx (?:\\binclude\\s*\\([^)]*|mosConfig_absolute_path|_CONF\\[path\\]|_SERVER\\[DOCUMENT_ROOT\\]|GALLERY_BASEDIR|path\\[docroot\\]|appserv_root|config\\[root_dir\\])=(?:file|ftps?|https?)://\" \\\n    \"id:458100,\\\n    phase:2,\\\n    block,\\\n    t:none,\\\n    severity:'CRITICAL',\\\n    setvar:'tx.inbound_anomaly_score_pl1=+%{tx.critical_anomaly_score}'\"",
        "description": "Possible Remote File Inclusion (RFI) Attack: Common RFI Vulnerable Parameter Name used w/URL Payload",
        "rule_id": "458",
        "sec_rule_id": "458100",
        "severity": "CRITICAL"
    },
    {
        "comment": "# Possible Remote File Inclusion (RFI) Attack: URL Parameter using IP Address",
        "content": "SecRule ARGS \"@rx ^(?i:file|ftps?|https?)://(?:\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3})\" \\\n    \"id:458101,\\\n    phase:2,\\\n    block,\\\n    t:none,\\\n    severity:'CRITICAL',\\\n    setvar:'tx.inbound_anomaly_score_pl1=+%{tx.critical_anomaly_score}'\"",
        "description": "Possible Remote File Inclusion (RFI) Attack: URL Parameter using IP Address",
        "rule_id": "458",
        "sec_rule_id": "458101",
        "severity": "CRITICAL"
    },
    {
        "comment": "# Possible Remote File Inclusion (RFI) Attack: URL Payload Used w/Trailing Question Mark Character (?)",
        "content": "SecRule ARGS \"@rx ^(?i:file|ftps?|https?).*?\\?+$\" \\\n    \"id:458102,\\\n    phase:2,\\\n    block,\\\n    t:none,\\\n    severity:'CRITICAL',\\\n    setvar:'tx.inbound_anomaly_score_pl1=+%{tx.critical_anomaly_score}'\"",
        "description": "Possible Remote File Inclusion (RFI) Attack: URL Payload Used w/Trailing Question Mark Character (?)",
        "rule_id": "458",
        "sec_rule_id": "458102",
        "severity": "CRITICAL"
    },
    {
        "comment": "",
        "content": "SecRule TX:DETECTION_PARANOIA_LEVEL \"@lt 1\" \"id:461011,phase:1,pass,nolog,skipAfter:END-REQUEST-461-APPLICATION-ATTACK-SECSCAN\"",
        "rule_id": "461",
        "sec_rule_id": "461011"
    },
    {
        "comment": "",
        "content": "SecRule TX:DETECTION_PARANOIA_LEVEL \"@lt 1\" \"id:461012,phase:2,pass,nolog,skipAfter:END-REQUEST-461-APPLICATION-ATTACK-SECSCAN\"",
        "rule_id": "461",
        "sec_rule_id": "461012"
    },
    {
        "comment": "# Acunetix",
        "content": "SecRule REQUEST_HEADERS:User-Agent \"@rx md5\\(acunetix_wvs_security_test\\)\" \\\n    \"id:461100,\\\n    phase:1,\\\n    block,\\\n    t:none,\\\n    severity:'CRITICAL',\\\n    setvar:'tx.inbound_anomaly_score_pl1=+%{tx.critical_anomaly_score}'\"",
        "description": "Acunetix",
        "rule_id": "461",
        "sec_rule_id": "461100",
        "severity": "CRITICAL"
    },
    {
        "comment": "# Arachni",
        "content": "SecRule REQUEST_HEADERS:User-Agent \"@rx ^Arachni\\/v\" \\\n    \"id:461101,\\\n    phase:1,\\\n    block,\\\n    t:none,\\\n    severity:'CRITICAL',\\\n    setvar:'tx.inbound_anomaly_score_pl1=+%{tx.critical_anomaly_score}'\"",
        "description": "Arachni",
        "rule_id": "461",
        "sec_rule_id": "461101",
        "severity": "CRITICAL"
    },
    {
        "comment": "# BlackWidow",
        "content": "SecRule REQUEST_HEADERS:User-Agent \"@rx (?i)\\bblack\\s?widow\\b\" \\\n    \"id:461102,\\\n    phase:1,\\\n    block,\\\n    t:none,\\\n    severity:'CRITICAL',\\\n    setvar:'tx.inbound_anomaly_score_pl1=+%{tx.critical_anomaly_score}'\"",
        "description": "BlackWidow",
        "rule_id": "461",
        "sec_rule_id": "461102",
        "severity": "CRITICAL"
    },
    {
        "comment": "# Blind Sql Injection Brute Forcer",
        "content": "SecRule REQUEST_HEADERS:User-Agent \"@rx (?i)\\bbsqlbf\\b\" \\\n    \"id:461103,\\\n    phase:1,\\\n    block,\\\n    t:none,\\\n    severity:'CRITICAL',\\\n    setvar:'tx.inbound_anomaly_score_pl1=+%{tx.critical_anomaly_score}'\"",
        "description": "Blind Sql Injection Brute Forcer",
        "rule_id": "461",
        "sec_rule_id": "461103",
        "severity": "CRITICAL"
    },
    {
        "comment": "# Brutus",
        "content": "SecRule REQUEST_HEADERS:User-Agent \"@rx (?i)\\bbrutus\\b\" \\\n    \"id:461104,\\\n    phase:1,\\\n    block,\\\n    t:none,\\\n    severity:'CRITICAL',\\\n    setvar:'tx.inbound_anomaly_score_pl1=+%{tx.critical_anomaly_score}'\"",
        "description": "Brutus",
        "rule_id": "461",
        "sec_rule_id": "461104",
        "severity": "CRITICAL"
    },
    {
        "comment": "# CGIchk",
        "content": "SecRule REQUEST_HEADERS:User-Agent \"@rx (?i)\\bcgichk\\b\" \\\n    \"id:461105,\\\n    phase:1,\\\n    block,\\\n    t:none,\\\n    severity:'CRITICAL',\\\n    setvar:'tx.inbound_anomaly_score_pl1=+%{tx.critical_anomaly_score}'\"",
        "description": "CGIchk",
        "rule_id": "461",
        "sec_rule_id": "461105",
        "severity": "CRITICAL"
    },
    {
        "comment": "# Commix",
        "content": "SecRule REQUEST_HEADERS:User-Agent \"@rx ^commix\\/\" \\\n    \"id:461106,\\\n    phase:1,\\\n    block,\\\n    t:none,\\\n    severity:'CRITICAL',\\\n    setvar:'tx.inbound_anomaly_score_pl1=+%{tx.critical_anomaly_score}'\"",
        "description": "Commix",
        "rule_id": "461",
        "sec_rule_id": "461106",
        "severity": "CRITICAL"
    },
    {
        "comment": "# Crowdstrike",
        "content": "SecRule REQUEST_HEADERS:User-Agent \"@rx (?i)\\bcrowdstrike\\b\" \\\n    \"id:461107,\\\n    phase:1,\\\n    block,\\\n    t:none,\\\n    severity:'CRITICAL',\\\n    setvar:'tx.inbound_anomaly_score_pl1=+%{tx.critical_anomaly_score}'\"",
        "description": "Crowdstrike",
        "rule_id": "461",
        "sec_rule_id": "461107",
        "severity": "CRITICAL"
    },
    {
        "comment": "# DirBuster",
        "content": "SecRule REQUEST_HEADERS:User-Agent \"@rx (?i)\\bdirbuster\\b\" \\\n    \"id:461108,\\\n    phase:1,\\\n    block,\\\n    t:none,\\\n    severity:'CRITICAL',\\\n    setvar:'tx.inbound_anomaly_score_pl1=+%{tx.critical_anomaly_score}'\"",
        "description": "DirBuster",
        "rule_id": "461",
        "sec_rule_id": "461108",
        "severity": "CRITICAL"
    },
    {
        "comment": "# Evil Scanner",
        "content": "SecRule REQUEST_HEADERS:User-Agent \"@rx (?i)\\bevilScanner\\b\" \\\n    \"id:461109,\\\n    phase:1,\\\n    block,\\\n    t:none,\\\n    severity:'CRITICAL',\\\n    setvar:'tx.inbound_anomaly_score_pl1=+%{tx.critical_anomaly_score}'\"",
        "description": "Evil Scanner",
        "rule_id": "461",
        "sec_rule_id": "461109",
        "severity": "CRITICAL"
    },
    {
        "comment": "# FFUF",
        "content": "SecRule REQUEST_HEADERS:User-Agent \"@rx (?i)^Fuzz Faster U Fool\\b\" \\\n    \"id:461110,\\\n    phase:1,\\\n    block,\\\n    t:none,\\\n    severity:'CRITICAL',\\\n    setvar:'tx.inbound_anomaly_score_pl1=+%{tx.critical_anomaly_score}'\"",
        "description": "FFUF",
        "rule_id": "461",
        "sec_rule_id": "461110",
        "severity": "CRITICAL"
    },
    {
        "comment": "# Found User-Agent associated with security scanner",
        "content": "SecRule REQUEST_HEADERS:user-agent \"@pm  (hydra) .nasl absinthe advanced^email^extractor arachni/ autogetcontent bilbo bfac brutus brutus/aet bsqlbf cgichk cisco-torch commix core-project/1.0 crimscanner/ datacha0s detectify dirbuster domino^hunter dotdotpwn email^extractor fhscan^core^1. floodgate fuzz^faster^u^fool f-secure^radar get-minimal gobuster gootkit^auto-rooter^scanner grabber grendel-scan havij inspath internet^ninja jaascois jorgee masscan metis morfeus^fucking^scanner mysqloit n-stealth nessus netsparker nikto nmap^nse nmap^scripting^engine nmap-nse nsauditor nuclei openvas pangolin paros pmafind prog.customcrawler qqgamehall qualys^was s.t.a.l.k.e.r. security^scan springenwerk sql^power^injector sqlmap sqlninja struts-pwn sysscan tbi-webscanner teh^forest^lobster this^is^an^exploit toata^dragostea toata^dragostea^mea^pentru^diavola uil2pn user-agent: vega/ voideye w3af.sf.net w3af.sourceforge.net w3af.org webbandit webinspect webshag webtrends^security^analyzer webvulnscan wfuzz whatweb whcc/ wordpress^hash^grabber wpscan xmlrpc^exploit zgrab zmeu\" \\\n    \"id:461111,\\\n    phase:1,\\\n    block,\\\n    t:lowercase,t:none,\\\n    severity:'CRITICAL',\\\n    setvar:'tx.inbound_anomaly_score_pl1=+%{tx.critical_anomaly_score}'\"",
        "description": "Found User-Agent associated with security scanner",
        "rule_id": "461",
        "sec_rule_id": "461111",
        "severity": "CRITICAL"
    },
    {
        "comment": "# Found request filename/argument associated with security scanner",
        "content": "SecRule REQUEST_FILENAME|ARGS \"@pm /.adsensepostnottherenonobook /<invalid>hello.html /actsensepostnottherenonotive /acunetix-wvs-test-for-some-inexistent-file /antidisestablishmentarianism /appscan_fingerprint/mac_address /arachni- /cybercop /nessus_is_probing_you_ /nessustest /netsparker- /rfiinc.txt /thereisnowaythat-you-canbethere /w3af/remotefileinclude.html appscan_fingerprint w00tw00t.at.isc.sans.dfind w00tw00t.at.blackhats.romanian.anti-sec\" \\\n    \"id:461112,\\\n    phase:2,\\\n    block,\\\n    t:lowercase,t:none,\\\n    severity:'CRITICAL',\\\n    setvar:'tx.inbound_anomaly_score_pl1=+%{tx.critical_anomaly_score}'\"",
        "description": "Found request filename/argument associated with security scanner",
        "rule_id": "461",
        "sec_rule_id": "461112",
        "severity": "CRITICAL"
    },
    {
        "comment": "# Found request header associated with security scanner",
        "content": "SecRule REQUEST_HEADERS_NAMES|REQUEST_HEADERS \"@pm acunetix-product (acunetix^web^vulnerability^scanner acunetix-scanning-agreement acunetix-user-agreement myvar=1234 x-ratproxy-loop bytes=0-,5-0,5-1,5-2,5-3,5-4,5-5,5-6,5-7,5-8,5-9,5-10,5-11,5-12,5-13,5-14\" \\\n    \"id:461113,\\\n    phase:1,\\\n    block,\\\n    t:lowercase,t:none,\\\n    severity:'CRITICAL',\\\n    setvar:'tx.inbound_anomaly_score_pl1=+%{tx.critical_anomaly_score}'\"",
        "description": "Found request header associated with security scanner",
        "rule_id": "461",
        "sec_rule_id": "461113",
        "severity": "CRITICAL"
    },
    {
        "comment": "# Gobuster",
        "content": "SecRule REQUEST_HEADERS:User-Agent \"@rx ^gobuster\\/\" \\\n    \"id:461114,\\\n    phase:1,\\\n    block,\\\n    t:none,\\\n    severity:'CRITICAL',\\\n    setvar:'tx.inbound_anomaly_score_pl1=+%{tx.critical_anomaly_score}'\"",
        "description": "Gobuster",
        "rule_id": "461",
        "sec_rule_id": "461114",
        "severity": "CRITICAL"
    },
    {
        "comment": "# GoogleSecurityScanner",
        "content": "SecRule REQUEST_HEADERS:User-Agent \"@rx (?i)\\bGoogleSecurityScanner\\b\" \\\n    \"id:461115,\\\n    phase:1,\\\n    block,\\\n    t:none,\\\n    severity:'CRITICAL',\\\n    setvar:'tx.inbound_anomaly_score_pl1=+%{tx.critical_anomaly_score}'\"",
        "description": "GoogleSecurityScanner",
        "rule_id": "461",
        "sec_rule_id": "461115",
        "severity": "CRITICAL"
    },
    {
        "comment": "# Grendel-Scan",
        "content": "SecRule REQUEST_HEADERS:User-Agent \"@rx (?i)\\bgrendel-scan\\b\" \\\n    \"id:461116,\\\n    phase:1,\\\n    block,\\\n    t:none,\\\n    severity:'CRITICAL',\\\n    setvar:'tx.inbound_anomaly_score_pl1=+%{tx.critical_anomaly_score}'\"",
        "description": "Grendel-Scan",
        "rule_id": "461",
        "sec_rule_id": "461116",
        "severity": "CRITICAL"
    },
    {
        "comment": "# Havij",
        "content": "SecRule REQUEST_HEADERS:User-Agent \"@rx (?i)\\bhavij\\b\" \\\n    \"id:461117,\\\n    phase:1,\\\n    block,\\\n    t:none,\\\n    severity:'CRITICAL',\\\n    setvar:'tx.inbound_anomaly_score_pl1=+%{tx.critical_anomaly_score}'\"",
        "description": "Havij",
        "rule_id": "461",
        "sec_rule_id": "461117",
        "severity": "CRITICAL"
    },
    {
        "comment": "# JAASCois",
        "content": "SecRule REQUEST_HEADERS:User-Agent \"@rx (?i)\\bjaascois\\b\" \\\n    \"id:461118,\\\n    phase:1,\\\n    block,\\\n    t:none,\\\n    severity:'CRITICAL',\\\n    setvar:'tx.inbound_anomaly_score_pl1=+%{tx.critical_anomaly_score}'\"",
        "description": "JAASCois",
        "rule_id": "461",
        "sec_rule_id": "461118",
        "severity": "CRITICAL"
    },
    {
        "comment": "# Joomla exploitation tool",
        "content": "SecRule REQUEST_HEADERS:User-Agent \"@rx JDatabaseDriverMysqli\" \\\n    \"id:461119,\\\n    phase:1,\\\n    block,\\\n    t:none,\\\n    severity:'CRITICAL',\\\n    setvar:'tx.inbound_anomaly_score_pl1=+%{tx.critical_anomaly_score}'\"",
        "description": "Joomla exploitation tool",
        "rule_id": "461",
        "sec_rule_id": "461119",
        "severity": "CRITICAL"
    },
    {
        "comment": "# Jorgee",
        "content": "SecRule REQUEST_HEADERS:User-Agent \"@rx (?i)\\bJorgee\\b\" \\\n    \"id:461120,\\\n    phase:1,\\\n    block,\\\n    t:none,\\\n    severity:'CRITICAL',\\\n    setvar:'tx.inbound_anomaly_score_pl1=+%{tx.critical_anomaly_score}'\"",
        "description": "Jorgee",
        "rule_id": "461",
        "sec_rule_id": "461120",
        "severity": "CRITICAL"
    },
    {
        "comment": "# Metis",
        "content": "SecRule REQUEST_HEADERS:User-Agent \"@rx (?i)\\bmetis\\b\" \\\n    \"id:461121,\\\n    phase:1,\\\n    block,\\\n    t:none,\\\n    severity:'CRITICAL',\\\n    setvar:'tx.inbound_anomaly_score_pl1=+%{tx.critical_anomaly_score}'\"",
        "description": "Metis",
        "rule_id": "461",
        "sec_rule_id": "461121",
        "severity": "CRITICAL"
    },
    {
        "comment": "# N-Stealth",
        "content": "SecRule REQUEST_HEADERS:User-Agent \"@rx (?i)\\bn-stealth\\b\" \\\n    \"id:461122,\\\n    phase:1,\\\n    block,\\\n    t:none,\\\n    severity:'CRITICAL',\\\n    setvar:'tx.inbound_anomaly_score_pl1=+%{tx.critical_anomaly_score}'\"",
        "description": "N-Stealth",
        "rule_id": "461",
        "sec_rule_id": "461122",
        "severity": "CRITICAL"
    },
    {
        "comment": "# Nessus",
        "content": "SecRule REQUEST_HEADERS:User-Agent \"@rx (?i)^Nessus(/|([ :]+SOAP))\" \\\n    \"id:461123,\\\n    phase:1,\\\n    block,\\\n    t:none,\\\n    severity:'CRITICAL',\\\n    setvar:'tx.inbound_anomaly_score_pl1=+%{tx.critical_anomaly_score}'\"",
        "description": "Nessus",
        "rule_id": "461",
        "sec_rule_id": "461123",
        "severity": "CRITICAL"
    },
    {
        "comment": "# Nessus Scripted",
        "content": "SecRule REQUEST_HEADERS:User-Agent \"@rx (?i)^'?[a-z0-9]+\\.nasl'?$\" \\\n    \"id:461124,\\\n    phase:1,\\\n    block,\\\n    t:none,\\\n    severity:'CRITICAL',\\\n    setvar:'tx.inbound_anomaly_score_pl1=+%{tx.critical_anomaly_score}'\"",
        "description": "Nessus Scripted",
        "rule_id": "461",
        "sec_rule_id": "461124",
        "severity": "CRITICAL"
    },
    {
        "comment": "# Netsparker",
        "content": "SecRule REQUEST_HEADERS:User-Agent \"@rx (?i)(<script>netsparker\\(0x0|ns:netsparker.*=vuln)\" \\\n    \"id:461125,\\\n    phase:1,\\\n    block,\\\n    t:none,\\\n    severity:'CRITICAL',\\\n    setvar:'tx.inbound_anomaly_score_pl1=+%{tx.critical_anomaly_score}'\"",
        "description": "Netsparker",
        "rule_id": "461",
        "sec_rule_id": "461125",
        "severity": "CRITICAL"
    },
    {
        "comment": "# Nikto",
        "content": "SecRule REQUEST_HEADERS:User-Agent \"@rx \\(Nikto/[\\d\\.]+\\)\" \\\n    \"id:461126,\\\n    phase:1,\\\n    block,\\\n    t:none,\\\n    severity:'CRITICAL',\\\n    setvar:'tx.inbound_anomaly_score_pl1=+%{tx.critical_anomaly_score}'\"",
        "description": "Nikto",
        "rule_id": "461",
        "sec_rule_id": "461126",
        "severity": "CRITICAL"
    },
    {
        "comment": "# Nimbostratus is a vulnerability scanner that scan websites unprompted",
        "content": "SecRule REQUEST_HEADERS:User-Agent \"@rx (?i)\\bnimbostratus-bot\\b\" \\\n    \"id:461127,\\\n    phase:1,\\\n    block,\\\n    t:none,\\\n    severity:'CRITICAL',\\\n    setvar:'tx.inbound_anomaly_score_pl1=+%{tx.critical_anomaly_score}'\"",
        "description": "Nimbostratus is a vulnerability scanner that scan websites unprompted",
        "rule_id": "461",
        "sec_rule_id": "461127",
        "severity": "CRITICAL"
    },
    {
        "comment": "# Nmap",
        "content": "SecRule REQUEST_HEADERS:User-Agent \"@rx nmap (nse|scripting engine)\" \\\n    \"id:461128,\\\n    phase:1,\\\n    block,\\\n    t:none,\\\n    severity:'CRITICAL',\\\n    setvar:'tx.inbound_anomaly_score_pl1=+%{tx.critical_anomaly_score}'\"",
        "description": "Nmap",
        "rule_id": "461",
        "sec_rule_id": "461128",
        "severity": "CRITICAL"
    },
    {
        "comment": "# Nsauditor",
        "content": "SecRule REQUEST_HEADERS:User-Agent \"@rx (?i)\\bnsauditor\\b\" \\\n    \"id:461129,\\\n    phase:1,\\\n    block,\\\n    t:none,\\\n    severity:'CRITICAL',\\\n    setvar:'tx.inbound_anomaly_score_pl1=+%{tx.critical_anomaly_score}'\"",
        "description": "Nsauditor",
        "rule_id": "461",
        "sec_rule_id": "461129",
        "severity": "CRITICAL"
    },
    {
        "comment": "# Nuclei is a fast tool for configurable targeted scanning based on templates offering massive extensibility and ease of use",
        "content": "SecRule REQUEST_HEADERS:User-Agent \"@rx (?i)^Nuclei\\b\" \\\n    \"id:461130,\\\n    phase:1,\\\n    block,\\\n    t:none,\\\n    severity:'CRITICAL',\\\n    setvar:'tx.inbound_anomaly_score_pl1=+%{tx.critical_anomaly_score}'\"",
        "description": "Nuclei is a fast tool for configurable targeted scanning based on templates offering massive extensibility and ease of use",
        "rule_id": "461",
        "sec_rule_id": "461130",
        "severity": "CRITICAL"
    },
    {
        "comment": "# OpenVAS",
        "content": "SecRule REQUEST_HEADERS:User-Agent \"@rx (?i)OpenVAS\\b\" \\\n    \"id:461131,\\\n    phase:1,\\\n    block,\\\n    t:none,\\\n    severity:'CRITICAL',\\\n    setvar:'tx.inbound_anomaly_score_pl1=+%{tx.critical_anomaly_score}'\"",
        "description": "OpenVAS",
        "rule_id": "461",
        "sec_rule_id": "461131",
        "severity": "CRITICAL"
    },
    {
        "comment": "# PMAFind",
        "content": "SecRule REQUEST_HEADERS:User-Agent \"@rx (?i)\\bpmafind\\b\" \\\n    \"id:461132,\\\n    phase:1,\\\n    block,\\\n    t:none,\\\n    severity:'CRITICAL',\\\n    setvar:'tx.inbound_anomaly_score_pl1=+%{tx.critical_anomaly_score}'\"",
        "description": "PMAFind",
        "rule_id": "461",
        "sec_rule_id": "461132",
        "severity": "CRITICAL"
    },
    {
        "comment": "# Pangolin",
        "content": "SecRule REQUEST_HEADERS:User-Agent \"@rx (?i)\\bpangolin\\b\" \\\n    \"id:461133,\\\n    phase:1,\\\n    block,\\\n    t:none,\\\n    severity:'CRITICAL',\\\n    setvar:'tx.inbound_anomaly_score_pl1=+%{tx.critical_anomaly_score}'\"",
        "description": "Pangolin",
        "rule_id": "461",
        "sec_rule_id": "461133",
        "severity": "CRITICAL"
    },
    {
        "comment": "# Paros",
        "content": "SecRule REQUEST_HEADERS:User-Agent \"@rx (?i)Mozilla/.* Paros/\" \\\n    \"id:461134,\\\n    phase:1,\\\n    block,\\\n    t:none,\\\n    severity:'CRITICAL',\\\n    setvar:'tx.inbound_anomaly_score_pl1=+%{tx.critical_anomaly_score}'\"",
        "description": "Paros",
        "rule_id": "461",
        "sec_rule_id": "461134",
        "severity": "CRITICAL"
    },
    {
        "comment": "# Probely",
        "content": "SecRule REQUEST_HEADERS:User-Agent \"@rx (?i)\\bProbely\\b\" \\\n    \"id:461135,\\\n    phase:1,\\\n    block,\\\n    t:none,\\\n    severity:'CRITICAL',\\\n    setvar:'tx.inbound_anomaly_score_pl1=+%{tx.critical_anomaly_score}'\"",
        "description": "Probely",
        "rule_id": "461",
        "sec_rule_id": "461135",
        "severity": "CRITICAL"
    },
    {
        "comment": "# Qualys",
        "content": "SecRule REQUEST_HEADERS:User-Agent \"@rx (?i)\\bqualys\\b\" \\\n    \"id:461136,\\\n    phase:1,\\\n    block,\\\n    t:none,\\\n    severity:'CRITICAL',\\\n    setvar:'tx.inbound_anomaly_score_pl1=+%{tx.critical_anomaly_score}'\"",
        "description": "Qualys",
        "rule_id": "461",
        "sec_rule_id": "461136",
        "severity": "CRITICAL"
    },
    {
        "comment": "# SQL power injector",
        "content": "SecRule REQUEST_HEADERS:User-Agent \"@rx sql power injector\" \\\n    \"id:461137,\\\n    phase:1,\\\n    block,\\\n    t:none,\\\n    severity:'CRITICAL',\\\n    setvar:'tx.inbound_anomaly_score_pl1=+%{tx.critical_anomaly_score}'\"",
        "description": "SQL power injector",
        "rule_id": "461",
        "sec_rule_id": "461137",
        "severity": "CRITICAL"
    },
    {
        "comment": "# SQLNinja",
        "content": "SecRule REQUEST_HEADERS:User-Agent \"@rx (?i)\\bsqlninja\\b\" \\\n    \"id:461138,\\\n    phase:1,\\\n    block,\\\n    t:none,\\\n    severity:'CRITICAL',\\\n    setvar:'tx.inbound_anomaly_score_pl1=+%{tx.critical_anomaly_score}'\"",
        "description": "SQLNinja",
        "rule_id": "461",
        "sec_rule_id": "461138",
        "severity": "CRITICAL"
    },
    {
        "comment": "# SQLmap",
        "content": "SecRule REQUEST_HEADERS:User-Agent \"@rx ^sqlmap/\" \\\n    \"id:461139,\\\n    phase:1,\\\n    block,\\\n    t:none,\\\n    severity:'CRITICAL',\\\n    setvar:'tx.inbound_anomaly_score_pl1=+%{tx.critical_anomaly_score}'\"",
        "description": "SQLmap",
        "rule_id": "461",
        "sec_rule_id": "461139",
        "severity": "CRITICAL"
    },
    {
        "comment": "# Shellshock exploitation tool",
        "content": "SecRule REQUEST_HEADERS:User-Agent \"@rx \\(\\) \\{ :; *\\}\" \\\n    \"id:461140,\\\n    phase:1,\\\n    block,\\\n    t:none,\\\n    severity:'CRITICAL',\\\n    setvar:'tx.inbound_anomaly_score_pl1=+%{tx.critical_anomaly_score}'\"",
        "description": "Shellshock exploitation tool",
        "rule_id": "461",
        "sec_rule_id": "461140",
        "severity": "CRITICAL"
    },
    {
        "comment": "# Skipfish",
        "content": "SecRule REQUEST_HEADERS:User-Agent \"@rx (?i)mozilla/5\\.0 sf/\" \\\n    \"id:461141,\\\n    phase:1,\\\n    block,\\\n    t:none,\\\n    severity:'CRITICAL',\\\n    setvar:'tx.inbound_anomaly_score_pl1=+%{tx.critical_anomaly_score}'\"",
        "description": "Skipfish",
        "rule_id": "461",
        "sec_rule_id": "461141",
        "severity": "CRITICAL"
    },
    {
        "comment": "# Spider-Pig",
        "content": "SecRule REQUEST_HEADERS:User-Agent \"@rx Powered by Spider-Pig by tinfoilsecurity\\.com\" \\\n    \"id:461142,\\\n    phase:1,\\\n    block,\\\n    t:none,\\\n    severity:'CRITICAL',\\\n    setvar:'tx.inbound_anomaly_score_pl1=+%{tx.critical_anomaly_score}'\"",
        "description": "Spider-Pig",
        "rule_id": "461",
        "sec_rule_id": "461142",
        "severity": "CRITICAL"
    },
    {
        "comment": "# Suspicious user agent",
        "content": "SecRule REQUEST_HEADERS:User-Agent \"@rx mozilla/4\\.0 \\(compatible(; msie 6\\.0; win32)?\\)\" \\\n    \"id:461143,\\\n    phase:1,\\\n    block,\\\n    t:none,\\\n    severity:'CRITICAL',\\\n    setvar:'tx.inbound_anomaly_score_pl1=+%{tx.critical_anomaly_score}'\"",
        "description": "Suspicious user agent",
        "rule_id": "461",
        "sec_rule_id": "461143",
        "severity": "CRITICAL"
    },
    {
        "comment": "# Tsunami is a general purpose network security scanner with an extensible plugin system for detecting high severity vulnerabilities with high confidence",
        "content": "SecRule REQUEST_HEADERS:User-Agent \"@rx (?i)\\bTsunamiSecurityScanner\\b\" \\\n    \"id:461144,\\\n    phase:1,\\\n    block,\\\n    t:none,\\\n    severity:'CRITICAL',\\\n    setvar:'tx.inbound_anomaly_score_pl1=+%{tx.critical_anomaly_score}'\"",
        "description": "Tsunami is a general purpose network security scanner with an extensible plugin system for detecting high severity vulnerabilities with high confidence",
        "rule_id": "461",
        "sec_rule_id": "461144",
        "severity": "CRITICAL"
    },
    {
        "comment": "# WebFuck",
        "content": "SecRule REQUEST_HEADERS:User-Agent \"@rx (?i)\\bWebFuck\\b\" \\\n    \"id:461145,\\\n    phase:1,\\\n    block,\\\n    t:none,\\\n    severity:'CRITICAL',\\\n    setvar:'tx.inbound_anomaly_score_pl1=+%{tx.critical_anomaly_score}'\"",
        "description": "WebFuck",
        "rule_id": "461",
        "sec_rule_id": "461145",
        "severity": "CRITICAL"
    },
    {
        "comment": "# WebInspect",
        "content": "SecRule REQUEST_HEADERS:User-Agent \"@rx (?i)\\bwebinspect\\b\" \\\n    \"id:461146,\\\n    phase:1,\\\n    block,\\\n    t:none,\\\n    severity:'CRITICAL',\\\n    setvar:'tx.inbound_anomaly_score_pl1=+%{tx.critical_anomaly_score}'\"",
        "description": "WebInspect",
        "rule_id": "461",
        "sec_rule_id": "461146",
        "severity": "CRITICAL"
    },
    {
        "comment": "# Webtrends",
        "content": "SecRule REQUEST_HEADERS:User-Agent \"@rx webtrends security analyzer\" \\\n    \"id:461147,\\\n    phase:1,\\\n    block,\\\n    t:none,\\\n    severity:'CRITICAL',\\\n    setvar:'tx.inbound_anomaly_score_pl1=+%{tx.critical_anomaly_score}'\"",
        "description": "Webtrends",
        "rule_id": "461",
        "sec_rule_id": "461147",
        "severity": "CRITICAL"
    },
    {
        "comment": "# Zgrab",
        "content": "SecRule REQUEST_HEADERS:User-Agent \"@rx Mozilla/\\d+.\\d+ zgrab\" \\\n    \"id:461148,\\\n    phase:1,\\\n    block,\\\n    t:none,\\\n    severity:'CRITICAL',\\\n    setvar:'tx.inbound_anomaly_score_pl1=+%{tx.critical_anomaly_score}'\"",
        "description": "Zgrab",
        "rule_id": "461",
        "sec_rule_id": "461148",
        "severity": "CRITICAL"
    },
    {
        "comment": "# Zmeu",
        "content": "SecRule REQUEST_HEADERS:User-Agent \"@rx (?i)\\bZmEu\\b\" \\\n    \"id:461149,\\\n    phase:1,\\\n    block,\\\n    t:none,\\\n    severity:'CRITICAL',\\\n    setvar:'tx.inbound_anomaly_score_pl1=+%{tx.critical_anomaly_score}'\"",
        "description": "Zmeu",
        "rule_id": "461",
        "sec_rule_id": "461149",
        "severity": "CRITICAL"
    },
    {
        "comment": "# w3af",
        "content": "SecRule REQUEST_HEADERS:User-Agent \"@rx (?i)\\bw3af\\b\" \\\n    \"id:461150,\\\n    phase:1,\\\n    block,\\\n    t:none,\\\n    severity:'CRITICAL',\\\n    setvar:'tx.inbound_anomaly_score_pl1=+%{tx.critical_anomaly_score}'\"",
        "description": "w3af",
        "rule_id": "461",
        "sec_rule_id": "461150",
        "severity": "CRITICAL"
    },
    {
        "comment": "",
        "content": "SecRule TX:DETECTION_PARANOIA_LEVEL \"@lt 1\" \"id:460011,phase:1,pass,nolog,skipAfter:END-REQUEST-460-APPLICATION-ATTACK-SHI\"",
        "rule_id": "460",
        "sec_rule_id": "460011"
    },
    {
        "comment": "",
        "content": "SecRule TX:DETECTION_PARANOIA_LEVEL \"@lt 1\" \"id:460012,phase:2,pass,nolog,skipAfter:END-REQUEST-460-APPLICATION-ATTACK-SHI\"",
        "rule_id": "460",
        "sec_rule_id": "460012"
    },
    {
        "comment": "# Linux: Detect attempts to exfiltrate passwd files",
        "content": "SecRule ARGS|ARGS_NAMES|REQUEST_HEADERS \"@rx (?i)[&|]\\s*cat\\s+\\/etc\\/[\\w\\.\\/]*passwd\\s*[&|]\" \\\n    \"id:460100,\\\n    phase:2,\\\n    block,\\\n    t:none,\\\n    severity:'CRITICAL',\\\n    setvar:'tx.inbound_anomaly_score_pl1=+%{tx.critical_anomaly_score}'\"",
        "description": "Linux: Detect attempts to exfiltrate passwd files",
        "rule_id": "460",
        "sec_rule_id": "460100",
        "severity": "CRITICAL"
    },
    {
        "comment": "# Remote Command Execution: Direct Unix Command Execution",
        "content": "SecRule REQUEST_COOKIES|REQUEST_COOKIES_NAMES|ARGS_NAMES|ARGS \"@rx (?:^|=)\\s*(?:{|\\s*\\(\\s*|\\w+=(?:[^\\s]*|\\$.*|\\$.*|<.*|>.*|\\'.*\\'|\\\".*\\\")\\s+|!\\s*|\\$)*\\s*(?:'|\\\")*(?:[\\?\\*\\[\\]\\(\\)\\-\\|+\\w'\\\"\\./\\\\\\\\]+/)?[\\\\\\\\'\\\"]*(?:l[\\\\\\\\'\\\"]*(?:s(?:[\\\\\\\\'\\\"]*(?:b[\\\\\\\\'\\\"]*_[\\\\\\\\'\\\"]*r[\\\\\\\\'\\\"]*e[\\\\\\\\'\\\"]*l[\\\\\\\\'\\\"]*e[\\\\\\\\'\\\"]*a[\\\\\\\\'\\\"]*s[\\\\\\\\'\\\"]*e|c[\\\\\\\\'\\\"]*p[\\\\\\\\'\\\"]*u|m[\\\\\\\\'\\\"]*o[\\\\\\\\'\\\"]*d|p[\\\\\\\\'\\\"]*c[\\\\\\\\'\\\"]*i|u[\\\\\\\\'\\\"]*s[\\\\\\\\'\\\"]*b|-[\\\\\\\\'\\\"]*F|o[\\\\\\\\'\\\"]*f))?|z[\\\\\\\\'\\\"]*(?:(?:[ef][\\\\\\\\'\\\"]*)?g[\\\\\\\\'\\\"]*r[\\\\\\\\'\\\"]*e[\\\\\\\\'\\\"]*p|c[\\\\\\\\'\\\"]*(?:a[\\\\\\\\'\\\"]*t|m[\\\\\\\\'\\\"]*p)|m[\\\\\\\\'\\\"]*(?:o[\\\\\\\\'\\\"]*r[\\\\\\\\'\\\"]*e|a)|d[\\\\\\\\'\\\"]*i[\\\\\\\\'\\\"]*f[\\\\\\\\'\\\"]*f|l[\\\\\\\\'\\\"]*e[\\\\\\\\'\\\"]*s[\\\\\\\\'\\\"]*s)|e[\\\\\\\\'\\\"]*s[\\\\\\\\'\\\"]*s[\\\\\\\\'\\\"]*(?:(?:f[\\\\\\\\'\\\"]*i[\\\\\\\\'\\\"]*l|p[\\\\\\\\'\\\"]*i[\\\\\\\\'\\\"]*p)[\\\\\\\\'\\\"]*e|e[\\\\\\\\'\\\"]*c[\\\\\\\\'\\\"]*h[\\\\\\\\'\\\"]*o)|a[\\\\\\\\'\\\"]*s[\\\\\\\\'\\\"]*t[\\\\\\\\'\\\"]*(?:l[\\\\\\\\'\\\"]*o[\\\\\\\\'\\\"]*g(?:[\\\\\\\\'\\\"]*i[\\\\\\\\'\\\"]*n)?|c[\\\\\\\\'\\\"]*o[\\\\\\\\'\\\"]*m[\\\\\\\\'\\\"]*m)|w[\\\\\\\\'\\\"]*p(?:[\\\\\\\\'\\\"]*-[\\\\\\\\'\\\"]*d[\\\\\\\\'\\\"]*o[\\\\\\\\'\\\"]*w[\\\\\\\\'\\\"]*n[\\\\\\\\'\\\"]*l[\\\\\\\\'\\\"]*o[\\\\\\\\'\\\"]*a[\\\\\\\\'\\\"]*d)?|f[\\\\\\\\'\\\"]*t[\\\\\\\\'\\\"]*p(?:[\\\\\\\\'\\\"]*g[\\\\\\\\'\\\"]*e[\\\\\\\\'\\\"]*t)?|y[\\\\\\\\'\\\"]*n[\\\\\\\\'\\\"]*x)|s[\\\\\\\\'\\\"]*(?:e[\\\\\\\\'\\\"]*(?:t[\\\\\\\\'\\\"]*(?:e[\\\\\\\\'\\\"]*n[\\\\\\\\'\\\"]*v|s[\\\\\\\\'\\\"]*i[\\\\\\\\'\\\"]*d)|n[\\\\\\\\'\\\"]*d[\\\\\\\\'\\\"]*m[\\\\\\\\'\\\"]*a[\\\\\\\\'\\\"]*i[\\\\\\\\'\\\"]*l|d)|h(?:[\\\\\\\\'\\\"]*\\.[\\\\\\\\'\\\"]*d[\\\\\\\\'\\\"]*i[\\\\\\\\'\\\"]*s[\\\\\\\\'\\\"]*t[\\\\\\\\'\\\"]*r[\\\\\\\\'\\\"]*i[\\\\\\\\'\\\"]*b)?|o[\\\\\\\\'\\\"]*(?:u[\\\\\\\\'\\\"]*r[\\\\\\\\'\\\"]*c[\\\\\\\\'\\\"]*e|c[\\\\\\\\'\\\"]*a[\\\\\\\\'\\\"]*t)|t[\\\\\\\\'\\\"]*r[\\\\\\\\'\\\"]*i[\\\\\\\\'\\\"]*n[\\\\\\\\'\\\"]*g[\\\\\\\\'\\\"]*s|y[\\\\\\\\'\\\"]*s[\\\\\\\\'\\\"]*c[\\\\\\\\'\\\"]*t[\\\\\\\\'\\\"]*l|c[\\\\\\\\'\\\"]*(?:h[\\\\\\\\'\\\"]*e[\\\\\\\\'\\\"]*d|p)|d[\\\\\\\\'\\\"]*i[\\\\\\\\'\\\"]*f[\\\\\\\\'\\\"]*f|f[\\\\\\\\'\\\"]*t[\\\\\\\\'\\\"]*p|u[\\\\\\\\'\\\"]*d[\\\\\\\\'\\\"]*o|s[\\\\\\\\'\\\"]*h|v[\\\\\\\\'\\\"]*n)|p[\\\\\\\\'\\\"]*(?:t[\\\\\\\\'\\\"]*a[\\\\\\\\'\\\"]*r(?:[\\\\\\\\'\\\"]*(?:d[\\\\\\\\'\\\"]*i[\\\\\\\\'\\\"]*f[\\\\\\\\'\\\"]*f|g[\\\\\\\\'\\\"]*r[\\\\\\\\'\\\"]*e[\\\\\\\\'\\\"]*p))?|y[\\\\\\\\'\\\"]*t[\\\\\\\\'\\\"]*h[\\\\\\\\'\\\"]*o[\\\\\\\\'\\\"]*n(?:[\\\\\\\\'\\\"]*(?:3(?:[\\\\\\\\'\\\"]*m)?|2))?|k[\\\\\\\\'\\\"]*(?:e[\\\\\\\\'\\\"]*x[\\\\\\\\'\\\"]*e[\\\\\\\\'\\\"]*c|i[\\\\\\\\'\\\"]*l[\\\\\\\\'\\\"]*l)|r[\\\\\\\\'\\\"]*i[\\\\\\\\'\\\"]*n[\\\\\\\\'\\\"]*t[\\\\\\\\'\\\"]*e[\\\\\\\\'\\\"]*n[\\\\\\\\'\\\"]*v|(?:g[\\\\\\\\'\\\"]*r[\\\\\\\\'\\\"]*e|f[\\\\\\\\'\\\"]*t)[\\\\\\\\'\\\"]*p|e[\\\\\\\\'\\\"]*r[\\\\\\\\'\\\"]*l(?:[\\\\\\\\'\\\"]*5)?|h[\\\\\\\\'\\\"]*p(?:[\\\\\\\\'\\\"]*[57])?|i[\\\\\\\\'\\\"]*n[\\\\\\\\'\\\"]*g|o[\\\\\\\\'\\\"]*p[\\\\\\\\'\\\"]*d)|n[\\\\\\\\'\\\"]*(?:c(?:[\\\\\\\\'\\\"]*(?:\\.[\\\\\\\\'\\\"]*(?:t[\\\\\\\\'\\\"]*r[\\\\\\\\'\\\"]*a[\\\\\\\\'\\\"]*d[\\\\\\\\'\\\"]*i[\\\\\\\\'\\\"]*t[\\\\\\\\'\\\"]*i[\\\\\\\\'\\\"]*o[\\\\\\\\'\\\"]*n[\\\\\\\\'\\\"]*a[\\\\\\\\'\\\"]*l|o[\\\\\\\\'\\\"]*p[\\\\\\\\'\\\"]*e[\\\\\\\\'\\\"]*n[\\\\\\\\'\\\"]*b[\\\\\\\\'\\\"]*s[\\\\\\\\'\\\"]*d)|a[\\\\\\\\'\\\"]*t))?|e[\\\\\\\\'\\\"]*t[\\\\\\\\'\\\"]*(?:k[\\\\\\\\'\\\"]*i[\\\\\\\\'\\\"]*t[\\\\\\\\'\\\"]*-[\\\\\\\\'\\\"]*f[\\\\\\\\'\\\"]*t[\\\\\\\\'\\\"]*p|(?:s[\\\\\\\\'\\\"]*t|c)[\\\\\\\\'\\\"]*a[\\\\\\\\'\\\"]*t)|o[\\\\\\\\'\\\"]*h[\\\\\\\\'\\\"]*u[\\\\\\\\'\\\"]*p|p[\\\\\\\\'\\\"]*i[\\\\\\\\'\\\"]*n[\\\\\\\\'\\\"]*g|s[\\\\\\\\'\\\"]*t[\\\\\\\\'\\\"]*a[\\\\\\\\'\\\"]*t)|t[\\\\\\\\'\\\"]*(?:c[\\\\\\\\'\\\"]*(?:p[\\\\\\\\'\\\"]*(?:t[\\\\\\\\'\\\"]*r[\\\\\\\\'\\\"]*a[\\\\\\\\'\\\"]*c[\\\\\\\\'\\\"]*e[\\\\\\\\'\\\"]*r[\\\\\\\\'\\\"]*o[\\\\\\\\'\\\"]*u[\\\\\\\\'\\\"]*t[\\\\\\\\'\\\"]*e|i[\\\\\\\\'\\\"]*n[\\\\\\\\'\\\"]*g)|s[\\\\\\\\'\\\"]*h)|r[\\\\\\\\'\\\"]*a[\\\\\\\\'\\\"]*c[\\\\\\\\'\\\"]*e[\\\\\\\\'\\\"]*r[\\\\\\\\'\\\"]*o[\\\\\\\\'\\\"]*u[\\\\\\\\'\\\"]*t[\\\\\\\\'\\\"]*e(?:[\\\\\\\\'\\\"]*6)?|i[\\\\\\\\'\\\"]*m[\\\\\\\\'\\\"]*e(?:[\\\\\\\\'\\\"]*o[\\\\\\\\'\\\"]*u[\\\\\\\\'\\\"]*t)?|a[\\\\\\\\'\\\"]*(?:i[\\\\\\\\'\\\"]*l(?:[\\\\\\\\'\\\"]*f)?|r)|e[\\\\\\\\'\\\"]*l[\\\\\\\\'\\\"]*n[\\\\\\\\'\\\"]*e[\\\\\\\\'\\\"]*t)|r[\\\\\\\\'\\\"]*(?:e[\\\\\\\\'\\\"]*(?:p[\\\\\\\\'\\\"]*(?:l[\\\\\\\\'\\\"]*a[\\\\\\\\'\\\"]*c[\\\\\\\\'\\\"]*e|e[\\\\\\\\'\\\"]*a[\\\\\\\\'\\\"]*t)|a[\\\\\\\\'\\\"]*l[\\\\\\\\'\\\"]*p[\\\\\\\\'\\\"]*a[\\\\\\\\'\\\"]*t[\\\\\\\\'\\\"]*h|n[\\\\\\\\'\\\"]*a[\\\\\\\\'\\\"]*m[\\\\\\\\'\\\"]*e)|u[\\\\\\\\'\\\"]*b[\\\\\\\\'\\\"]*y(?:[\\\\\\\\'\\\"]*(?:1(?:[\\\\\\\\'\\\"]*[89])?|2[\\\\\\\\'\\\"]*[012]))?|m[\\\\\\\\'\\\"]*(?:u[\\\\\\\\'\\\"]*s[\\\\\\\\'\\\"]*e|d[\\\\\\\\'\\\"]*i)[\\\\\\\\'\\\"]*r|n[\\\\\\\\'\\\"]*a[\\\\\\\\'\\\"]*n[\\\\\\\\'\\\"]*o|s[\\\\\\\\'\\\"]*y[\\\\\\\\'\\\"]*n[\\\\\\\\'\\\"]*c|c[\\\\\\\\'\\\"]*p)|b[\\\\\\\\'\\\"]*(?:z[\\\\\\\\'\\\"]*(?:(?:[ef][\\\\\\\\'\\\"]*)?g[\\\\\\\\'\\\"]*r[\\\\\\\\'\\\"]*e[\\\\\\\\'\\\"]*p|d[\\\\\\\\'\\\"]*i[\\\\\\\\'\\\"]*f[\\\\\\\\'\\\"]*f|l[\\\\\\\\'\\\"]*e[\\\\\\\\'\\\"]*s[\\\\\\\\'\\\"]*s|m[\\\\\\\\'\\\"]*o[\\\\\\\\'\\\"]*r[\\\\\\\\'\\\"]*e|c[\\\\\\\\'\\\"]*a[\\\\\\\\'\\\"]*t)|s[\\\\\\\\'\\\"]*d[\\\\\\\\'\\\"]*(?:c[\\\\\\\\'\\\"]*a[\\\\\\\\'\\\"]*t|i[\\\\\\\\'\\\"]*f[\\\\\\\\'\\\"]*f|t[\\\\\\\\'\\\"]*a[\\\\\\\\'\\\"]*r)|u[\\\\\\\\'\\\"]*i[\\\\\\\\'\\\"]*l[\\\\\\\\'\\\"]*t[\\\\\\\\'\\\"]*i[\\\\\\\\'\\\"]*n|a[\\\\\\\\'\\\"]*s[\\\\\\\\'\\\"]*h)|m[\\\\\\\\'\\\"]*(?:y[\\\\\\\\'\\\"]*s[\\\\\\\\'\\\"]*q[\\\\\\\\'\\\"]*l[\\\\\\\\'\\\"]*(?:d[\\\\\\\\'\\\"]*u[\\\\\\\\'\\\"]*m[\\\\\\\\'\\\"]*p(?:[\\\\\\\\'\\\"]*s[\\\\\\\\'\\\"]*l[\\\\\\\\'\\\"]*o[\\\\\\\\'\\\"]*w)?|h[\\\\\\\\'\\\"]*o[\\\\\\\\'\\\"]*t[\\\\\\\\'\\\"]*c[\\\\\\\\'\\\"]*o[\\\\\\\\'\\\"]*p[\\\\\\\\'\\\"]*y|a[\\\\\\\\'\\\"]*d[\\\\\\\\'\\\"]*m[\\\\\\\\'\\\"]*i[\\\\\\\\'\\\"]*n|s[\\\\\\\\'\\\"]*h[\\\\\\\\'\\\"]*o[\\\\\\\\'\\\"]*w)|l[\\\\\\\\'\\\"]*o[\\\\\\\\'\\\"]*c[\\\\\\\\'\\\"]*a[\\\\\\\\'\\\"]*t[\\\\\\\\'\\\"]*e|a[\\\\\\\\'\\\"]*i[\\\\\\\\'\\\"]*l[\\\\\\\\'\\\"]*q)|u[\\\\\\\\'\\\"]*(?:n[\\\\\\\\'\\\"]*(?:c[\\\\\\\\'\\\"]*o[\\\\\\\\'\\\"]*m[\\\\\\\\'\\\"]*p[\\\\\\\\'\\\"]*r[\\\\\\\\'\\\"]*e[\\\\\\\\'\\\"]*s[\\\\\\\\'\\\"]*s|l[\\\\\\\\'\\\"]*z[\\\\\\\\'\\\"]*m[\\\\\\\\'\\\"]*a|a[\\\\\\\\'\\\"]*m[\\\\\\\\'\\\"]*e|r[\\\\\\\\'\\\"]*a[\\\\\\\\'\\\"]*r|s[\\\\\\\\'\\\"]*e[\\\\\\\\'\\\"]*t|z[\\\\\\\\'\\\"]*i[\\\\\\\\'\\\"]*p|x[\\\\\\\\'\\\"]*z)|s[\\\\\\\\'\\\"]*e[\\\\\\\\'\\\"]*r[\\\\\\\\'\\\"]*(?:(?:a[\\\\\\\\'\\\"]*d|m[\\\\\\\\'\\\"]*o)[\\\\\\\\'\\\"]*d|d[\\\\\\\\'\\\"]*e[\\\\\\\\'\\\"]*l))|x[\\\\\\\\'\\\"]*(?:z(?:[\\\\\\\\'\\\"]*(?:(?:[ef][\\\\\\\\'\\\"]*)?g[\\\\\\\\'\\\"]*r[\\\\\\\\'\\\"]*e[\\\\\\\\'\\\"]*p|d[\\\\\\\\'\\\"]*(?:i[\\\\\\\\'\\\"]*f[\\\\\\\\'\\\"]*f|e[\\\\\\\\'\\\"]*c)|c[\\\\\\\\'\\\"]*(?:a[\\\\\\\\'\\\"]*t|m[\\\\\\\\'\\\"]*p)|l[\\\\\\\\'\\\"]*e[\\\\\\\\'\\\"]*s[\\\\\\\\'\\\"]*s|m[\\\\\\\\'\\\"]*o[\\\\\\\\'\\\"]*r[\\\\\\\\'\\\"]*e))?|a[\\\\\\\\'\\\"]*r[\\\\\\\\'\\\"]*g[\\\\\\\\'\\\"]*s)|z[\\\\\\\\'\\\"]*(?:(?:(?:[ef][\\\\\\\\'\\\"]*)?g[\\\\\\\\'\\\"]*r[\\\\\\\\'\\\"]*e|i)[\\\\\\\\'\\\"]*p|c[\\\\\\\\'\\\"]*(?:a[\\\\\\\\'\\\"]*t|m[\\\\\\\\'\\\"]*p)|d[\\\\\\\\'\\\"]*i[\\\\\\\\'\\\"]*f[\\\\\\\\'\\\"]*f|l[\\\\\\\\'\\\"]*e[\\\\\\\\'\\\"]*s[\\\\\\\\'\\\"]*s|m[\\\\\\\\'\\\"]*o[\\\\\\\\'\\\"]*r[\\\\\\\\'\\\"]*e|r[\\\\\\\\'\\\"]*u[\\\\\\\\'\\\"]*n|s[\\\\\\\\'\\\"]*h)|f[\\\\\\\\'\\\"]*(?:t[\\\\\\\\'\\\"]*p[\\\\\\\\'\\\"]*(?:s[\\\\\\\\'\\\"]*t[\\\\\\\\'\\\"]*a[\\\\\\\\'\\\"]*t[\\\\\\\\'\\\"]*s|w[\\\\\\\\'\\\"]*h[\\\\\\\\'\\\"]*o)|i[\\\\\\\\'\\\"]*l[\\\\\\\\'\\\"]*e[\\\\\\\\'\\\"]*t[\\\\\\\\'\\\"]*e[\\\\\\\\'\\\"]*s[\\\\\\\\'\\\"]*t|e[\\\\\\\\'\\\"]*t[\\\\\\\\'\\\"]*c[\\\\\\\\'\\\"]*h|g[\\\\\\\\'\\\"]*r[\\\\\\\\'\\\"]*e[\\\\\\\\'\\\"]*p)|c[\\\\\\\\'\\\"]*(?:o[\\\\\\\\'\\\"]*(?:m[\\\\\\\\'\\\"]*m[\\\\\\\\'\\\"]*a[\\\\\\\\'\\\"]*n[\\\\\\\\'\\\"]*d|p[\\\\\\\\'\\\"]*r[\\\\\\\\'\\\"]*o[\\\\\\\\'\\\"]*c)|u[\\\\\\\\'\\\"]*r[\\\\\\\\'\\\"]*l|s[\\\\\\\\'\\\"]*h|c)|e[\\\\\\\\'\\\"]*(?:g[\\\\\\\\'\\\"]*r[\\\\\\\\'\\\"]*e[\\\\\\\\'\\\"]*p|c[\\\\\\\\'\\\"]*h[\\\\\\\\'\\\"]*o|v[\\\\\\\\'\\\"]*a[\\\\\\\\'\\\"]*l|x[\\\\\\\\'\\\"]*e[\\\\\\\\'\\\"]*c|n[\\\\\\\\'\\\"]*v)|d[\\\\\\\\'\\\"]*(?:m[\\\\\\\\'\\\"]*e[\\\\\\\\'\\\"]*s[\\\\\\\\'\\\"]*g|a[\\\\\\\\'\\\"]*s[\\\\\\\\'\\\"]*h|i[\\\\\\\\'\\\"]*f[\\\\\\\\'\\\"]*f|o[\\\\\\\\'\\\"]*a[\\\\\\\\'\\\"]*s)|g[\\\\\\\\'\\\"]*(?:z[\\\\\\\\'\\\"]*(?:c[\\\\\\\\'\\\"]*a[\\\\\\\\'\\\"]*t|i[\\\\\\\\'\\\"]*p)|r[\\\\\\\\'\\\"]*e[\\\\\\\\'\\\"]*p|c[\\\\\\\\'\\\"]*c)|j[\\\\\\\\'\\\"]*(?:o[\\\\\\\\'\\\"]*b[\\\\\\\\'\\\"]*s[\\\\\\\\'\\\"]*\\s+[\\\\\\\\'\\\"]*-[\\\\\\\\'\\\"]*x|a[\\\\\\\\'\\\"]*v[\\\\\\\\'\\\"]*a)|w[\\\\\\\\'\\\"]*(?:h[\\\\\\\\'\\\"]*o[\\\\\\\\'\\\"]*a[\\\\\\\\'\\\"]*m[\\\\\\\\'\\\"]*i|g[\\\\\\\\'\\\"]*e[\\\\\\\\'\\\"]*t|3[\\\\\\\\'\\\"]*m)|i[\\\\\\\\'\\\"]*r[\\\\\\\\'\\\"]*b(?:[\\\\\\\\'\\\"]*(?:1(?:[\\\\\\\\'\\\"]*[89])?|2[\\\\\\\\'\\\"]*[012]))?|o[\\\\\\\\'\\\"]*n[\\\\\\\\'\\\"]*i[\\\\\\\\'\\\"]*n[\\\\\\\\'\\\"]*t[\\\\\\\\'\\\"]*r|h[\\\\\\\\'\\\"]*(?:e[\\\\\\\\'\\\"]*a[\\\\\\\\'\\\"]*d|u[\\\\\\\\'\\\"]*p)|v[\\\\\\\\'\\\"]*i[\\\\\\\\'\\\"]*(?:g[\\\\\\\\'\\\"]*r|p[\\\\\\\\'\\\"]*w)|G[\\\\\\\\'\\\"]*E[\\\\\\\\'\\\"]*T)[\\\\\\\\'\\\"]*(?:\\s|;|\\||&|<|>)\" \\\n    \"id:460101,\\\n    phase:2,\\\n    block,\\\n    t:none,\\\n    severity:'CRITICAL',\\\n    setvar:'tx.inbound_anomaly_score_pl1=+%{tx.critical_anomaly_score}'\"",
        "description": "Remote Command Execution: Direct Unix Command Execution",
        "rule_id": "460",
        "sec_rule_id": "460101",
        "severity": "CRITICAL"
    },
    {
        "comment": "# Remote Command Execution: Shellshock (CVE-2014-6271)",
        "content": "SecRule ARGS_NAMES|ARGS|FILES_NAMES|REQUEST_HEADERS \"@rx ^\\(\\s*\\)\\s+{\" \\\n    \"id:460102,\\\n    phase:2,\\\n    block,\\\n    t:none,\\\n    severity:'CRITICAL',\\\n    setvar:'tx.inbound_anomaly_score_pl1=+%{tx.critical_anomaly_score}'\"",
        "description": "Remote Command Execution: Shellshock (CVE-2014-6271)",
        "rule_id": "460",
        "sec_rule_id": "460102",
        "severity": "CRITICAL"
    },
    {
        "comment": "# Remote Command Execution: Unix Command Injection",
        "content": "SecRule REQUEST_COOKIES|REQUEST_COOKIES_NAMES|ARGS_NAMES|ARGS \"@rx (?:;|\\{|\\||\\|\\||&|&&|\\n|\\r|\\$\\(|\\$\\(\\(|`|\\${|<\\(|>\\(|\\(\\s*\\))\\s*(?:{|\\s*\\(\\s*|\\w+=(?:[^\\s]*|\\$.*|\\$.*|<.*|>.*|\\'.*\\'|\\\".*\\\")\\s+|!\\s*|\\$)*\\s*(?:'|\\\")*(?:[\\?\\*\\[\\]\\(\\)\\-\\|+\\w'\\\"\\./\\\\\\\\]+/)?[\\\\\\\\'\\\"]*(?:l[\\\\\\\\'\\\"]*(?:w[\\\\\\\\'\\\"]*p[\\\\\\\\'\\\"]*-[\\\\\\\\'\\\"]*(?:d[\\\\\\\\'\\\"]*(?:o[\\\\\\\\'\\\"]*w[\\\\\\\\'\\\"]*n[\\\\\\\\'\\\"]*l[\\\\\\\\'\\\"]*o[\\\\\\\\'\\\"]*a[\\\\\\\\'\\\"]*d|u[\\\\\\\\'\\\"]*m[\\\\\\\\'\\\"]*p)|r[\\\\\\\\'\\\"]*e[\\\\\\\\'\\\"]*q[\\\\\\\\'\\\"]*u[\\\\\\\\'\\\"]*e[\\\\\\\\'\\\"]*s[\\\\\\\\'\\\"]*t|m[\\\\\\\\'\\\"]*i[\\\\\\\\'\\\"]*r[\\\\\\\\'\\\"]*r[\\\\\\\\'\\\"]*o[\\\\\\\\'\\\"]*r)|s(?:[\\\\\\\\'\\\"]*(?:b[\\\\\\\\'\\\"]*_[\\\\\\\\'\\\"]*r[\\\\\\\\'\\\"]*e[\\\\\\\\'\\\"]*l[\\\\\\\\'\\\"]*e[\\\\\\\\'\\\"]*a[\\\\\\\\'\\\"]*s[\\\\\\\\'\\\"]*e|c[\\\\\\\\'\\\"]*p[\\\\\\\\'\\\"]*u|m[\\\\\\\\'\\\"]*o[\\\\\\\\'\\\"]*d|p[\\\\\\\\'\\\"]*c[\\\\\\\\'\\\"]*i|u[\\\\\\\\'\\\"]*s[\\\\\\\\'\\\"]*b|-[\\\\\\\\'\\\"]*F|h[\\\\\\\\'\\\"]*w|o[\\\\\\\\'\\\"]*f))?|z[\\\\\\\\'\\\"]*(?:(?:[ef][\\\\\\\\'\\\"]*)?g[\\\\\\\\'\\\"]*r[\\\\\\\\'\\\"]*e[\\\\\\\\'\\\"]*p|c[\\\\\\\\'\\\"]*(?:a[\\\\\\\\'\\\"]*t|m[\\\\\\\\'\\\"]*p)|m[\\\\\\\\'\\\"]*(?:o[\\\\\\\\'\\\"]*r[\\\\\\\\'\\\"]*e|a)|d[\\\\\\\\'\\\"]*i[\\\\\\\\'\\\"]*f[\\\\\\\\'\\\"]*f|l[\\\\\\\\'\\\"]*e[\\\\\\\\'\\\"]*s[\\\\\\\\'\\\"]*s)|e[\\\\\\\\'\\\"]*s[\\\\\\\\'\\\"]*s[\\\\\\\\'\\\"]*(?:(?:f[\\\\\\\\'\\\"]*i[\\\\\\\\'\\\"]*l|p[\\\\\\\\'\\\"]*i[\\\\\\\\'\\\"]*p)[\\\\\\\\'\\\"]*e|e[\\\\\\\\'\\\"]*c[\\\\\\\\'\\\"]*h[\\\\\\\\'\\\"]*o|(?:\\s|<|>).*)|a[\\\\\\\\'\\\"]*s[\\\\\\\\'\\\"]*t[\\\\\\\\'\\\"]*(?:l[\\\\\\\\'\\\"]*o[\\\\\\\\'\\\"]*g(?:[\\\\\\\\'\\\"]*i[\\\\\\\\'\\\"]*n)?|c[\\\\\\\\'\\\"]*o[\\\\\\\\'\\\"]*m[\\\\\\\\'\\\"]*m|(?:\\s|<|>).*)|o[\\\\\\\\'\\\"]*(?:c[\\\\\\\\'\\\"]*a[\\\\\\\\'\\\"]*(?:t[\\\\\\\\'\\\"]*e|l)[\\\\\\\\'\\\"]*(?:\\s|<|>).*|g[\\\\\\\\'\\\"]*n[\\\\\\\\'\\\"]*a[\\\\\\\\'\\\"]*m[\\\\\\\\'\\\"]*e)|d[\\\\\\\\'\\\"]*(?:c[\\\\\\\\'\\\"]*o[\\\\\\\\'\\\"]*n[\\\\\\\\'\\\"]*f[\\\\\\\\'\\\"]*i[\\\\\\\\'\\\"]*g|d[\\\\\\\\'\\\"]*(?:\\s|<|>).*)|(?:[np]|i[\\\\\\\\'\\\"]*n[\\\\\\\\'\\\"]*k[\\\\\\\\'\\\"]*s|y[\\\\\\\\'\\\"]*n[\\\\\\\\'\\\"]*x)[\\\\\\\\'\\\"]*(?:\\s|<|>).*|u[\\\\\\\\'\\\"]*a[\\\\\\\\'\\\"]*(?:5[\\\\\\\\'\\\"]*\\.[\\\\\\\\'\\\"]*[1234]|(?:\\s|<|>).*)|f[\\\\\\\\'\\\"]*t[\\\\\\\\'\\\"]*p(?:[\\\\\\\\'\\\"]*g[\\\\\\\\'\\\"]*e[\\\\\\\\'\\\"]*t)?)|b[\\\\\\\\'\\\"]*(?:z[\\\\\\\\'\\\"]*(?:(?:[ef][\\\\\\\\'\\\"]*)?g[\\\\\\\\'\\\"]*r[\\\\\\\\'\\\"]*e[\\\\\\\\'\\\"]*p|d[\\\\\\\\'\\\"]*i[\\\\\\\\'\\\"]*f[\\\\\\\\'\\\"]*f|l[\\\\\\\\'\\\"]*e[\\\\\\\\'\\\"]*s[\\\\\\\\'\\\"]*s|m[\\\\\\\\'\\\"]*o[\\\\\\\\'\\\"]*r[\\\\\\\\'\\\"]*e|c[\\\\\\\\'\\\"]*a[\\\\\\\\'\\\"]*t|i[\\\\\\\\'\\\"]*p[\\\\\\\\'\\\"]*2)|s[\\\\\\\\'\\\"]*d[\\\\\\\\'\\\"]*(?:c[\\\\\\\\'\\\"]*a[\\\\\\\\'\\\"]*t|i[\\\\\\\\'\\\"]*f[\\\\\\\\'\\\"]*f|t[\\\\\\\\'\\\"]*a[\\\\\\\\'\\\"]*r)|a[\\\\\\\\'\\\"]*(?:t[\\\\\\\\'\\\"]*c[\\\\\\\\'\\\"]*h[\\\\\\\\'\\\"]*(?:\\s|<|>).*|s[\\\\\\\\'\\\"]*h)|r[\\\\\\\\'\\\"]*e[\\\\\\\\'\\\"]*a[\\\\\\\\'\\\"]*k[\\\\\\\\'\\\"]*s[\\\\\\\\'\\\"]*w|u[\\\\\\\\'\\\"]*i[\\\\\\\\'\\\"]*l[\\\\\\\\'\\\"]*t[\\\\\\\\'\\\"]*i[\\\\\\\\'\\\"]*n)|f[\\\\\\\\'\\\"]*(?:i(?:[\\\\\\\\'\\\"]*(?:l[\\\\\\\\'\\\"]*e[\\\\\\\\'\\\"]*(?:t[\\\\\\\\'\\\"]*e[\\\\\\\\'\\\"]*s[\\\\\\\\'\\\"]*t|(?:\\s|<|>).*)|n[\\\\\\\\'\\\"]*d[\\\\\\\\'\\\"]*(?:\\s|<|>).*|s[\\\\\\\\'\\\"]*h))?|t[\\\\\\\\'\\\"]*p[\\\\\\\\'\\\"]*(?:s[\\\\\\\\'\\\"]*t[\\\\\\\\'\\\"]*a[\\\\\\\\'\\\"]*t[\\\\\\\\'\\\"]*s|w[\\\\\\\\'\\\"]*h[\\\\\\\\'\\\"]*o|(?:\\s|<|>).*)|u[\\\\\\\\'\\\"]*n[\\\\\\\\'\\\"]*c[\\\\\\\\'\\\"]*t[\\\\\\\\'\\\"]*i[\\\\\\\\'\\\"]*o[\\\\\\\\'\\\"]*n|(?:e[\\\\\\\\'\\\"]*t[\\\\\\\\'\\\"]*c[\\\\\\\\'\\\"]*h|c)[\\\\\\\\'\\\"]*(?:\\s|<|>).*|o[\\\\\\\\'\\\"]*r[\\\\\\\\'\\\"]*e[\\\\\\\\'\\\"]*a[\\\\\\\\'\\\"]*c[\\\\\\\\'\\\"]*h|g[\\\\\\\\'\\\"]*r[\\\\\\\\'\\\"]*e[\\\\\\\\'\\\"]*p)|c[\\\\\\\\'\\\"]*(?:o[\\\\\\\\'\\\"]*(?:m[\\\\\\\\'\\\"]*(?:p[\\\\\\\\'\\\"]*r[\\\\\\\\'\\\"]*e[\\\\\\\\'\\\"]*s[\\\\\\\\'\\\"]*s|m[\\\\\\\\'\\\"]*a[\\\\\\\\'\\\"]*n[\\\\\\\\'\\\"]*d)[\\\\\\\\'\\\"]*(?:\\s|<|>).*|p[\\\\\\\\'\\\"]*r[\\\\\\\\'\\\"]*o[\\\\\\\\'\\\"]*c)|h[\\\\\\\\'\\\"]*(?:d[\\\\\\\\'\\\"]*i[\\\\\\\\'\\\"]*r[\\\\\\\\'\\\"]*(?:\\s|<|>).*|f[\\\\\\\\'\\\"]*l[\\\\\\\\'\\\"]*a[\\\\\\\\'\\\"]*g[\\\\\\\\'\\\"]*s|a[\\\\\\\\'\\\"]*t[\\\\\\\\'\\\"]*t[\\\\\\\\'\\\"]*r|m[\\\\\\\\'\\\"]*o[\\\\\\\\'\\\"]*d)|r[\\\\\\\\'\\\"]*o[\\\\\\\\'\\\"]*n[\\\\\\\\'\\\"]*t[\\\\\\\\'\\\"]*a[\\\\\\\\'\\\"]*b|(?:[cp]|a[\\\\\\\\'\\\"]*t)[\\\\\\\\'\\\"]*(?:\\s|<|>).*|u[\\\\\\\\'\\\"]*r[\\\\\\\\'\\\"]*l|s[\\\\\\\\'\\\"]*h)|e[\\\\\\\\'\\\"]*(?:n[\\\\\\\\'\\\"]*(?:v(?:[\\\\\\\\'\\\"]*-[\\\\\\\\'\\\"]*u[\\\\\\\\'\\\"]*p[\\\\\\\\'\\\"]*d[\\\\\\\\'\\\"]*a[\\\\\\\\'\\\"]*t[\\\\\\\\'\\\"]*e)?|d[\\\\\\\\'\\\"]*(?:i[\\\\\\\\'\\\"]*f|s[\\\\\\\\'\\\"]*w))|x[\\\\\\\\'\\\"]*(?:p[\\\\\\\\'\\\"]*(?:a[\\\\\\\\'\\\"]*n[\\\\\\\\'\\\"]*d|o[\\\\\\\\'\\\"]*r[\\\\\\\\'\\\"]*t|r)|e[\\\\\\\\'\\\"]*c[\\\\\\\\'\\\"]*(?:\\s|<|>).*)|c[\\\\\\\\'\\\"]*h[\\\\\\\\'\\\"]*o[\\\\\\\\'\\\"]*(?:\\s|<|>).*|g[\\\\\\\\'\\\"]*r[\\\\\\\\'\\\"]*e[\\\\\\\\'\\\"]*p|s[\\\\\\\\'\\\"]*a[\\\\\\\\'\\\"]*c|v[\\\\\\\\'\\\"]*a[\\\\\\\\'\\\"]*l)|h[\\\\\\\\'\\\"]*(?:t[\\\\\\\\'\\\"]*(?:d[\\\\\\\\'\\\"]*i[\\\\\\\\'\\\"]*g[\\\\\\\\'\\\"]*e[\\\\\\\\'\\\"]*s[\\\\\\\\'\\\"]*t|p[\\\\\\\\'\\\"]*a[\\\\\\\\'\\\"]*s[\\\\\\\\'\\\"]*s[\\\\\\\\'\\\"]*w[\\\\\\\\'\\\"]*d)|o[\\\\\\\\'\\\"]*s[\\\\\\\\'\\\"]*t[\\\\\\\\'\\\"]*(?:n[\\\\\\\\'\\\"]*a[\\\\\\\\'\\\"]*m[\\\\\\\\'\\\"]*e|i[\\\\\\\\'\\\"]*d)|(?:e[\\\\\\\\'\\\"]*a[\\\\\\\\'\\\"]*d|u[\\\\\\\\'\\\"]*p)[\\\\\\\\'\\\"]*(?:\\s|<|>).*|i[\\\\\\\\'\\\"]*s[\\\\\\\\'\\\"]*t[\\\\\\\\'\\\"]*o[\\\\\\\\'\\\"]*r[\\\\\\\\'\\\"]*y)|i[\\\\\\\\'\\\"]*(?:p[\\\\\\\\'\\\"]*(?:(?:6[\\\\\\\\'\\\"]*)?t[\\\\\\\\'\\\"]*a[\\\\\\\\'\\\"]*b[\\\\\\\\'\\\"]*l[\\\\\\\\'\\\"]*e[\\\\\\\\'\\\"]*s|c[\\\\\\\\'\\\"]*o[\\\\\\\\'\\\"]*n[\\\\\\\\'\\\"]*f[\\\\\\\\'\\\"]*i[\\\\\\\\'\\\"]*g)|r[\\\\\\\\'\\\"]*b(?:[\\\\\\\\'\\\"]*(?:2[\\\\\\\\'\\\"]*[01234567]|1(?:[\\\\\\\\'\\\"]*[89])?|3[\\\\\\\\'\\\"]*0))?|f[\\\\\\\\'\\\"]*c[\\\\\\\\'\\\"]*o[\\\\\\\\'\\\"]*n[\\\\\\\\'\\\"]*f[\\\\\\\\'\\\"]*i[\\\\\\\\'\\\"]*g|d[\\\\\\\\'\\\"]*(?:\\s|<|>).*)|a[\\\\\\\\'\\\"]*(?:l[\\\\\\\\'\\\"]*(?:i[\\\\\\\\'\\\"]*a[\\\\\\\\'\\\"]*s[\\\\\\\\'\\\"]*(?:\\s|<|>).*|p[\\\\\\\\'\\\"]*i[\\\\\\\\'\\\"]*n[\\\\\\\\'\\\"]*e)|d[\\\\\\\\'\\\"]*d[\\\\\\\\'\\\"]*u[\\\\\\\\'\\\"]*s[\\\\\\\\'\\\"]*e[\\\\\\\\'\\\"]*r|p[\\\\\\\\'\\\"]*t[\\\\\\\\'\\\"]*-[\\\\\\\\'\\\"]*g[\\\\\\\\'\\\"]*e[\\\\\\\\'\\\"]*t|r[\\\\\\\\'\\\"]*(?:c[\\\\\\\\'\\\"]*h[\\\\\\\\'\\\"]*(?:\\s|<|>).*|p)|w[\\\\\\\\'\\\"]*[ks][\\\\\\\\'\\\"]*(?:\\s|<|>).*)|g[\\\\\\\\'\\\"]*(?:(?:e[\\\\\\\\'\\\"]*t[\\\\\\\\'\\\"]*f[\\\\\\\\'\\\"]*a[\\\\\\\\'\\\"]*c[\\\\\\\\'\\\"]*l|r[\\\\\\\\'\\\"]*e[\\\\\\\\'\\\"]*p|c[\\\\\\\\'\\\"]*c|i[\\\\\\\\'\\\"]*t|o)[\\\\\\\\'\\\"]*(?:\\s|<|>).*|z[\\\\\\\\'\\\"]*(?:c[\\\\\\\\'\\\"]*a[\\\\\\\\'\\\"]*t|i[\\\\\\\\'\\\"]*p)|u[\\\\\\\\'\\\"]*n[\\\\\\\\'\\\"]*z[\\\\\\\\'\\\"]*i[\\\\\\\\'\\\"]*p|d[\\\\\\\\'\\\"]*b)|d[\\\\\\\\'\\\"]*(?:h[\\\\\\\\'\\\"]*c[\\\\\\\\'\\\"]*l[\\\\\\\\'\\\"]*i[\\\\\\\\'\\\"]*e[\\\\\\\\'\\\"]*n[\\\\\\\\'\\\"]*t|(?:i[\\\\\\\\'\\\"]*f[\\\\\\\\'\\\"]*f|u)[\\\\\\\\'\\\"]*(?:\\s|<|>).*|(?:m[\\\\\\\\'\\\"]*e[\\\\\\\\'\\\"]*s|p[\\\\\\\\'\\\"]*k)[\\\\\\\\'\\\"]*g|o[\\\\\\\\'\\\"]*(?:a[\\\\\\\\'\\\"]*s|n[\\\\\\\\'\\\"]*e)|a[\\\\\\\\'\\\"]*s[\\\\\\\\'\\\"]*h)|m[\\\\\\\\'\\\"]*(?:(?:k[\\\\\\\\'\\\"]*d[\\\\\\\\'\\\"]*i[\\\\\\\\'\\\"]*r|o[\\\\\\\\'\\\"]*r[\\\\\\\\'\\\"]*e)[\\\\\\\\'\\\"]*(?:\\s|<|>).*|a[\\\\\\\\'\\\"]*i[\\\\\\\\'\\\"]*l[\\\\\\\\'\\\"]*(?:x[\\\\\\\\'\\\"]*(?:\\s|<|>).*|q)|l[\\\\\\\\'\\\"]*o[\\\\\\\\'\\\"]*c[\\\\\\\\'\\\"]*a[\\\\\\\\'\\\"]*t[\\\\\\\\'\\\"]*e)|j[\\\\\\\\'\\\"]*(?:(?:a[\\\\\\\\'\\\"]*v[\\\\\\\\'\\\"]*a|o[\\\\\\\\'\\\"]*b[\\\\\\\\'\\\"]*s)[\\\\\\\\'\\\"]*(?:\\s|<|>).*|e[\\\\\\\\'\\\"]*x[\\\\\\\\'\\\"]*e[\\\\\\\\'\\\"]*c)|k[\\\\\\\\'\\\"]*(?:i[\\\\\\\\'\\\"]*l[\\\\\\\\'\\\"]*l[\\\\\\\\'\\\"]*(?:a[\\\\\\\\'\\\"]*l[\\\\\\\\'\\\"]*l|(?:\\s|<|>).*)|s[\\\\\\\\'\\\"]*h)|G[\\\\\\\\'\\\"]*E[\\\\\\\\'\\\"]*T[\\\\\\\\'\\\"]*(?:\\s|<|>).*|7[\\\\\\\\'\\\"]*z(?:[\\\\\\\\'\\\"]*[ar])?)\\b\" \\\n    \"id:460103,\\\n    phase:2,\\\n    block,\\\n    t:none,\\\n    severity:'CRITICAL',\\\n    setvar:'tx.inbound_anomaly_score_pl1=+%{tx.critical_anomaly_score}'\"",
        "description": "Remote Command Execution: Unix Command Injection",
        "rule_id": "460",
        "sec_rule_id": "460103",
        "severity": "CRITICAL"
    },
    {
        "comment": "# Remote Command Execution: Unix Command Injection",
        "content": "SecRule REQUEST_COOKIES|REQUEST_COOKIES_NAMES|ARGS_NAMES|ARGS \"@rx (?:;|\\{|\\||\\|\\||&|&&|\\n|\\r|\\$\\(|\\$\\(\\(|`|\\${|<\\(|>\\(|\\(\\s*\\))\\s*(?:{|\\s*\\(\\s*|\\w+=(?:[^\\s]*|\\$.*|\\$.*|<.*|>.*|\\'.*\\'|\\\".*\\\")\\s+|!\\s*|\\$)*\\s*(?:'|\\\")*(?:[\\?\\*\\[\\]\\(\\)\\-\\|+\\w'\\\"\\./\\\\\\\\]+/)?[\\\\\\\\'\\\"]*(?:s[\\\\\\\\'\\\"]*(?:e[\\\\\\\\'\\\"]*(?:t[\\\\\\\\'\\\"]*(?:(?:f[\\\\\\\\'\\\"]*a[\\\\\\\\'\\\"]*c[\\\\\\\\'\\\"]*l[\\\\\\\\'\\\"]*)?(?:\\s|<|>).*|e[\\\\\\\\'\\\"]*n[\\\\\\\\'\\\"]*v|s[\\\\\\\\'\\\"]*i[\\\\\\\\'\\\"]*d)|n[\\\\\\\\'\\\"]*d[\\\\\\\\'\\\"]*m[\\\\\\\\'\\\"]*a[\\\\\\\\'\\\"]*i[\\\\\\\\'\\\"]*l|d[\\\\\\\\'\\\"]*(?:\\s|<|>).*)|h[\\\\\\\\'\\\"]*(?:\\.[\\\\\\\\'\\\"]*d[\\\\\\\\'\\\"]*i[\\\\\\\\'\\\"]*s[\\\\\\\\'\\\"]*t[\\\\\\\\'\\\"]*r[\\\\\\\\'\\\"]*i[\\\\\\\\'\\\"]*b|u[\\\\\\\\'\\\"]*t[\\\\\\\\'\\\"]*d[\\\\\\\\'\\\"]*o[\\\\\\\\'\\\"]*w[\\\\\\\\'\\\"]*n|(?:\\s|<|>).*)|o[\\\\\\\\'\\\"]*(?:(?:u[\\\\\\\\'\\\"]*r[\\\\\\\\'\\\"]*c[\\\\\\\\'\\\"]*e|r[\\\\\\\\'\\\"]*t)[\\\\\\\\'\\\"]*(?:\\s|<|>).*|c[\\\\\\\\'\\\"]*a[\\\\\\\\'\\\"]*t)|c[\\\\\\\\'\\\"]*(?:h[\\\\\\\\'\\\"]*e[\\\\\\\\'\\\"]*d|p[\\\\\\\\'\\\"]*(?:\\s|<|>).*)|t[\\\\\\\\'\\\"]*r[\\\\\\\\'\\\"]*i[\\\\\\\\'\\\"]*n[\\\\\\\\'\\\"]*g[\\\\\\\\'\\\"]*s|(?:l[\\\\\\\\'\\\"]*e[\\\\\\\\'\\\"]*e|f[\\\\\\\\'\\\"]*t)[\\\\\\\\'\\\"]*p|y[\\\\\\\\'\\\"]*s[\\\\\\\\'\\\"]*c[\\\\\\\\'\\\"]*t[\\\\\\\\'\\\"]*l|u[\\\\\\\\'\\\"]*(?:(?:\\s|<|>).*|d[\\\\\\\\'\\\"]*o)|d[\\\\\\\\'\\\"]*i[\\\\\\\\'\\\"]*f[\\\\\\\\'\\\"]*f|s[\\\\\\\\'\\\"]*h|v[\\\\\\\\'\\\"]*n)|p[\\\\\\\\'\\\"]*(?:k[\\\\\\\\'\\\"]*(?:g(?:(?:[\\\\\\\\'\\\"]*_)?[\\\\\\\\'\\\"]*i[\\\\\\\\'\\\"]*n[\\\\\\\\'\\\"]*f[\\\\\\\\'\\\"]*o)?|e[\\\\\\\\'\\\"]*x[\\\\\\\\'\\\"]*e[\\\\\\\\'\\\"]*c|i[\\\\\\\\'\\\"]*l[\\\\\\\\'\\\"]*l)|t[\\\\\\\\'\\\"]*a[\\\\\\\\'\\\"]*r(?:[\\\\\\\\'\\\"]*(?:d[\\\\\\\\'\\\"]*i[\\\\\\\\'\\\"]*f[\\\\\\\\'\\\"]*f|g[\\\\\\\\'\\\"]*r[\\\\\\\\'\\\"]*e[\\\\\\\\'\\\"]*p))?|a[\\\\\\\\'\\\"]*(?:t[\\\\\\\\'\\\"]*c[\\\\\\\\'\\\"]*h[\\\\\\\\'\\\"]*(?:\\s|<|>).*|s[\\\\\\\\'\\\"]*s[\\\\\\\\'\\\"]*w[\\\\\\\\'\\\"]*d)|r[\\\\\\\\'\\\"]*i[\\\\\\\\'\\\"]*n[\\\\\\\\'\\\"]*t[\\\\\\\\'\\\"]*(?:e[\\\\\\\\'\\\"]*n[\\\\\\\\'\\\"]*v|f[\\\\\\\\'\\\"]*(?:\\s|<|>).*)|y[\\\\\\\\'\\\"]*t[\\\\\\\\'\\\"]*h[\\\\\\\\'\\\"]*o[\\\\\\\\'\\\"]*n(?:[\\\\\\\\'\\\"]*(?:3(?:[\\\\\\\\'\\\"]*m)?|2))?|e[\\\\\\\\'\\\"]*r[\\\\\\\\'\\\"]*(?:l(?:[\\\\\\\\'\\\"]*(?:s[\\\\\\\\'\\\"]*h|5))?|m[\\\\\\\\'\\\"]*s)|(?:u[\\\\\\\\'\\\"]*s[\\\\\\\\'\\\"]*h|o[\\\\\\\\'\\\"]*p)[\\\\\\\\'\\\"]*d|f[\\\\\\\\'\\\"]*(?:(?:\\s|<|>).*|t[\\\\\\\\'\\\"]*p)|g[\\\\\\\\'\\\"]*r[\\\\\\\\'\\\"]*e[\\\\\\\\'\\\"]*p|h[\\\\\\\\'\\\"]*p(?:[\\\\\\\\'\\\"]*[57])?|i[\\\\\\\\'\\\"]*n[\\\\\\\\'\\\"]*g|s[\\\\\\\\'\\\"]*(?:\\s|<|>).*)|n[\\\\\\\\'\\\"]*(?:c[\\\\\\\\'\\\"]*(?:\\.[\\\\\\\\'\\\"]*(?:t[\\\\\\\\'\\\"]*r[\\\\\\\\'\\\"]*a[\\\\\\\\'\\\"]*d[\\\\\\\\'\\\"]*i[\\\\\\\\'\\\"]*t[\\\\\\\\'\\\"]*i[\\\\\\\\'\\\"]*o[\\\\\\\\'\\\"]*n[\\\\\\\\'\\\"]*a[\\\\\\\\'\\\"]*l|o[\\\\\\\\'\\\"]*p[\\\\\\\\'\\\"]*e[\\\\\\\\'\\\"]*n[\\\\\\\\'\\\"]*b[\\\\\\\\'\\\"]*s[\\\\\\\\'\\\"]*d)|(?:\\s|<|>).*|a[\\\\\\\\'\\\"]*t)|e[\\\\\\\\'\\\"]*t[\\\\\\\\'\\\"]*(?:k[\\\\\\\\'\\\"]*i[\\\\\\\\'\\\"]*t[\\\\\\\\'\\\"]*-[\\\\\\\\'\\\"]*f[\\\\\\\\'\\\"]*t[\\\\\\\\'\\\"]*p|(?:s[\\\\\\\\'\\\"]*t|c)[\\\\\\\\'\\\"]*a[\\\\\\\\'\\\"]*t|(?:\\s|<|>).*)|s[\\\\\\\\'\\\"]*(?:l[\\\\\\\\'\\\"]*o[\\\\\\\\'\\\"]*o[\\\\\\\\'\\\"]*k[\\\\\\\\'\\\"]*u[\\\\\\\\'\\\"]*p|t[\\\\\\\\'\\\"]*a[\\\\\\\\'\\\"]*t)|(?:a[\\\\\\\\'\\\"]*n[\\\\\\\\'\\\"]*o|i[\\\\\\\\'\\\"]*c[\\\\\\\\'\\\"]*e)[\\\\\\\\'\\\"]*(?:\\s|<|>).*|(?:o[\\\\\\\\'\\\"]*h[\\\\\\\\'\\\"]*u|m[\\\\\\\\'\\\"]*a)[\\\\\\\\'\\\"]*p|p[\\\\\\\\'\\\"]*i[\\\\\\\\'\\\"]*n[\\\\\\\\'\\\"]*g)|r[\\\\\\\\'\\\"]*(?:e[\\\\\\\\'\\\"]*(?:(?:p[\\\\\\\\'\\\"]*(?:l[\\\\\\\\'\\\"]*a[\\\\\\\\'\\\"]*c[\\\\\\\\'\\\"]*e|e[\\\\\\\\'\\\"]*a[\\\\\\\\'\\\"]*t)|n[\\\\\\\\'\\\"]*a[\\\\\\\\'\\\"]*m[\\\\\\\\'\\\"]*e)[\\\\\\\\'\\\"]*(?:\\s|<|>).*|a[\\\\\\\\'\\\"]*l[\\\\\\\\'\\\"]*p[\\\\\\\\'\\\"]*a[\\\\\\\\'\\\"]*t[\\\\\\\\'\\\"]*h)|m[\\\\\\\\'\\\"]*(?:(?:d[\\\\\\\\'\\\"]*i[\\\\\\\\'\\\"]*r[\\\\\\\\'\\\"]*)?(?:\\s|<|>).*|u[\\\\\\\\'\\\"]*s[\\\\\\\\'\\\"]*e[\\\\\\\\'\\\"]*r)|u[\\\\\\\\'\\\"]*b[\\\\\\\\'\\\"]*y(?:[\\\\\\\\'\\\"]*(?:1(?:[\\\\\\\\'\\\"]*[89])?|2[\\\\\\\\'\\\"]*[012]))?|(?:c[\\\\\\\\'\\\"]*p|p[\\\\\\\\'\\\"]*m)[\\\\\\\\'\\\"]*(?:\\s|<|>).*|a[\\\\\\\\'\\\"]*(?:r[\\\\\\\\'\\\"]*(?:\\s|<|>).*|k[\\\\\\\\'\\\"]*u)|n[\\\\\\\\'\\\"]*a[\\\\\\\\'\\\"]*n[\\\\\\\\'\\\"]*o|o[\\\\\\\\'\\\"]*u[\\\\\\\\'\\\"]*t[\\\\\\\\'\\\"]*e|s[\\\\\\\\'\\\"]*y[\\\\\\\\'\\\"]*n[\\\\\\\\'\\\"]*c)|t[\\\\\\\\'\\\"]*(?:c[\\\\\\\\'\\\"]*(?:p[\\\\\\\\'\\\"]*(?:t[\\\\\\\\'\\\"]*r[\\\\\\\\'\\\"]*a[\\\\\\\\'\\\"]*c[\\\\\\\\'\\\"]*e[\\\\\\\\'\\\"]*r[\\\\\\\\'\\\"]*o[\\\\\\\\'\\\"]*u[\\\\\\\\'\\\"]*t[\\\\\\\\'\\\"]*e|i[\\\\\\\\'\\\"]*n[\\\\\\\\'\\\"]*g)|s[\\\\\\\\'\\\"]*h)|r[\\\\\\\\'\\\"]*a[\\\\\\\\'\\\"]*c[\\\\\\\\'\\\"]*e[\\\\\\\\'\\\"]*r[\\\\\\\\'\\\"]*o[\\\\\\\\'\\\"]*u[\\\\\\\\'\\\"]*t[\\\\\\\\'\\\"]*e(?:[\\\\\\\\'\\\"]*6)?|e[\\\\\\\\'\\\"]*(?:l[\\\\\\\\'\\\"]*n[\\\\\\\\'\\\"]*e[\\\\\\\\'\\\"]*t|e[\\\\\\\\'\\\"]*(?:\\s|<|>).*)|i[\\\\\\\\'\\\"]*m[\\\\\\\\'\\\"]*e[\\\\\\\\'\\\"]*(?:o[\\\\\\\\'\\\"]*u[\\\\\\\\'\\\"]*t|(?:\\s|<|>).*)|a[\\\\\\\\'\\\"]*(?:i[\\\\\\\\'\\\"]*l(?:[\\\\\\\\'\\\"]*f)?|r[\\\\\\\\'\\\"]*(?:\\s|<|>).*)|o[\\\\\\\\'\\\"]*(?:u[\\\\\\\\'\\\"]*c[\\\\\\\\'\\\"]*h[\\\\\\\\'\\\"]*(?:\\s|<|>).*|p))|u[\\\\\\\\'\\\"]*(?:n[\\\\\\\\'\\\"]*(?:l[\\\\\\\\'\\\"]*(?:i[\\\\\\\\'\\\"]*n[\\\\\\\\'\\\"]*k[\\\\\\\\'\\\"]*(?:\\s|<|>).*|z[\\\\\\\\'\\\"]*m[\\\\\\\\'\\\"]*a)|c[\\\\\\\\'\\\"]*o[\\\\\\\\'\\\"]*m[\\\\\\\\'\\\"]*p[\\\\\\\\'\\\"]*r[\\\\\\\\'\\\"]*e[\\\\\\\\'\\\"]*s[\\\\\\\\'\\\"]*s|a[\\\\\\\\'\\\"]*m[\\\\\\\\'\\\"]*e|r[\\\\\\\\'\\\"]*a[\\\\\\\\'\\\"]*r|s[\\\\\\\\'\\\"]*e[\\\\\\\\'\\\"]*t|z[\\\\\\\\'\\\"]*i[\\\\\\\\'\\\"]*p|x[\\\\\\\\'\\\"]*z)|s[\\\\\\\\'\\\"]*e[\\\\\\\\'\\\"]*r[\\\\\\\\'\\\"]*(?:(?:a[\\\\\\\\'\\\"]*d|m[\\\\\\\\'\\\"]*o)[\\\\\\\\'\\\"]*d|d[\\\\\\\\'\\\"]*e[\\\\\\\\'\\\"]*l)|l[\\\\\\\\'\\\"]*i[\\\\\\\\'\\\"]*m[\\\\\\\\'\\\"]*i[\\\\\\\\'\\\"]*t[\\\\\\\\'\\\"]*(?:\\s|<|>).*)|m[\\\\\\\\'\\\"]*(?:y[\\\\\\\\'\\\"]*s[\\\\\\\\'\\\"]*q[\\\\\\\\'\\\"]*l(?:[\\\\\\\\'\\\"]*(?:d[\\\\\\\\'\\\"]*u[\\\\\\\\'\\\"]*m[\\\\\\\\'\\\"]*p(?:[\\\\\\\\'\\\"]*s[\\\\\\\\'\\\"]*l[\\\\\\\\'\\\"]*o[\\\\\\\\'\\\"]*w)?|h[\\\\\\\\'\\\"]*o[\\\\\\\\'\\\"]*t[\\\\\\\\'\\\"]*c[\\\\\\\\'\\\"]*o[\\\\\\\\'\\\"]*p[\\\\\\\\'\\\"]*y|a[\\\\\\\\'\\\"]*d[\\\\\\\\'\\\"]*m[\\\\\\\\'\\\"]*i[\\\\\\\\'\\\"]*n|s[\\\\\\\\'\\\"]*h[\\\\\\\\'\\\"]*o[\\\\\\\\'\\\"]*w))?|(?:(?:o[\\\\\\\\'\\\"]*u[\\\\\\\\'\\\"]*n|u[\\\\\\\\'\\\"]*t)[\\\\\\\\'\\\"]*t|v)[\\\\\\\\'\\\"]*(?:\\s|<|>).*)|x[\\\\\\\\'\\\"]*(?:z[\\\\\\\\'\\\"]*(?:(?:[ef][\\\\\\\\'\\\"]*)?g[\\\\\\\\'\\\"]*r[\\\\\\\\'\\\"]*e[\\\\\\\\'\\\"]*p|d[\\\\\\\\'\\\"]*(?:i[\\\\\\\\'\\\"]*f[\\\\\\\\'\\\"]*f|e[\\\\\\\\'\\\"]*c)|c[\\\\\\\\'\\\"]*(?:a[\\\\\\\\'\\\"]*t|m[\\\\\\\\'\\\"]*p)|l[\\\\\\\\'\\\"]*e[\\\\\\\\'\\\"]*s[\\\\\\\\'\\\"]*s|m[\\\\\\\\'\\\"]*o[\\\\\\\\'\\\"]*r[\\\\\\\\'\\\"]*e|(?:\\s|<|>).*)|a[\\\\\\\\'\\\"]*r[\\\\\\\\'\\\"]*g[\\\\\\\\'\\\"]*s|t[\\\\\\\\'\\\"]*e[\\\\\\\\'\\\"]*r[\\\\\\\\'\\\"]*m|x[\\\\\\\\'\\\"]*d[\\\\\\\\'\\\"]*(?:\\s|<|>).*)|z[\\\\\\\\'\\\"]*(?:(?:[ef][\\\\\\\\'\\\"]*)?g[\\\\\\\\'\\\"]*r[\\\\\\\\'\\\"]*e[\\\\\\\\'\\\"]*p|c[\\\\\\\\'\\\"]*(?:a[\\\\\\\\'\\\"]*t|m[\\\\\\\\'\\\"]*p)|d[\\\\\\\\'\\\"]*i[\\\\\\\\'\\\"]*f[\\\\\\\\'\\\"]*f|i[\\\\\\\\'\\\"]*p[\\\\\\\\'\\\"]*(?:\\s|<|>).*|l[\\\\\\\\'\\\"]*e[\\\\\\\\'\\\"]*s[\\\\\\\\'\\\"]*s|m[\\\\\\\\'\\\"]*o[\\\\\\\\'\\\"]*r[\\\\\\\\'\\\"]*e|r[\\\\\\\\'\\\"]*u[\\\\\\\\'\\\"]*n|s[\\\\\\\\'\\\"]*h)|o[\\\\\\\\'\\\"]*(?:p[\\\\\\\\'\\\"]*e[\\\\\\\\'\\\"]*n[\\\\\\\\'\\\"]*s[\\\\\\\\'\\\"]*s[\\\\\\\\'\\\"]*l|n[\\\\\\\\'\\\"]*i[\\\\\\\\'\\\"]*n[\\\\\\\\'\\\"]*t[\\\\\\\\'\\\"]*r)|w[\\\\\\\\'\\\"]*(?:h[\\\\\\\\'\\\"]*o[\\\\\\\\'\\\"]*(?:a[\\\\\\\\'\\\"]*m[\\\\\\\\'\\\"]*i|(?:\\s|<|>).*)|g[\\\\\\\\'\\\"]*e[\\\\\\\\'\\\"]*t|3[\\\\\\\\'\\\"]*m)|v[\\\\\\\\'\\\"]*i[\\\\\\\\'\\\"]*(?:m[\\\\\\\\'\\\"]*(?:\\s|<|>).*|g[\\\\\\\\'\\\"]*r|p[\\\\\\\\'\\\"]*w)|y[\\\\\\\\'\\\"]*u[\\\\\\\\'\\\"]*m)\\b\" \\\n    \"id:460104,\\\n    phase:2,\\\n    block,\\\n    t:none,\\\n    severity:'CRITICAL',\\\n    setvar:'tx.inbound_anomaly_score_pl1=+%{tx.critical_anomaly_score}'\"",
        "description": "Remote Command Execution: Unix Command Injection",
        "rule_id": "460",
        "sec_rule_id": "460104",
        "severity": "CRITICAL"
    },
    {
        "comment": "# Remote Command Execution: Unix Shell Code Found",
        "content": "SecRule REQUEST_COOKIES|REQUEST_COOKIES_NAMES|ARGS_NAMES|ARGS \"@pm ${cdpath} ${dirstack} ${home} ${hostname} ${ifs} ${oldpwd} ${ostype} ${path} ${pwd} $cdpath $dirstack $home $hostname $ifs $oldpwd $ostype $path $pwd bin/bash bin/cat bin/csh bin/dash bin/du bin/echo bin/grep bin/less bin/ls bin/mknod bin/more bin/nc bin/ps bin/rbash bin/sh bin/sleep bin/su bin/tcsh bin/uname dev/fd/ dev/null dev/stderr dev/stdin dev/stdout dev/tcp/ dev/udp/ dev/zero etc/group etc/master.passwd etc/passwd etc/pwd.db etc/shadow etc/shells etc/spwd.db proc/self/ usr/bin/awk usr/bin/base64 usr/bin/cat usr/bin/cc usr/bin/clang usr/bin/clang++ usr/bin/curl usr/bin/diff usr/bin/env usr/bin/fetch usr/bin/file usr/bin/find usr/bin/ftp usr/bin/gawk usr/bin/gcc usr/bin/head usr/bin/hexdump usr/bin/id usr/bin/less usr/bin/ln usr/bin/mkfifo usr/bin/more usr/bin/nc usr/bin/ncat usr/bin/nice usr/bin/nmap usr/bin/perl usr/bin/php usr/bin/php5 usr/bin/php7 usr/bin/php-cgi usr/bin/printf usr/bin/psed usr/bin/python usr/bin/python2 usr/bin/python3 usr/bin/ruby usr/bin/sed usr/bin/socat usr/bin/tail usr/bin/tee usr/bin/telnet usr/bin/top usr/bin/uname usr/bin/wget usr/bin/who usr/bin/whoami usr/bin/xargs usr/bin/xxd usr/bin/yes usr/local/bin/bash usr/local/bin/curl usr/local/bin/ncat usr/local/bin/nmap usr/local/bin/perl usr/local/bin/php usr/local/bin/python usr/local/bin/python2 usr/local/bin/python3 usr/local/bin/rbash usr/local/bin/ruby usr/local/bin/wget\" \\\n    \"id:460105,\\\n    phase:2,\\\n    block,\\\n    t:lowercase,t:none,\\\n    severity:'CRITICAL',\\\n    setvar:'tx.inbound_anomaly_score_pl1=+%{tx.critical_anomaly_score}'\"",
        "description": "Remote Command Execution: Unix Shell Code Found",
        "rule_id": "460",
        "sec_rule_id": "460105",
        "severity": "CRITICAL"
    },
    {
        "comment": "# Remote Command Execution: Unix Shell Expression Found",
        "content": "SecRule REQUEST_COOKIES|REQUEST_COOKIES_NAMES|ARGS_NAMES|ARGS \"@rx (?:\\$(?:\\((?:\\(.*\\)|.*)\\)|\\{.*})|[<>]\\(.*\\))\" \\\n    \"id:460106,\\\n    phase:2,\\\n    block,\\\n    t:none,\\\n    severity:'CRITICAL',\\\n    setvar:'tx.inbound_anomaly_score_pl1=+%{tx.critical_anomaly_score}'\"",
        "description": "Remote Command Execution: Unix Shell Expression Found",
        "rule_id": "460",
        "sec_rule_id": "460106",
        "severity": "CRITICAL"
    },
    {
        "comment": "# Remote Command Execution: Windows Command Injection",
        "content": "SecRule REQUEST_COOKIES|REQUEST_COOKIES_NAMES|ARGS_NAMES|ARGS \"@rx (?:;|\\{|\\||\\|\\||&|&&|\\n|\\r|`)\\s*[\\(,@\\'\\\"\\s]*(?:[\\w'\\\"\\./]+/|[\\\\\\\\'\\\"\\^]*\\w[\\\\\\\\'\\\"\\^]*:.*\\\\\\\\|[\\^\\.\\w '\\\"/\\\\\\\\]*\\\\\\\\)?[\\\"\\^]*(?:m[\\\"\\^]*(?:y[\\\"\\^]*s[\\\"\\^]*q[\\\"\\^]*l(?:[\\\"\\^]*(?:d[\\\"\\^]*u[\\\"\\^]*m[\\\"\\^]*p(?:[\\\"\\^]*s[\\\"\\^]*l[\\\"\\^]*o[\\\"\\^]*w)?|h[\\\"\\^]*o[\\\"\\^]*t[\\\"\\^]*c[\\\"\\^]*o[\\\"\\^]*p[\\\"\\^]*y|a[\\\"\\^]*d[\\\"\\^]*m[\\\"\\^]*i[\\\"\\^]*n|s[\\\"\\^]*h[\\\"\\^]*o[\\\"\\^]*w))?|s[\\\"\\^]*(?:i[\\\"\\^]*(?:n[\\\"\\^]*f[\\\"\\^]*o[\\\"\\^]*3[\\\"\\^]*2|e[\\\"\\^]*x[\\\"\\^]*e[\\\"\\^]*c)|c[\\\"\\^]*o[\\\"\\^]*n[\\\"\\^]*f[\\\"\\^]*i[\\\"\\^]*g|g[\\\"\\^]*(?:[\\s,;]|\\.|/|<|>).*|t[\\\"\\^]*s[\\\"\\^]*c)|o[\\\"\\^]*(?:u[\\\"\\^]*n[\\\"\\^]*t[\\\"\\^]*(?:(?:[\\s,;]|\\.|/|<|>).*|v[\\\"\\^]*o[\\\"\\^]*l)|v[\\\"\\^]*e[\\\"\\^]*u[\\\"\\^]*s[\\\"\\^]*e[\\\"\\^]*r|[dr][\\\"\\^]*e[\\\"\\^]*(?:[\\s,;]|\\.|/|<|>).*)|k[\\\"\\^]*(?:d[\\\"\\^]*i[\\\"\\^]*r[\\\"\\^]*(?:[\\s,;]|\\.|/|<|>).*|l[\\\"\\^]*i[\\\"\\^]*n[\\\"\\^]*k)|d[\\\"\\^]*(?:s[\\\"\\^]*c[\\\"\\^]*h[\\\"\\^]*e[\\\"\\^]*d|(?:[\\s,;]|\\.|/|<|>).*)|a[\\\"\\^]*p[\\\"\\^]*i[\\\"\\^]*s[\\\"\\^]*e[\\\"\\^]*n[\\\"\\^]*d|b[\\\"\\^]*s[\\\"\\^]*a[\\\"\\^]*c[\\\"\\^]*l[\\\"\\^]*i|e[\\\"\\^]*a[\\\"\\^]*s[\\\"\\^]*u[\\\"\\^]*r[\\\"\\^]*e|m[\\\"\\^]*s[\\\"\\^]*y[\\\"\\^]*s)|d[\\\"\\^]*(?:i[\\\"\\^]*(?:s[\\\"\\^]*k[\\\"\\^]*(?:(?:m[\\\"\\^]*g[\\\"\\^]*m|p[\\\"\\^]*a[\\\"\\^]*r)[\\\"\\^]*t|s[\\\"\\^]*h[\\\"\\^]*a[\\\"\\^]*d[\\\"\\^]*o[\\\"\\^]*w)|r[\\\"\\^]*(?:(?:[\\s,;]|\\.|/|<|>).*|u[\\\"\\^]*s[\\\"\\^]*e)|f[\\\"\\^]*f[\\\"\\^]*(?:[\\s,;]|\\.|/|<|>).*)|e[\\\"\\^]*(?:l[\\\"\\^]*(?:p[\\\"\\^]*r[\\\"\\^]*o[\\\"\\^]*f|t[\\\"\\^]*r[\\\"\\^]*e[\\\"\\^]*e|(?:[\\s,;]|\\.|/|<|>).*)|v[\\\"\\^]*(?:m[\\\"\\^]*g[\\\"\\^]*m[\\\"\\^]*t|c[\\\"\\^]*o[\\\"\\^]*n)|(?:f[\\\"\\^]*r[\\\"\\^]*a|b[\\\"\\^]*u)[\\\"\\^]*g)|s[\\\"\\^]*(?:a[\\\"\\^]*(?:c[\\\"\\^]*l[\\\"\\^]*s|d[\\\"\\^]*d)|q[\\\"\\^]*u[\\\"\\^]*e[\\\"\\^]*r[\\\"\\^]*y|m[\\\"\\^]*o[\\\"\\^]*(?:v[\\\"\\^]*e|d)|g[\\\"\\^]*e[\\\"\\^]*t|r[\\\"\\^]*m)|(?:r[\\\"\\^]*i[\\\"\\^]*v[\\\"\\^]*e[\\\"\\^]*r[\\\"\\^]*q[\\\"\\^]*u[\\\"\\^]*e[\\\"\\^]*r|o[\\\"\\^]*s[\\\"\\^]*k[\\\"\\^]*e)[\\\"\\^]*y|(?:c[\\\"\\^]*o[\\\"\\^]*m[\\\"\\^]*c[\\\"\\^]*n[\\\"\\^]*f|x[\\\"\\^]*d[\\\"\\^]*i[\\\"\\^]*a)[\\\"\\^]*g|a[\\\"\\^]*t[\\\"\\^]*e[\\\"\\^]*(?:[\\s,;]|\\.|/|<|>).*|n[\\\"\\^]*s[\\\"\\^]*s[\\\"\\^]*t[\\\"\\^]*a[\\\"\\^]*t)|c[\\\"\\^]*(?:o[\\\"\\^]*(?:m[\\\"\\^]*(?:p[\\\"\\^]*(?:(?:a[\\\"\\^]*c[\\\"\\^]*t[\\\"\\^]*)?(?:[\\s,;]|\\.|/|<|>).*|m[\\\"\\^]*g[\\\"\\^]*m[\\\"\\^]*t)|e[\\\"\\^]*x[\\\"\\^]*p)|n[\\\"\\^]*(?:2[\\\"\\^]*p|v[\\\"\\^]*e)[\\\"\\^]*r[\\\"\\^]*t|p[\\\"\\^]*y)|l[\\\"\\^]*(?:e[\\\"\\^]*a[\\\"\\^]*(?:n[\\\"\\^]*m[\\\"\\^]*g[\\\"\\^]*r|r[\\\"\\^]*m[\\\"\\^]*e[\\\"\\^]*m)|u[\\\"\\^]*s[\\\"\\^]*t[\\\"\\^]*e[\\\"\\^]*r)|h[\\\"\\^]*(?:k[\\\"\\^]*(?:n[\\\"\\^]*t[\\\"\\^]*f[\\\"\\^]*s|d[\\\"\\^]*s[\\\"\\^]*k)|d[\\\"\\^]*i[\\\"\\^]*r[\\\"\\^]*(?:[\\s,;]|\\.|/|<|>).*)|s[\\\"\\^]*(?:c[\\\"\\^]*(?:r[\\\"\\^]*i[\\\"\\^]*p[\\\"\\^]*t|c[\\\"\\^]*m[\\\"\\^]*d)|v[\\\"\\^]*d[\\\"\\^]*e)|e[\\\"\\^]*r[\\\"\\^]*t[\\\"\\^]*(?:u[\\\"\\^]*t[\\\"\\^]*i[\\\"\\^]*l|r[\\\"\\^]*e[\\\"\\^]*q)|a[\\\"\\^]*(?:l[\\\"\\^]*l[\\\"\\^]*(?:[\\s,;]|\\.|/|<|>).*|c[\\\"\\^]*l[\\\"\\^]*s)|m[\\\"\\^]*d(?:[\\\"\\^]*k[\\\"\\^]*e[\\\"\\^]*y)?|i[\\\"\\^]*p[\\\"\\^]*h[\\\"\\^]*e[\\\"\\^]*r|u[\\\"\\^]*r[\\\"\\^]*l)|f[\\\"\\^]*(?:o[\\\"\\^]*r[\\\"\\^]*(?:m[\\\"\\^]*a[\\\"\\^]*t[\\\"\\^]*(?:[\\s,;]|\\.|/|<|>).*|f[\\\"\\^]*i[\\\"\\^]*l[\\\"\\^]*e[\\\"\\^]*s|e[\\\"\\^]*a[\\\"\\^]*c[\\\"\\^]*h)|i[\\\"\\^]*n[\\\"\\^]*d[\\\"\\^]*(?:(?:[\\s,;]|\\.|/|<|>).*|s[\\\"\\^]*t[\\\"\\^]*r)|s[\\\"\\^]*(?:m[\\\"\\^]*g[\\\"\\^]*m[\\\"\\^]*t|u[\\\"\\^]*t[\\\"\\^]*i[\\\"\\^]*l)|t[\\\"\\^]*(?:p[\\\"\\^]*(?:[\\s,;]|\\.|/|<|>).*|y[\\\"\\^]*p[\\\"\\^]*e)|r[\\\"\\^]*e[\\\"\\^]*e[\\\"\\^]*d[\\\"\\^]*i[\\\"\\^]*s[\\\"\\^]*k|c[\\\"\\^]*(?:[\\s,;]|\\.|/|<|>).*|g[\\\"\\^]*r[\\\"\\^]*e[\\\"\\^]*p)|n[\\\"\\^]*(?:e[\\\"\\^]*t[\\\"\\^]*(?:s[\\\"\\^]*(?:t[\\\"\\^]*a[\\\"\\^]*t|v[\\\"\\^]*c|h)|(?:[\\s,;]|\\.|/|<|>).*|c[\\\"\\^]*a[\\\"\\^]*t|d[\\\"\\^]*o[\\\"\\^]*m)|t[\\\"\\^]*(?:b[\\\"\\^]*a[\\\"\\^]*c[\\\"\\^]*k[\\\"\\^]*u[\\\"\\^]*p|r[\\\"\\^]*i[\\\"\\^]*g[\\\"\\^]*h[\\\"\\^]*t[\\\"\\^]*s)|(?:s[\\\"\\^]*l[\\\"\\^]*o[\\\"\\^]*o[\\\"\\^]*k[\\\"\\^]*u|m[\\\"\\^]*a)[\\\"\\^]*p|c[\\\"\\^]*(?:(?:[\\s,;]|\\.|/|<|>).*|a[\\\"\\^]*t)|b[\\\"\\^]*t[\\\"\\^]*s[\\\"\\^]*t[\\\"\\^]*a[\\\"\\^]*t)|e[\\\"\\^]*(?:x[\\\"\\^]*p[\\\"\\^]*(?:a[\\\"\\^]*n[\\\"\\^]*d[\\\"\\^]*(?:[\\s,;]|\\.|/|<|>).*|l[\\\"\\^]*o[\\\"\\^]*r[\\\"\\^]*e[\\\"\\^]*r)|v[\\\"\\^]*e[\\\"\\^]*n[\\\"\\^]*t[\\\"\\^]*(?:c[\\\"\\^]*r[\\\"\\^]*e[\\\"\\^]*a[\\\"\\^]*t[\\\"\\^]*e|v[\\\"\\^]*w[\\\"\\^]*r)|n[\\\"\\^]*d[\\\"\\^]*l[\\\"\\^]*o[\\\"\\^]*c[\\\"\\^]*a[\\\"\\^]*l|g[\\\"\\^]*r[\\\"\\^]*e[\\\"\\^]*p|r[\\\"\\^]*a[\\\"\\^]*s[\\\"\\^]*e|c[\\\"\\^]*h[\\\"\\^]*o)|g[\\\"\\^]*(?:a[\\\"\\^]*t[\\\"\\^]*h[\\\"\\^]*e[\\\"\\^]*r[\\\"\\^]*n[\\\"\\^]*e[\\\"\\^]*t[\\\"\\^]*w[\\\"\\^]*o[\\\"\\^]*r[\\\"\\^]*k[\\\"\\^]*i[\\\"\\^]*n[\\\"\\^]*f[\\\"\\^]*o|p[\\\"\\^]*(?:(?:r[\\\"\\^]*e[\\\"\\^]*s[\\\"\\^]*u[\\\"\\^]*l|e[\\\"\\^]*d[\\\"\\^]*i)[\\\"\\^]*t|u[\\\"\\^]*p[\\\"\\^]*d[\\\"\\^]*a[\\\"\\^]*t[\\\"\\^]*e)|i[\\\"\\^]*t[\\\"\\^]*(?:[\\s,;]|\\.|/|<|>).*|e[\\\"\\^]*t[\\\"\\^]*m[\\\"\\^]*a[\\\"\\^]*c)|i[\\\"\\^]*(?:r[\\\"\\^]*b(?:[\\\"\\^]*(?:1(?:[\\\"\\^]*[89])?|2[\\\"\\^]*[012]))?|f[\\\"\\^]*m[\\\"\\^]*e[\\\"\\^]*m[\\\"\\^]*b[\\\"\\^]*e[\\\"\\^]*r|p[\\\"\\^]*c[\\\"\\^]*o[\\\"\\^]*n[\\\"\\^]*f[\\\"\\^]*i[\\\"\\^]*g|n[\\\"\\^]*e[\\\"\\^]*t[\\\"\\^]*c[\\\"\\^]*p[\\\"\\^]*l|c[\\\"\\^]*a[\\\"\\^]*c[\\\"\\^]*l[\\\"\\^]*s)|a[\\\"\\^]*(?:d[\\\"\\^]*(?:d[\\\"\\^]*u[\\\"\\^]*s[\\\"\\^]*e[\\\"\\^]*r[\\\"\\^]*s|m[\\\"\\^]*o[\\\"\\^]*d[\\\"\\^]*c[\\\"\\^]*m[\\\"\\^]*d)|r[\\\"\\^]*p[\\\"\\^]*(?:[\\s,;]|\\.|/|<|>).*|t[\\\"\\^]*t[\\\"\\^]*r[\\\"\\^]*i[\\\"\\^]*b|s[\\\"\\^]*s[\\\"\\^]*o[\\\"\\^]*c|z[\\\"\\^]*m[\\\"\\^]*a[\\\"\\^]*n)|l[\\\"\\^]*(?:o[\\\"\\^]*g[\\\"\\^]*(?:e[\\\"\\^]*v[\\\"\\^]*e[\\\"\\^]*n[\\\"\\^]*t|t[\\\"\\^]*i[\\\"\\^]*m[\\\"\\^]*e|m[\\\"\\^]*a[\\\"\\^]*n|o[\\\"\\^]*f[\\\"\\^]*f)|a[\\\"\\^]*b[\\\"\\^]*e[\\\"\\^]*l[\\\"\\^]*(?:[\\s,;]|\\.|/|<|>).*|u[\\\"\\^]*s[\\\"\\^]*r[\\\"\\^]*m[\\\"\\^]*g[\\\"\\^]*r)|b[\\\"\\^]*(?:(?:c[\\\"\\^]*d[\\\"\\^]*(?:b[\\\"\\^]*o[\\\"\\^]*o|e[\\\"\\^]*d[\\\"\\^]*i)|r[\\\"\\^]*o[\\\"\\^]*w[\\\"\\^]*s[\\\"\\^]*t[\\\"\\^]*a)[\\\"\\^]*t|i[\\\"\\^]*t[\\\"\\^]*s[\\\"\\^]*a[\\\"\\^]*d[\\\"\\^]*m[\\\"\\^]*i[\\\"\\^]*n|o[\\\"\\^]*o[\\\"\\^]*t[\\\"\\^]*c[\\\"\\^]*f[\\\"\\^]*g)|h[\\\"\\^]*(?:o[\\\"\\^]*s[\\\"\\^]*t[\\\"\\^]*n[\\\"\\^]*a[\\\"\\^]*m[\\\"\\^]*e|d[\\\"\\^]*w[\\\"\\^]*w[\\\"\\^]*i[\\\"\\^]*z)|j[\\\"\\^]*a[\\\"\\^]*v[\\\"\\^]*a[\\\"\\^]*(?:[\\s,;]|\\.|/|<|>).*|7[\\\"\\^]*z(?:[\\\"\\^]*[ar])?)(?:\\.[\\\"\\^]*\\w+)?\\b\" \\\n    \"id:460107,\\\n    phase:2,\\\n    block,\\\n    t:none,\\\n    severity:'CRITICAL',\\\n    setvar:'tx.inbound_anomaly_score_pl1=+%{tx.critical_anomaly_score}'\"",
        "description": "Remote Command Execution: Windows Command Injection",
        "rule_id": "460",
        "sec_rule_id": "460107",
        "severity": "CRITICAL"
    },
    {
        "comment": "# Remote Command Execution: Windows Command Injection",
        "content": "SecRule REQUEST_COOKIES|REQUEST_COOKIES_NAMES|ARGS_NAMES|ARGS \"@rx (?:;|\\{|\\||\\|\\||&|&&|\\n|\\r|`)\\s*[\\(,@\\'\\\"\\s]*(?:[\\w'\\\"\\./]+/|[\\\\\\\\'\\\"\\^]*\\w[\\\\\\\\'\\\"\\^]*:.*\\\\\\\\|[\\^\\.\\w '\\\"/\\\\\\\\]*\\\\\\\\)?[\\\"\\^]*(?:s[\\\"\\^]*(?:y[\\\"\\^]*s[\\\"\\^]*(?:t[\\\"\\^]*e[\\\"\\^]*m[\\\"\\^]*(?:p[\\\"\\^]*r[\\\"\\^]*o[\\\"\\^]*p[\\\"\\^]*e[\\\"\\^]*r[\\\"\\^]*t[\\\"\\^]*i[\\\"\\^]*e[\\\"\\^]*s[\\\"\\^]*(?:d[\\\"\\^]*a[\\\"\\^]*t[\\\"\\^]*a[\\\"\\^]*e[\\\"\\^]*x[\\\"\\^]*e[\\\"\\^]*c[\\\"\\^]*u[\\\"\\^]*t[\\\"\\^]*i[\\\"\\^]*o[\\\"\\^]*n[\\\"\\^]*p[\\\"\\^]*r[\\\"\\^]*e[\\\"\\^]*v[\\\"\\^]*e[\\\"\\^]*n[\\\"\\^]*t[\\\"\\^]*i[\\\"\\^]*o[\\\"\\^]*n|(?:p[\\\"\\^]*e[\\\"\\^]*r[\\\"\\^]*f[\\\"\\^]*o[\\\"\\^]*r[\\\"\\^]*m[\\\"\\^]*a[\\\"\\^]*n[\\\"\\^]*c|h[\\\"\\^]*a[\\\"\\^]*r[\\\"\\^]*d[\\\"\\^]*w[\\\"\\^]*a[\\\"\\^]*r)[\\\"\\^]*e|a[\\\"\\^]*d[\\\"\\^]*v[\\\"\\^]*a[\\\"\\^]*n[\\\"\\^]*c[\\\"\\^]*e[\\\"\\^]*d)|i[\\\"\\^]*n[\\\"\\^]*f[\\\"\\^]*o)|k[\\\"\\^]*e[\\\"\\^]*y|d[\\\"\\^]*m)|h[\\\"\\^]*(?:o[\\\"\\^]*(?:w[\\\"\\^]*(?:g[\\\"\\^]*r[\\\"\\^]*p|m[\\\"\\^]*b[\\\"\\^]*r)[\\\"\\^]*s|r[\\\"\\^]*t[\\\"\\^]*c[\\\"\\^]*u[\\\"\\^]*t)|e[\\\"\\^]*l[\\\"\\^]*l[\\\"\\^]*r[\\\"\\^]*u[\\\"\\^]*n[\\\"\\^]*a[\\\"\\^]*s|u[\\\"\\^]*t[\\\"\\^]*d[\\\"\\^]*o[\\\"\\^]*w[\\\"\\^]*n|r[\\\"\\^]*p[\\\"\\^]*u[\\\"\\^]*b[\\\"\\^]*w|a[\\\"\\^]*r[\\\"\\^]*e|i[\\\"\\^]*f[\\\"\\^]*t)|e[\\\"\\^]*(?:t[\\\"\\^]*(?:(?:x[\\\"\\^]*)?(?:[\\s,;]|\\.|/|<|>).*|l[\\\"\\^]*o[\\\"\\^]*c[\\\"\\^]*a[\\\"\\^]*l)|c[\\\"\\^]*p[\\\"\\^]*o[\\\"\\^]*l|l[\\\"\\^]*e[\\\"\\^]*c[\\\"\\^]*t)|c[\\\"\\^]*(?:h[\\\"\\^]*t[\\\"\\^]*a[\\\"\\^]*s[\\\"\\^]*k[\\\"\\^]*s|l[\\\"\\^]*i[\\\"\\^]*s[\\\"\\^]*t)|o[\\\"\\^]*r[\\\"\\^]*t[\\\"\\^]*(?:(?:[\\s,;]|\\.|/|<|>).*|\\.[\\\"\\^]*\\*[\\\"\\^]*<|\\/)|u[\\\"\\^]*b[\\\"\\^]*(?:i[\\\"\\^]*n[\\\"\\^]*a[\\\"\\^]*c[\\\"\\^]*l|s[\\\"\\^]*t)|t[\\\"\\^]*a[\\\"\\^]*r[\\\"\\^]*t[\\\"\\^]*(?:[\\s,;]|\\.|/|<|>).*|i[\\\"\\^]*g[\\\"\\^]*v[\\\"\\^]*e[\\\"\\^]*r[\\\"\\^]*i[\\\"\\^]*f|l[\\\"\\^]*(?:e[\\\"\\^]*e[\\\"\\^]*p|m[\\\"\\^]*g[\\\"\\^]*r)|f[\\\"\\^]*c|v[\\\"\\^]*n)|p[\\\"\\^]*(?:s[\\\"\\^]*(?:s[\\\"\\^]*(?:h[\\\"\\^]*u[\\\"\\^]*t[\\\"\\^]*d[\\\"\\^]*o[\\\"\\^]*w[\\\"\\^]*n|e[\\\"\\^]*r[\\\"\\^]*v[\\\"\\^]*i[\\\"\\^]*c[\\\"\\^]*e|u[\\\"\\^]*s[\\\"\\^]*p[\\\"\\^]*e[\\\"\\^]*n[\\\"\\^]*d)|l[\\\"\\^]*(?:o[\\\"\\^]*g[\\\"\\^]*(?:g[\\\"\\^]*e[\\\"\\^]*d[\\\"\\^]*o[\\\"\\^]*n|l[\\\"\\^]*i[\\\"\\^]*s[\\\"\\^]*t)|i[\\\"\\^]*s[\\\"\\^]*t)|p[\\\"\\^]*(?:a[\\\"\\^]*s[\\\"\\^]*s[\\\"\\^]*w[\\\"\\^]*d|i[\\\"\\^]*n[\\\"\\^]*g)|g[\\\"\\^]*e[\\\"\\^]*t[\\\"\\^]*s[\\\"\\^]*i[\\\"\\^]*d|e[\\\"\\^]*x[\\\"\\^]*e[\\\"\\^]*c|f[\\\"\\^]*i[\\\"\\^]*l[\\\"\\^]*e|i[\\\"\\^]*n[\\\"\\^]*f[\\\"\\^]*o|k[\\\"\\^]*i[\\\"\\^]*l[\\\"\\^]*l)|o[\\\"\\^]*(?:w[\\\"\\^]*e[\\\"\\^]*r[\\\"\\^]*(?:s[\\\"\\^]*h[\\\"\\^]*e[\\\"\\^]*l[\\\"\\^]*l(?:[\\\"\\^]*_[\\\"\\^]*i[\\\"\\^]*s[\\\"\\^]*e)?|c[\\\"\\^]*f[\\\"\\^]*g)|r[\\\"\\^]*t[\\\"\\^]*q[\\\"\\^]*r[\\\"\\^]*y|p[\\\"\\^]*d)|r[\\\"\\^]*(?:i[\\\"\\^]*n[\\\"\\^]*t[\\\"\\^]*(?:(?:[\\s,;]|\\.|/|<|>).*|b[\\\"\\^]*r[\\\"\\^]*m)|n[\\\"\\^]*(?:c[\\\"\\^]*n[\\\"\\^]*f[\\\"\\^]*g|m[\\\"\\^]*n[\\\"\\^]*g[\\\"\\^]*r)|o[\\\"\\^]*m[\\\"\\^]*p[\\\"\\^]*t)|a[\\\"\\^]*t[\\\"\\^]*h[\\\"\\^]*(?:p[\\\"\\^]*i[\\\"\\^]*n[\\\"\\^]*g|(?:[\\s,;]|\\.|/|<|>).*)|e[\\\"\\^]*r[\\\"\\^]*(?:l(?:[\\\"\\^]*(?:s[\\\"\\^]*h|5))?|f[\\\"\\^]*m[\\\"\\^]*o[\\\"\\^]*n)|y[\\\"\\^]*t[\\\"\\^]*h[\\\"\\^]*o[\\\"\\^]*n(?:[\\\"\\^]*(?:3(?:[\\\"\\^]*m)?|2))?|k[\\\"\\^]*g[\\\"\\^]*m[\\\"\\^]*g[\\\"\\^]*r|h[\\\"\\^]*p(?:[\\\"\\^]*[57])?|u[\\\"\\^]*s[\\\"\\^]*h[\\\"\\^]*d|i[\\\"\\^]*n[\\\"\\^]*g)|r[\\\"\\^]*(?:e[\\\"\\^]*(?:(?:p[\\\"\\^]*l[\\\"\\^]*a[\\\"\\^]*c[\\\"\\^]*e|n(?:[\\\"\\^]*a[\\\"\\^]*m[\\\"\\^]*e)?|s[\\\"\\^]*e[\\\"\\^]*t)[\\\"\\^]*(?:[\\s,;]|\\.|/|<|>).*|g[\\\"\\^]*(?:s[\\\"\\^]*v[\\\"\\^]*r[\\\"\\^]*3[\\\"\\^]*2|e[\\\"\\^]*d[\\\"\\^]*i[\\\"\\^]*t|(?:[\\s,;]|\\.|/|<|>).*|i[\\\"\\^]*n[\\\"\\^]*i)|c[\\\"\\^]*(?:d[\\\"\\^]*i[\\\"\\^]*s[\\\"\\^]*c|o[\\\"\\^]*v[\\\"\\^]*e[\\\"\\^]*r)|k[\\\"\\^]*e[\\\"\\^]*y[\\\"\\^]*w[\\\"\\^]*i[\\\"\\^]*z)|u[\\\"\\^]*(?:n[\\\"\\^]*(?:d[\\\"\\^]*l[\\\"\\^]*l[\\\"\\^]*3[\\\"\\^]*2|a[\\\"\\^]*s)|b[\\\"\\^]*y[\\\"\\^]*(?:1(?:[\\\"\\^]*[89])?|2[\\\"\\^]*[012]))|a[\\\"\\^]*(?:s[\\\"\\^]*(?:p[\\\"\\^]*h[\\\"\\^]*o[\\\"\\^]*n[\\\"\\^]*e|d[\\\"\\^]*i[\\\"\\^]*a[\\\"\\^]*l)|r[\\\"\\^]*(?:[\\s,;]|\\.|/|<|>).*)|m[\\\"\\^]*(?:(?:d[\\\"\\^]*i[\\\"\\^]*r[\\\"\\^]*)?(?:[\\s,;]|\\.|/|<|>).*|t[\\\"\\^]*s[\\\"\\^]*h[\\\"\\^]*a[\\\"\\^]*r[\\\"\\^]*e)|o[\\\"\\^]*(?:u[\\\"\\^]*t[\\\"\\^]*e[\\\"\\^]*(?:[\\s,;]|\\.|/|<|>).*|b[\\\"\\^]*o[\\\"\\^]*c[\\\"\\^]*o[\\\"\\^]*p[\\\"\\^]*y)|s[\\\"\\^]*(?:t[\\\"\\^]*r[\\\"\\^]*u[\\\"\\^]*i|y[\\\"\\^]*n[\\\"\\^]*c)|d[\\\"\\^]*(?:[\\s,;]|\\.|/|<|>).*)|t[\\\"\\^]*(?:a[\\\"\\^]*(?:s[\\\"\\^]*k[\\\"\\^]*(?:k[\\\"\\^]*i[\\\"\\^]*l[\\\"\\^]*l|l[\\\"\\^]*i[\\\"\\^]*s[\\\"\\^]*t|s[\\\"\\^]*c[\\\"\\^]*h[\\\"\\^]*d|m[\\\"\\^]*g[\\\"\\^]*r)|k[\\\"\\^]*e[\\\"\\^]*o[\\\"\\^]*w[\\\"\\^]*n)|(?:i[\\\"\\^]*m[\\\"\\^]*e[\\\"\\^]*o[\\\"\\^]*u|p[\\\"\\^]*m[\\\"\\^]*i[\\\"\\^]*n[\\\"\\^]*i|e[\\\"\\^]*l[\\\"\\^]*n[\\\"\\^]*e|l[\\\"\\^]*i[\\\"\\^]*s)[\\\"\\^]*t|s[\\\"\\^]*(?:d[\\\"\\^]*i[\\\"\\^]*s[\\\"\\^]*c[\\\"\\^]*o|s[\\\"\\^]*h[\\\"\\^]*u[\\\"\\^]*t[\\\"\\^]*d)[\\\"\\^]*n|y[\\\"\\^]*p[\\\"\\^]*e[\\\"\\^]*(?:p[\\\"\\^]*e[\\\"\\^]*r[\\\"\\^]*f|(?:[\\s,;]|\\.|/|<|>).*)|r[\\\"\\^]*(?:a[\\\"\\^]*c[\\\"\\^]*e[\\\"\\^]*r[\\\"\\^]*t|e[\\\"\\^]*e))|w[\\\"\\^]*(?:i[\\\"\\^]*n[\\\"\\^]*(?:d[\\\"\\^]*i[\\\"\\^]*f[\\\"\\^]*f|m[\\\"\\^]*s[\\\"\\^]*d[\\\"\\^]*p|v[\\\"\\^]*a[\\\"\\^]*r|r[\\\"\\^]*[ms])|u[\\\"\\^]*(?:a[\\\"\\^]*(?:u[\\\"\\^]*c[\\\"\\^]*l[\\\"\\^]*t|p[\\\"\\^]*p)|s[\\\"\\^]*a)|s[\\\"\\^]*c[\\\"\\^]*(?:r[\\\"\\^]*i[\\\"\\^]*p[\\\"\\^]*t|u[\\\"\\^]*i)|e[\\\"\\^]*v[\\\"\\^]*t[\\\"\\^]*u[\\\"\\^]*t[\\\"\\^]*i[\\\"\\^]*l|m[\\\"\\^]*i[\\\"\\^]*(?:m[\\\"\\^]*g[\\\"\\^]*m[\\\"\\^]*t|c)|a[\\\"\\^]*i[\\\"\\^]*t[\\\"\\^]*f[\\\"\\^]*o[\\\"\\^]*r|h[\\\"\\^]*o[\\\"\\^]*a[\\\"\\^]*m[\\\"\\^]*i|g[\\\"\\^]*e[\\\"\\^]*t)|u[\\\"\\^]*(?:s[\\\"\\^]*(?:e[\\\"\\^]*r[\\\"\\^]*a[\\\"\\^]*c[\\\"\\^]*c[\\\"\\^]*o[\\\"\\^]*u[\\\"\\^]*n[\\\"\\^]*t[\\\"\\^]*c[\\\"\\^]*o[\\\"\\^]*n[\\\"\\^]*t[\\\"\\^]*r[\\\"\\^]*o[\\\"\\^]*l[\\\"\\^]*s[\\\"\\^]*e[\\\"\\^]*t[\\\"\\^]*t[\\\"\\^]*i[\\\"\\^]*n[\\\"\\^]*g[\\\"\\^]*s|r[\\\"\\^]*s[\\\"\\^]*t[\\\"\\^]*a[\\\"\\^]*t)|n[\\\"\\^]*(?:r[\\\"\\^]*a[\\\"\\^]*r|z[\\\"\\^]*i[\\\"\\^]*p))|q[\\\"\\^]*(?:u[\\\"\\^]*e[\\\"\\^]*r[\\\"\\^]*y[\\\"\\^]*(?:[\\s,;]|\\.|/|<|>).*|p[\\\"\\^]*r[\\\"\\^]*o[\\\"\\^]*c[\\\"\\^]*e[\\\"\\^]*s[\\\"\\^]*s|w[\\\"\\^]*i[\\\"\\^]*n[\\\"\\^]*s[\\\"\\^]*t[\\\"\\^]*a|g[\\\"\\^]*r[\\\"\\^]*e[\\\"\\^]*p)|o[\\\"\\^]*(?:d[\\\"\\^]*b[\\\"\\^]*c[\\\"\\^]*(?:a[\\\"\\^]*d[\\\"\\^]*3[\\\"\\^]*2|c[\\\"\\^]*o[\\\"\\^]*n[\\\"\\^]*f)|p[\\\"\\^]*e[\\\"\\^]*n[\\\"\\^]*f[\\\"\\^]*i[\\\"\\^]*l[\\\"\\^]*e[\\\"\\^]*s)|v[\\\"\\^]*(?:o[\\\"\\^]*l[\\\"\\^]*(?:[\\s,;]|\\.|/|<|>).*|e[\\\"\\^]*r[\\\"\\^]*i[\\\"\\^]*f[\\\"\\^]*y)|x[\\\"\\^]*c[\\\"\\^]*(?:a[\\\"\\^]*c[\\\"\\^]*l[\\\"\\^]*s|o[\\\"\\^]*p[\\\"\\^]*y)|z[\\\"\\^]*i[\\\"\\^]*p[\\\"\\^]*(?:[\\s,;]|\\.|/|<|>).*)(?:\\.[\\\"\\^]*\\w+)?\\b\" \\\n    \"id:460108,\\\n    phase:2,\\\n    block,\\\n    t:none,\\\n    severity:'CRITICAL',\\\n    setvar:'tx.inbound_anomaly_score_pl1=+%{tx.critical_anomaly_score}'\"",
        "description": "Remote Command Execution: Windows Command Injection",
        "rule_id": "460",
        "sec_rule_id": "460108",
        "severity": "CRITICAL"
    },
    {
        "comment": "# Remote Command Execution: Windows FOR/IF Command Found",
        "content": "SecRule REQUEST_COOKIES|REQUEST_COOKIES_NAMES|ARGS_NAMES|ARGS \"@rx \\b(?:if(?:/i)?(?: not)?(?: exist\\b| defined\\b| errorlevel\\b| cmdextversion\\b|(?: |\\().*(?:\\bgeq\\b|\\bequ\\b|\\bneq\\b|\\bleq\\b|\\bgtr\\b|\\blss\\b|==))|for(?:/[dflr].*)? %+[^ ]+ in\\(.*\\)\\s?do)\" \\\n    \"id:460109,\\\n    phase:2,\\\n    block,\\\n    t:none,\\\n    severity:'CRITICAL',\\\n    setvar:'tx.inbound_anomaly_score_pl1=+%{tx.critical_anomaly_score}'\"",
        "description": "Remote Command Execution: Windows FOR/IF Command Found",
        "rule_id": "460",
        "sec_rule_id": "460109",
        "severity": "CRITICAL"
    },
    {
        "comment": "# Remote Command Execution: Windows PowerShell Command Found",
        "content": "SecRule REQUEST_COOKIES|REQUEST_COOKIES_NAMES|ARGS_NAMES|ARGS \"@pm powershell.exe add-bitsfile add-computer add-content add-history add-member add-pssnapin add-type checkpoint-computer clear-content clear-eventlog clear-history clear-item clear-itemproperty clear-variable compare-object complete-bitstransfer complete-transaction connect-wsman convertfrom-csv convertfrom-securestring convertfrom-stringdata convert-path convertto-csv convertto-html convertto-securestring convertto-xml copy-item copy-itemproperty debug-process disable-computerrestore disable-psbreakpoint disable-pssessionconfiguration disable-wsmancredssp disconnect-wsman enable-computerrestore enable-psbreakpoint enable-psremoting enable-pssessionconfiguration enable-wsmancredssp enter-pssession exit-pssession export-alias export-clixml export-console export-counter export-csv export-formatdata export-modulemember export-pssession foreach-object format-custom format-list format-table format-wide get-acl get-alias get-applockerfileinformation get-applockerpolicy get-authenticodesignature get-bitstransfer get-childitem get-command get-computerrestorepoint get-content get-counter get-credential get-event get-eventlog get-eventsubscriber get-executionpolicy get-formatdata get-history get-host get-hotfix get-item get-itemproperty get-job get-location get-module get-pfxcertificate get-process get-psbreakpoint get-pscallstack get-psdrive get-psprovider get-pssession get-pssessionconfiguration get-pssnapin get-random get-service get-tracesource get-transaction get-troubleshootingpack get-uiculture get-unique get-variable get-winevent get-wmiobject get-wsmancredssp get-wsmaninstance group-object import-alias import-clixml import-counter import-csv import-localizeddata import-module import-pssession invoke-command invoke-expression invoke-history invoke-item invoke-troubleshootingpack invoke-wmimethod invoke-wsmanaction join-path limit-eventlog measure-command measure-object move-item move-itemproperty new-alias new-applockerpolicy new-event new-eventlog new-item new-itemproperty new-module new-modulemanifest new-object new-psdrive new-pssession new-pssessionoption new-service new-timespan new-variable new-webserviceproxy new-wsmaninstance new-wsmansessionoption out-default out-file out-gridview out-host out-null out-printer out-string pop-location push-location read-host receive-job register-engineevent register-objectevent register-pssessionconfiguration register-wmievent remove-bitstransfer remove-computer remove-event remove-eventlog remove-item remove-itemproperty remove-job remove-module remove-psbreakpoint remove-psdrive remove-pssession remove-pssnapin remove-variable remove-wmiobject remove-wsmaninstance rename-item rename-itemproperty reset-computermachinepassword resolve-path restart-computer restart-service restore-computer resume-bitstransfer resume-service select-object select-string select-xml send-mailmessage set-acl set-alias set-applockerpolicy set-authenticodesignature set-bitstransfer set-content set-date set-executionpolicy set-item set-itemproperty set-location set-psbreakpoint set-psdebug set-pssessionconfiguration set-service set-strictmode set-tracesource set-variable set-wmiinstance set-wsmaninstance set-wsmanquickconfig show-eventlog sort-object split-path start-bitstransfer start-job start-process start-service start-sleep start-transaction stop-computer stop-job stop-process stop-service stop-transcript suspend-bitstransfer suspend-service tee-object test-applockerpolicy test-computersecurechannel test-connection test-modulemanifest test-path test-wsman trace-command undo-transaction unregister-event unregister-pssessionconfiguration update-formatdata update-list update-typedata use-transaction wait-event wait-job wait-process where-object write-debug write-error write-eventlog write-host write-output write-progress write-verbose write-warning -encodedcommand -executionpolicy -psconsolefile\" \\\n    \"id:460110,\\\n    phase:2,\\\n    block,\\\n    t:lowercase,t:none,\\\n    severity:'CRITICAL',\\\n    setvar:'tx.inbound_anomaly_score_pl1=+%{tx.critical_anomaly_score}'\"",
        "description": "Remote Command Execution: Windows PowerShell Command Found",
        "rule_id": "460",
        "sec_rule_id": "460110",
        "severity": "CRITICAL"
    },
    {
        "comment": "# Restricted File Upload Attempt",
        "content": "SecRule FILES|REQUEST_HEADERS:x-filename|REQUEST_HEADERS:x_filename|REQUEST_HEADERS:x-file-name \"@pm .htaccess .htdigest .htpasswd wp-config.php config.yml config_dev.yml config_prod.yml config_test.yml parameters.yml routing.yml security.yml services.yml default.settings.php settings.php settings.local.php local.xml .env\" \\\n    \"id:460111,\\\n    phase:2,\\\n    block,\\\n    t:lowercase,t:none,\\\n    severity:'CRITICAL',\\\n    setvar:'tx.inbound_anomaly_score_pl1=+%{tx.critical_anomaly_score}'\"",
        "description": "Restricted File Upload Attempt",
        "rule_id": "460",
        "sec_rule_id": "460111",
        "severity": "CRITICAL"
    },
    {
        "comment": "# Windows: Detect attempts to exfiltrate .ini files",
        "content": "SecRule ARGS|ARGS_NAMES|REQUEST_HEADERS \"@rx (?i)[&|]\\s*type\\s+%\\w+%\\\\+\\w+\\.ini\\s*[&|]\" \\\n    \"id:460112,\\\n    phase:2,\\\n    block,\\\n    t:none,\\\n    severity:'CRITICAL',\\\n    setvar:'tx.inbound_anomaly_score_pl1=+%{tx.critical_anomaly_score}'\"",
        "description": "Windows: Detect attempts to exfiltrate .ini files",
        "rule_id": "460",
        "sec_rule_id": "460112",
        "severity": "CRITICAL"
    },
    {
        "comment": "# Windows: Detect attempts to timeout a shell",
        "content": "SecRule ARGS|ARGS_NAMES|REQUEST_HEADERS \"@rx (?i)[&|]\\s*timeout\\s+/t\\s+\\d+\\s*[&|]\" \\\n    \"id:460113,\\\n    phase:2,\\\n    block,\\\n    t:none,\\\n    severity:'CRITICAL',\\\n    setvar:'tx.inbound_anomaly_score_pl1=+%{tx.critical_anomaly_score}'\"",
        "description": "Windows: Detect attempts to timeout a shell",
        "rule_id": "460",
        "sec_rule_id": "460113",
        "severity": "CRITICAL"
    },
    {
        "comment": "",
        "content": "SecRule TX:DETECTION_PARANOIA_LEVEL \"@lt 1\" \"id:451011,phase:1,pass,nolog,skipAfter:END-REQUEST-451-APPLICATION-ATTACK-SQLI\"",
        "rule_id": "451",
        "sec_rule_id": "451011"
    },
    {
        "comment": "",
        "content": "SecRule TX:DETECTION_PARANOIA_LEVEL \"@lt 1\" \"id:451012,phase:2,pass,nolog,skipAfter:END-REQUEST-451-APPLICATION-ATTACK-SQLI\"",
        "rule_id": "451",
        "sec_rule_id": "451012"
    },
    {
        "comment": "# Detects MATCH AGAINST, MERGE and EXECUTE IMMEDIATE injections",
        "content": "SecRule REQUEST_COOKIES|REQUEST_COOKIES_NAMES|ARGS_NAMES|ARGS \"@rx (?i:merge.*?using\\s*?\\(|execute\\s*?immediate\\s*?[\\\"'`]|match\\s*?[\\w(?:),+-]+\\s*?against\\s*?\\()\" \\\n    \"id:451100,\\\n    phase:2,\\\n    block,\\\n    t:none,\\\n    severity:'CRITICAL',\\\n    setvar:'tx.inbound_anomaly_score_pl1=+%{tx.critical_anomaly_score}'\"",
        "description": "Detects MATCH AGAINST, MERGE and EXECUTE IMMEDIATE injections",
        "rule_id": "451",
        "sec_rule_id": "451100",
        "severity": "CRITICAL"
    },
    {
        "comment": "# Detects MSSQL code execution and information gathering attempts",
        "content": "SecRule REQUEST_COOKIES|REQUEST_COOKIES_NAMES|ARGS_NAMES|ARGS \"@rx (?:\\b(?:(?:c(?:onnection_id|urrent_user)|database)\\s*?\\([^\\)]*?|u(?:nion(?:[\\w(?:\\s]*?select| select @)|ser\\s*?\\([^\\)]*?)|s(?:chema\\s*?\\([^\\)]*?|elect.*?\\w?user\\()|into[\\s+]+(?:dump|out)file\\s*?[\\\"'`]|from\\W+information_schema\\W|exec(?:ute)?\\s+master\\.)|[\\\"'`](?:;?\\s*?(?:union\\b\\s*?(?:(?:distin|sele)ct|all)|having|select)\\b\\s*?[^\\s]|\\s*?!\\s*?[\\\"'`\\w])|\\s*?exec(?:ute)?.*?\\Wxp_cmdshell|\\Wiif\\s*?\\()\" \\\n    \"id:451101,\\\n    phase:2,\\\n    block,\\\n    t:none,\\\n    severity:'CRITICAL',\\\n    setvar:'tx.inbound_anomaly_score_pl1=+%{tx.critical_anomaly_score}'\"",
        "description": "Detects MSSQL code execution and information gathering attempts",
        "rule_id": "451",
        "sec_rule_id": "451101",
        "severity": "CRITICAL"
    },
    {
        "comment": "# Detects MySQL UDF injection and other data/structure manipulation attempts",
        "content": "SecRule REQUEST_COOKIES|REQUEST_COOKIES_NAMES|ARGS_NAMES|ARGS \"@rx (?:;\\s*?(?:(?:(?:trunc|cre|upd)at|renam)e|d(?:e(?:lete|sc)|rop)|(?:inser|selec)t|alter|load)\\b\\s*?[\\[(?:]?\\w{2,}|create\\s+function\\s+.+\\s+returns)\" \\\n    \"id:451102,\\\n    phase:2,\\\n    block,\\\n    t:none,\\\n    severity:'CRITICAL',\\\n    setvar:'tx.inbound_anomaly_score_pl1=+%{tx.critical_anomaly_score}'\"",
        "description": "Detects MySQL UDF injection and other data/structure manipulation attempts",
        "rule_id": "451",
        "sec_rule_id": "451102",
        "severity": "CRITICAL"
    },
    {
        "comment": "# Detects MySQL and PostgreSQL stored procedure/function injections",
        "content": "SecRule REQUEST_COOKIES|REQUEST_COOKIES_NAMES|ARGS_NAMES|ARGS \"@rx (?:create\\s+(?:procedure|function)\\s*?\\w+\\s*?\\(\\s*?\\)\\s*?-|;\\s*?(?:declare|open)\\s+[\\w-]+|procedure\\s+analyse\\s*?\\(|declare[^\\w]+[@#]\\s*?\\w+|exec\\s*?\\(\\s*?@)\" \\\n    \"id:451103,\\\n    phase:2,\\\n    block,\\\n    t:none,\\\n    severity:'CRITICAL',\\\n    setvar:'tx.inbound_anomaly_score_pl1=+%{tx.critical_anomaly_score}'\"",
        "description": "Detects MySQL and PostgreSQL stored procedure/function injections",
        "rule_id": "451",
        "sec_rule_id": "451103",
        "severity": "CRITICAL"
    },
    {
        "comment": "# Detects MySQL charset switch and MSSQL DoS attempts",
        "content": "SecRule REQUEST_COOKIES|REQUEST_COOKIES_NAMES|ARGS_NAMES|ARGS \"@rx (?:[\\\"'`](?:;*?\\s*?waitfor\\s+(?:delay|time)\\s+[\\\"'`]|;.*?:\\s*?goto)|alter\\s*?\\w+.*?cha(?:racte)?r\\s+set\\s+\\w+)\" \\\n    \"id:451104,\\\n    phase:2,\\\n    block,\\\n    t:none,\\\n    severity:'CRITICAL',\\\n    setvar:'tx.inbound_anomaly_score_pl1=+%{tx.critical_anomaly_score}'\"",
        "description": "Detects MySQL charset switch and MSSQL DoS attempts",
        "rule_id": "451",
        "sec_rule_id": "451104",
        "severity": "CRITICAL"
    },
    {
        "comment": "# Detects Postgres pg_sleep injection, waitfor delay attacks and database shutdown attempts",
        "content": "SecRule REQUEST_COOKIES|REQUEST_COOKIES_NAMES|ARGS_NAMES|ARGS \"@rx (?:;\\s*?shutdown\\s*?(?:[#;{]|\\/\\*|--)|waitfor\\s*?delay\\s?[\\\"'`]+\\s?\\d|select\\s*?pg_sleep)\" \\\n    \"id:451105,\\\n    phase:2,\\\n    block,\\\n    t:none,\\\n    severity:'CRITICAL',\\\n    setvar:'tx.inbound_anomaly_score_pl1=+%{tx.critical_anomaly_score}'\"",
        "description": "Detects Postgres pg_sleep injection, waitfor delay attacks and database shutdown attempts",
        "rule_id": "451",
        "sec_rule_id": "451105",
        "severity": "CRITICAL"
    },
    {
        "comment": "# Detects SQL benchmark and sleep injection attempts including conditional queries",
        "content": "SecRule REQUEST_COOKIES|REQUEST_COOKIES_NAMES|ARGS_NAMES|ARGS \"@rx (?:select|;)\\s+(?:benchmark|sleep|if)\\s*?\\(\\s*?\\(?\\s*?\\w+\" \\\n    \"id:451106,\\\n    phase:2,\\\n    block,\\\n    t:none,\\\n    severity:'CRITICAL',\\\n    setvar:'tx.inbound_anomaly_score_pl1=+%{tx.critical_anomaly_score}'\"",
        "description": "Detects SQL benchmark and sleep injection attempts including conditional queries",
        "rule_id": "451",
        "sec_rule_id": "451106",
        "severity": "CRITICAL"
    },
    {
        "comment": "# Detects blind sqli tests using sleep() or benchmark()",
        "content": "SecRule REQUEST_BASENAME|REQUEST_COOKIES|REQUEST_COOKIES_NAMES|ARGS_NAMES|ARGS \"@rx (?i:sleep\\(\\s*?\\d*?\\s*?\\)|benchmark\\(.*?\\,.*?\\))\" \\\n    \"id:451107,\\\n    phase:2,\\\n    block,\\\n    t:none,\\\n    severity:'CRITICAL',\\\n    setvar:'tx.inbound_anomaly_score_pl1=+%{tx.critical_anomaly_score}'\"",
        "description": "Detects blind sqli tests using sleep() or benchmark()",
        "rule_id": "451",
        "sec_rule_id": "451107",
        "severity": "CRITICAL"
    },
    {
        "comment": "# Detects concatenated basic SQL injection and SQLLFI attempts",
        "content": "SecRule REQUEST_COOKIES|REQUEST_COOKIES_NAMES|ARGS_NAMES|ARGS \"@rx (?:^[\\W\\d]+\\s*?(?:alter\\s*(?:a(?:(?:pplication\\s*rol|ggregat)e|s(?:ymmetric\\s*ke|sembl)y|u(?:thorization|dit)|vailability\\s*group)|c(?:r(?:yptographic\\s*provider|edential)|o(?:l(?:latio|um)|nversio)n|ertificate|luster)|s(?:e(?:rv(?:ice|er)|curity|quence|ssion|arch)|y(?:mmetric\\s*key|nonym)|togroup|chema)|m(?:a(?:s(?:ter\\s*key|k)|terialized)|e(?:ssage\\s*type|thod)|odule)|l(?:o(?:g(?:file\\s*group|in)|ckdown)|a(?:ngua|r)ge|ibrary)|t(?:(?:abl(?:espac)?|yp)e|r(?:igger|usted)|hreshold|ext)|p(?:a(?:rtition|ckage)|ro(?:cedur|fil)e|ermission)|d(?:i(?:mension|skgroup)|atabase|efault|omain)|r(?:o(?:l(?:lback|e)|ute)|e(?:sourc|mot)e)|f(?:u(?:lltext|nction)|lashback|oreign)|e(?:xte(?:nsion|rnal)|(?:ndpoi|ve)nt)|in(?:dex(?:type)?|memory|stance)|b(?:roker\\s*priority|ufferpool)|x(?:ml\\s*schema|srobject)|w(?:ork(?:load)?|rapper)|hi(?:erarchy|stogram)|o(?:perator|utline)|(?:nicknam|queu)e|us(?:age|er)|group|java|view)\\b|(?:(?:(?:trunc|cre)at|renam)e|d(?:e(?:lete|sc)|rop)|(?:inser|selec)t|load)\\s+\\w+|u(?:nion\\s*(?:(?:distin|sele)ct|all)\\b|pdate\\s+\\w+))|\\b(?:(?:(?:(?:trunc|cre|upd)at|renam)e|(?:inser|selec)t|de(?:lete|sc)|alter|load)\\s+(?:group_concat|load_file|char)\\b\\s*\\(?|end\\s*?\\);)|[\\\"'`\\w]\\s+as\\b\\s*[\\\"'`\\w]+\\s*\\bfrom|[\\s(?:]load_file\\s*?\\(|[\\\"'`]\\s+regexp\\W)\" \\\n    \"id:451108,\\\n    phase:2,\\\n    block,\\\n    t:none,\\\n    severity:'CRITICAL',\\\n    setvar:'tx.inbound_anomaly_score_pl1=+%{tx.critical_anomaly_score}'\"",
        "description": "Detects concatenated basic SQL injection and SQLLFI attempts",
        "rule_id": "451",
        "sec_rule_id": "451108",
        "severity": "CRITICAL"
    },
    {
        "comment": "# Detects conditional SQL injection attempts",
        "content": "SecRule REQUEST_COOKIES|REQUEST_COOKIES_NAMES|ARGS_NAMES|ARGS \"@rx (?i:[\\s(?:)]case\\s+when.*?then|\\)\\s*?like\\s*?\\(|select.*?having\\s*?[^\\s]+\\s*?[^\\w\\s]|if\\s?\\([\\d\\w]\\s*?[=<>~])\" \\\n    \"id:451109,\\\n    phase:2,\\\n    block,\\\n    t:none,\\\n    severity:'CRITICAL',\\\n    setvar:'tx.inbound_anomaly_score_pl1=+%{tx.critical_anomaly_score}'\"",
        "description": "Detects conditional SQL injection attempts",
        "rule_id": "451",
        "sec_rule_id": "451109",
        "severity": "CRITICAL"
    },
    {
        "comment": "# Looking for basic sql injection. Common attack string for mysql, oracle and others",
        "content": "SecRule REQUEST_COOKIES|REQUEST_COOKIES_NAMES|ARGS_NAMES|ARGS \"@rx union.*?select.*?from\" \\\n    \"id:451110,\\\n    phase:2,\\\n    block,\\\n    t:none,\\\n    severity:'CRITICAL',\\\n    setvar:'tx.inbound_anomaly_score_pl1=+%{tx.critical_anomaly_score}'\"",
        "description": "Looking for basic sql injection. Common attack string for mysql, oracle and others",
        "rule_id": "451",
        "sec_rule_id": "451110",
        "severity": "CRITICAL"
    },
    {
        "comment": "# Looking for integer overflow attacks, these are taken from skipfish, except 2.2.2250738585072011e-308 is the \\\"magic number\\\" crash",
        "content": "SecRule REQUEST_COOKIES|REQUEST_COOKIES_NAMES|ARGS_NAMES|ARGS \"@rx ^(?i:-0000023456|4294967295|4294967296|2147483648|2147483647|0000012345|-2147483648|-2147483649|0000023456|2.2250738585072007e-308|2.2250738585072011e-308|1e309)$\" \\\n    \"id:451111,\\\n    phase:2,\\\n    block,\\\n    t:none,\\\n    severity:'CRITICAL',\\\n    setvar:'tx.inbound_anomaly_score_pl1=+%{tx.critical_anomaly_score}'\"",
        "description": "Looking for integer overflow attacks, these are taken from skipfish, except 2.2.2250738585072011e-308 is the \\\"magic number\\\" crash",
        "rule_id": "451",
        "sec_rule_id": "451111",
        "severity": "CRITICAL"
    },
    {
        "comment": "# MySQL in-line comment detected",
        "content": "SecRule REQUEST_COOKIES|REQUEST_COOKIES_NAMES|ARGS_NAMES|ARGS \"@rx (?i:/\\*[!+](?:[\\w\\s=_\\-(?:)]+)?\\*/)\" \\\n    \"id:451112,\\\n    phase:2,\\\n    block,\\\n    t:none,\\\n    severity:'CRITICAL',\\\n    setvar:'tx.inbound_anomaly_score_pl1=+%{tx.critical_anomaly_score}'\"",
        "description": "MySQL in-line comment detected",
        "rule_id": "451",
        "sec_rule_id": "451112",
        "severity": "CRITICAL"
    },
    {
        "comment": "# SQL Injection Attack Detected via libinjection",
        "content": "SecRule REQUEST_COOKIES|REQUEST_COOKIES_NAMES|REQUEST_HEADERS:user-agent|REQUEST_HEADERS:referer|ARGS_NAMES|ARGS \"@detectSQLi \" \\\n    \"id:451113,\\\n    phase:2,\\\n    block,\\\n    t:none,t:removeNulls,\\\n    severity:'CRITICAL',\\\n    setvar:'tx.inbound_anomaly_score_pl1=+%{tx.critical_anomaly_score}'\"",
        "description": "SQL Injection Attack Detected via libinjection",
        "rule_id": "451",
        "sec_rule_id": "451113",
        "severity": "CRITICAL"
    },
    {
        "comment": "# SQL Injection Attack: Common DB Names Detected",
        "content": "SecRule REQUEST_COOKIES|REQUEST_COOKIES_NAMES|ARGS_NAMES|ARGS \"@rx \\b(?:(?:m(?:s(?:ys(?:ac(?:cess(?:objects|storage|xml)|es)|(?:relationship|object|querie)s|modules2?)|db)|aster\\.\\.sysdatabases|ysql\\.db)|pg_(?:catalog|toast)|information_schema|northwind|tempdb)\\b|s(?:(?:ys(?:\\.database_name|aux)|qlite(?:_temp)?_master)\\b|chema(?:_name\\b|\\W*\\())|d(?:atabas|b_nam)e\\W*\\()\" \\\n    \"id:451114,\\\n    phase:2,\\\n    block,\\\n    t:none,\\\n    severity:'CRITICAL',\\\n    setvar:'tx.inbound_anomaly_score_pl1=+%{tx.critical_anomaly_score}'\"",
        "description": "SQL Injection Attack: Common DB Names Detected",
        "rule_id": "451",
        "sec_rule_id": "451114",
        "severity": "CRITICAL"
    },
    {
        "comment": "# We have following categories for ML FWAF module.\n# [1] => CRLF Injection\n# [2] => Command Injection\n# [3] => Databases\n# [4] => Directory Traversal\n# [5] => File Inclusion\n# [6] => Insecure Management Interface\n# [7] => NoSQL Injection\n# [8] => SQL Injection\n# [9] => Server Side Template Injection\n# [10] => Web Cache Deception\n# [11] => XXE Injection\n# [12] => authentication\n# [13] => business-logic\n# [14] => codeinjection\n# [15] => control-chars\n# [16] => dirbuster\n# [17] => dirs\n# [18] => disclosure\n# [19] => email\n# [20] => extensions\n# [21] => file-upload\n# [22] => format_string\n# [23] => html_js_fuzz\n# [24] => http-protocol\n# [25] => iis_cgi\n# [26] => integer-overflow\n# [27] => ip\n# [28] => json\n# [29] => ldap\n# [30] => lfi\n# [31] => os-cmd-execution\n# [32] => os-dir-indexing\n# [33] => redirect\n# [34] => rfi\n# [35] => ssi\n# [36] => string-expansion\n# [37] => unicode\n# [38] => web-backdoors\n# [39] => windows_variables\n# [40] => xml\n# [41] => xpath\n# [42] => xss\n",
        "content": "SecRule TX:DETECTION_PARANOIA_LEVEL \"@lt 1\" \"id:410011,phase:1,pass,nolog,skipAfter:END-REQUEST-410-SD-AI-WAF\"\n",
        "rule_id": "410",
        "sec_rule_id": "410011"
    },
    {
        "comment": "",
        "content": "SecRule TX:DETECTION_PARANOIA_LEVEL \"@lt 1\" \"id:410012,phase:2,pass,nolog,skipAfter:END-REQUEST-410-SD-AI-WAF\"\n",
        "rule_id": "410",
        "sec_rule_id": "410012"
    },
    {
        "comment": "#\n# -= Paranoia Level 1 (default) =- (apply only when tx.detection_paranoia_level is sufficiently high: 1 or higher)\n#\n",
        "content": "SecAction \"id:410021,\\\n    phase:2,\\\n    pass,\\\n    t:none,\\\n    nolog,\\\n    setvar:'tx.inbound_max_anomaly_score_pl1=0'\"\n",
        "rule_id": "410",
        "sec_rule_id": "410021"
    },
    {
        "comment": "",
        "content": "SecRule REQUEST_URI|REQUEST_COOKIES|!REQUEST_COOKIES:/__utm/|!REQUEST_COOKIES:/^__sg_waf_captcha_.*/|!REQUEST_COOKIES:/^__sd_.*/|REQUEST_COOKIES_NAMES|!REQUEST_COOKIES_NAMES:/^__sg_waf_captcha_.*/|!REQUEST_COOKIES_NAMES:/^__sd_.*/|ARGS_NAMES|ARGS|XML:/*|!REQUEST_HEADERS:x-ja3-hash \"@detectAiWaf\" \\\n    \"id:410101,\\\n    phase:2,\\\n    block,\\\n    t:none,t:utf8toUnicode,t:urlDecodeUni,t:htmlEntityDecode,t:jsDecode,t:cssDecode,t:removeNulls,\\\n    msg:'Malicious request Detected via ML FWAF CRLF Injection',\\\n    tag:'paranoia-level/1',\\\n    severity:'CRITICAL',\\\n    setvar:'tx.inbound_anomaly_score_pl1=+%{tx.critical_anomaly_score}',\\\n    setvar:'tx.inbound_max_anomaly_score_pl1=<%{tx.critical_anomaly_score}',\\\n    logdata:'Matched Data: malicious data found within %{MATCHED_VAR_NAME}: %{MATCHED_VAR}',\\\n    tag:'CategoryName: CRLF Injection',\\\n    tag:'CategoryNumber: 1'\"\n",
        "description": "CRLF Injection",
        "ml_cate_name": "CRLF Injection",
        "ml_cate_no": "1",
        "paranoia_level": "1",
        "rule_id": "410",
        "sec_rule_id": "410101",
        "severity": "CRITICAL",
        "tags": [
            "paranoia-level/1",
            "CategoryName: CRLF Injection",
            "CategoryNumber: 1"
        ]
    },
    {
        "comment": "",
        "content": "SecRule REQUEST_URI|REQUEST_COOKIES|!REQUEST_COOKIES:/__utm/|!REQUEST_COOKIES:/^__sg_waf_captcha_.*/|!REQUEST_COOKIES:/^__sd_.*/|REQUEST_COOKIES_NAMES|!REQUEST_COOKIES_NAMES:/^__sg_waf_captcha_.*/|!REQUEST_COOKIES_NAMES:/^__sd_.*/|ARGS_NAMES|ARGS|XML:/*|!REQUEST_HEADERS:x-ja3-hash \"@detectAiWaf\" \\\n    \"id:410102,\\\n    phase:2,\\\n    block,\\\n    t:none,t:utf8toUnicode,t:urlDecodeUni,t:htmlEntityDecode,t:jsDecode,t:cssDecode,t:removeNulls,\\\n    msg:'Malicious request Detected via ML FWAF Command Injection',\\\n    tag:'paranoia-level/1',\\\n    severity:'CRITICAL',\\\n    setvar:'tx.inbound_anomaly_score_pl1=+%{tx.critical_anomaly_score}',\\\n    setvar:'tx.inbound_max_anomaly_score_pl1=<%{tx.critical_anomaly_score}',\\\n    logdata:'Matched Data: malicious data found within %{MATCHED_VAR_NAME}: %{MATCHED_VAR}',\\\n    tag:'CategoryName: Command Injection',\\\n    tag:'CategoryNumber: 2'\"\n",
        "description": "Command Injection",
        "ml_cate_name": "Command Injection",
        "ml_cate_no": "2",
        "paranoia_level": "1",
        "rule_id": "410",
        "sec_rule_id": "410102",
        "severity": "CRITICAL",
        "tags": [
            "paranoia-level/1",
            "CategoryName: Command Injection",
            "CategoryNumber: 2"
        ]
    },
    {
        "comment": "",
        "content": "SecRule REQUEST_URI|REQUEST_COOKIES|!REQUEST_COOKIES:/__utm/|!REQUEST_COOKIES:/^__sg_waf_captcha_.*/|!REQUEST_COOKIES:/^__sd_.*/|REQUEST_COOKIES_NAMES|!REQUEST_COOKIES_NAMES:/^__sg_waf_captcha_.*/|!REQUEST_COOKIES_NAMES:/^__sd_.*/|ARGS_NAMES|ARGS|XML:/*|!REQUEST_HEADERS:x-ja3-hash \"@detectAiWaf\" \\\n    \"id:410103,\\\n    phase:2,\\\n    block,\\\n    t:none,t:utf8toUnicode,t:urlDecodeUni,t:htmlEntityDecode,t:jsDecode,t:cssDecode,t:removeNulls,\\\n    msg:'Malicious request Detected via ML FWAF Databases',\\\n    tag:'paranoia-level/1',\\\n    severity:'CRITICAL',\\\n    setvar:'tx.inbound_anomaly_score_pl1=+%{tx.critical_anomaly_score}',\\\n    setvar:'tx.inbound_max_anomaly_score_pl1=<%{tx.critical_anomaly_score}',\\\n    logdata:'Matched Data: malicious data found within %{MATCHED_VAR_NAME}: %{MATCHED_VAR}',\\\n    tag:'CategoryName: Databases',\\\n    tag:'CategoryNumber: 3'\"\n",
        "description": "Databases Attacks",
        "ml_cate_name": "Databases",
        "ml_cate_no": "3",
        "paranoia_level": "1",
        "rule_id": "410",
        "sec_rule_id": "410103",
        "severity": "CRITICAL",
        "tags": [
            "paranoia-level/1",
            "CategoryName: Databases",
            "CategoryNumber: 3"
        ]
    },
    {
        "comment": "",
        "content": "SecRule REQUEST_URI|REQUEST_COOKIES|!REQUEST_COOKIES:/__utm/|!REQUEST_COOKIES:/^__sg_waf_captcha_.*/|!REQUEST_COOKIES:/^__sd_.*/|REQUEST_COOKIES_NAMES|!REQUEST_COOKIES_NAMES:/^__sg_waf_captcha_.*/|!REQUEST_COOKIES_NAMES:/^__sd_.*/|ARGS_NAMES|ARGS|XML:/*|!REQUEST_HEADERS:x-ja3-hash \"@detectAiWaf\" \\\n    \"id:410104,\\\n    phase:2,\\\n    block,\\\n    t:none,t:utf8toUnicode,t:urlDecodeUni,t:htmlEntityDecode,t:jsDecode,t:cssDecode,t:removeNulls,\\\n    msg:'Malicious request Detected via ML FWAF Directory Traversal',\\\n    tag:'paranoia-level/1',\\\n    severity:'CRITICAL',\\\n    setvar:'tx.inbound_anomaly_score_pl1=+%{tx.critical_anomaly_score}',\\\n    setvar:'tx.inbound_max_anomaly_score_pl1=<%{tx.critical_anomaly_score}',\\\n    logdata:'Matched Data: malicious data found within %{MATCHED_VAR_NAME}: %{MATCHED_VAR}',\\\n    tag:'CategoryName: Directory Traversal',\\\n    tag:'CategoryNumber: 4'\"\n",
        "description": "Directory Traversal",
        "ml_cate_name": "Directory Traversal",
        "ml_cate_no": "4",
        "paranoia_level": "1",
        "rule_id": "410",
        "sec_rule_id": "410104",
        "severity": "CRITICAL",
        "tags": [
            "paranoia-level/1",
            "CategoryName: Directory Traversal",
            "CategoryNumber: 4"
        ]
    },
    {
        "comment": "",
        "content": "SecRule REQUEST_URI|REQUEST_COOKIES|!REQUEST_COOKIES:/__utm/|!REQUEST_COOKIES:/^__sg_waf_captcha_.*/|!REQUEST_COOKIES:/^__sd_.*/|REQUEST_COOKIES_NAMES|!REQUEST_COOKIES_NAMES:/^__sg_waf_captcha_.*/|!REQUEST_COOKIES_NAMES:/^__sd_.*/|ARGS_NAMES|ARGS|XML:/*|!REQUEST_HEADERS:x-ja3-hash \"@detectAiWaf\" \\\n    \"id:410105,\\\n    phase:2,\\\n    block,\\\n    t:none,t:utf8toUnicode,t:urlDecodeUni,t:htmlEntityDecode,t:jsDecode,t:cssDecode,t:removeNulls,\\\n    msg:'Malicious request Detected via ML FWAF File Inclusion',\\\n    tag:'paranoia-level/1',\\\n    severity:'CRITICAL',\\\n    setvar:'tx.inbound_anomaly_score_pl1=+%{tx.critical_anomaly_score}',\\\n    setvar:'tx.inbound_max_anomaly_score_pl1=<%{tx.critical_anomaly_score}',\\\n    logdata:'Matched Data: malicious data found within %{MATCHED_VAR_NAME}: %{MATCHED_VAR}',\\\n    tag:'CategoryName: File Inclusion',\\\n    tag:'CategoryNumber: 5'\"\n",
        "description": "File Inclusion",
        "ml_cate_name": "File Inclusion",
        "ml_cate_no": "5",
        "paranoia_level": "1",
        "rule_id": "410",
        "sec_rule_id": "410105",
        "severity": "CRITICAL",
        "tags": [
            "paranoia-level/1",
            "CategoryName: File Inclusion",
            "CategoryNumber: 5"
        ]
    },
    {
        "comment": "",
        "content": "SecRule REQUEST_URI|REQUEST_COOKIES|!REQUEST_COOKIES:/__utm/|!REQUEST_COOKIES:/^__sg_waf_captcha_.*/|!REQUEST_COOKIES:/^__sd_.*/|REQUEST_COOKIES_NAMES|!REQUEST_COOKIES_NAMES:/^__sg_waf_captcha_.*/|!REQUEST_COOKIES_NAMES:/^__sd_.*/|ARGS_NAMES|ARGS|XML:/*|!REQUEST_HEADERS:x-ja3-hash \"@detectAiWaf\" \\\n    \"id:410106,\\\n    phase:2,\\\n    block,\\\n    t:none,t:utf8toUnicode,t:urlDecodeUni,t:htmlEntityDecode,t:jsDecode,t:cssDecode,t:removeNulls,\\\n    msg:'Malicious request Detected via ML FWAF Insecure Management Interface',\\\n    tag:'paranoia-level/1',\\\n    severity:'CRITICAL',\\\n    setvar:'tx.inbound_anomaly_score_pl1=+%{tx.critical_anomaly_score}',\\\n    setvar:'tx.inbound_max_anomaly_score_pl1=<%{tx.critical_anomaly_score}',\\\n    logdata:'Matched Data: malicious data found within %{MATCHED_VAR_NAME}: %{MATCHED_VAR}',\\\n    tag:'CategoryName: Insecure Management Interface',\\\n    tag:'CategoryNumber: 6'\"\n",
        "description": "Insecure Management Interface",
        "ml_cate_name": "Insecure Management Interface",
        "ml_cate_no": "6",
        "paranoia_level": "1",
        "rule_id": "410",
        "sec_rule_id": "410106",
        "severity": "CRITICAL",
        "tags": [
            "paranoia-level/1",
            "CategoryName: Insecure Management Interface",
            "CategoryNumber: 6"
        ]
    },
    {
        "comment": "",
        "content": "SecRule REQUEST_URI|REQUEST_COOKIES|!REQUEST_COOKIES:/__utm/|!REQUEST_COOKIES:/^__sg_waf_captcha_.*/|!REQUEST_COOKIES:/^__sd_.*/|REQUEST_COOKIES_NAMES|!REQUEST_COOKIES_NAMES:/^__sg_waf_captcha_.*/|!REQUEST_COOKIES_NAMES:/^__sd_.*/|ARGS_NAMES|ARGS|XML:/*|!REQUEST_HEADERS:x-ja3-hash \"@detectAiWaf\" \\\n    \"id:410107,\\\n    phase:2,\\\n    block,\\\n    t:none,t:utf8toUnicode,t:urlDecodeUni,t:htmlEntityDecode,t:jsDecode,t:cssDecode,t:removeNulls,\\\n    msg:'Malicious request Detected via ML FWAF NoSQL Injection',\\\n    tag:'paranoia-level/1',\\\n    severity:'CRITICAL',\\\n    setvar:'tx.inbound_anomaly_score_pl1=+%{tx.critical_anomaly_score}',\\\n    setvar:'tx.inbound_max_anomaly_score_pl1=<%{tx.critical_anomaly_score}',\\\n    logdata:'Matched Data: malicious data found within %{MATCHED_VAR_NAME}: %{MATCHED_VAR}',\\\n    tag:'CategoryName: NoSQL Injection',\\\n    tag:'CategoryNumber: 7'\"\n",
        "description": "NoSQL Injection",
        "ml_cate_name": "NoSQL Injection",
        "ml_cate_no": "7",
        "paranoia_level": "1",
        "rule_id": "410",
        "sec_rule_id": "410107",
        "severity": "CRITICAL",
        "tags": [
            "paranoia-level/1",
            "CategoryName: NoSQL Injection",
            "CategoryNumber: 7"
        ]
    },
    {
        "comment": "",
        "content": "SecRule REQUEST_URI|REQUEST_COOKIES|!REQUEST_COOKIES:/__utm/|!REQUEST_COOKIES:/^__sg_waf_captcha_.*/|!REQUEST_COOKIES:/^__sd_.*/|REQUEST_COOKIES_NAMES|!REQUEST_COOKIES_NAMES:/^__sg_waf_captcha_.*/|!REQUEST_COOKIES_NAMES:/^__sd_.*/|ARGS_NAMES|ARGS|XML:/*|!REQUEST_HEADERS:x-ja3-hash \"@detectAiWaf\" \\\n    \"id:410108,\\\n    phase:2,\\\n    block,\\\n    t:none,t:utf8toUnicode,t:urlDecodeUni,t:htmlEntityDecode,t:jsDecode,t:cssDecode,t:removeNulls,\\\n    msg:'Malicious request Detected via ML FWAF SQL Injection',\\\n    tag:'paranoia-level/1',\\\n    severity:'CRITICAL',\\\n    setvar:'tx.inbound_anomaly_score_pl1=+%{tx.critical_anomaly_score}',\\\n    setvar:'tx.inbound_max_anomaly_score_pl1=<%{tx.critical_anomaly_score}',\\\n    logdata:'Matched Data: malicious data found within %{MATCHED_VAR_NAME}: %{MATCHED_VAR}',\\\n    tag:'CategoryName: SQL Injection',\\\n    tag:'CategoryNumber: 8'\"\n",
        "description": "SQL Injection",
        "ml_cate_name": "SQL Injection",
        "ml_cate_no": "8",
        "paranoia_level": "1",
        "rule_id": "410",
        "sec_rule_id": "410108",
        "severity": "CRITICAL",
        "tags": [
            "paranoia-level/1",
            "CategoryName: SQL Injection",
            "CategoryNumber: 8"
        ]
    },
    {
        "comment": "",
        "content": "SecRule REQUEST_URI|REQUEST_COOKIES|!REQUEST_COOKIES:/__utm/|!REQUEST_COOKIES:/^__sg_waf_captcha_.*/|!REQUEST_COOKIES:/^__sd_.*/|REQUEST_COOKIES_NAMES|!REQUEST_COOKIES_NAMES:/^__sg_waf_captcha_.*/|!REQUEST_COOKIES_NAMES:/^__sd_.*/|ARGS_NAMES|ARGS|XML:/*|!REQUEST_HEADERS:x-ja3-hash \"@detectAiWaf\" \\\n    \"id:410109,\\\n    phase:2,\\\n    block,\\\n    t:none,t:utf8toUnicode,t:urlDecodeUni,t:htmlEntityDecode,t:jsDecode,t:cssDecode,t:removeNulls,\\\n    msg:'Malicious request Detected via ML FWAF Server Side Template Injection',\\\n    tag:'paranoia-level/1',\\\n    severity:'CRITICAL',\\\n    setvar:'tx.inbound_anomaly_score_pl1=+%{tx.critical_anomaly_score}',\\\n    setvar:'tx.inbound_max_anomaly_score_pl1=<%{tx.critical_anomaly_score}',\\\n    logdata:'Matched Data: malicious data found within %{MATCHED_VAR_NAME}: %{MATCHED_VAR}',\\\n    tag:'CategoryName: Server Side Template Injection',\\\n    tag:'CategoryNumber: 9'\"\n",
        "description": "Server Side Template Injection",
        "ml_cate_name": "Server Side Template Injection",
        "ml_cate_no": "9",
        "paranoia_level": "1",
        "rule_id": "410",
        "sec_rule_id": "410109",
        "severity": "CRITICAL",
        "tags": [
            "paranoia-level/1",
            "CategoryName: Server Side Template Injection",
            "CategoryNumber: 9"
        ]
    },
    {
        "comment": "",
        "content": "SecRule REQUEST_URI|REQUEST_COOKIES|!REQUEST_COOKIES:/__utm/|!REQUEST_COOKIES:/^__sg_waf_captcha_.*/|!REQUEST_COOKIES:/^__sd_.*/|REQUEST_COOKIES_NAMES|!REQUEST_COOKIES_NAMES:/^__sg_waf_captcha_.*/|!REQUEST_COOKIES_NAMES:/^__sd_.*/|ARGS_NAMES|ARGS|XML:/*|!REQUEST_HEADERS:x-ja3-hash \"@detectAiWaf\" \\\n    \"id:410110,\\\n    phase:2,\\\n    block,\\\n    t:none,t:utf8toUnicode,t:urlDecodeUni,t:htmlEntityDecode,t:jsDecode,t:cssDecode,t:removeNulls,\\\n    msg:'Malicious request Detected via ML FWAF Web Cache Deception',\\\n    tag:'paranoia-level/1',\\\n    severity:'NOTICE',\\\n    setvar:'tx.inbound_anomaly_score_pl1=+%{tx.notice_anomaly_score}',\\\n    setvar:'tx.inbound_max_anomaly_score_pl1=<%{tx.notice_anomaly_score}',\\\n    logdata:'Matched Data: malicious data found within %{MATCHED_VAR_NAME}: %{MATCHED_VAR}',\\\n    tag:'CategoryName: Web Cache Deception',\\\n    tag:'CategoryNumber: 10'\"\n",
        "description": "Web Cache Deception",
        "enabled": false,
        "ml_cate_name": "Web Cache Deception",
        "ml_cate_no": "10",
        "paranoia_level": "1",
        "rule_id": "410",
        "sec_rule_id": "410110",
        "severity": "NOTICE",
        "tags": [
            "paranoia-level/1",
            "CategoryName: Web Cache Deception",
            "CategoryNumber: 10"
        ]
    },
    {
        "comment": "",
        "content": "SecRule REQUEST_URI|REQUEST_COOKIES|!REQUEST_COOKIES:/__utm/|!REQUEST_COOKIES:/^__sg_waf_captcha_.*/|!REQUEST_COOKIES:/^__sd_.*/|REQUEST_COOKIES_NAMES|!REQUEST_COOKIES_NAMES:/^__sg_waf_captcha_.*/|!REQUEST_COOKIES_NAMES:/^__sd_.*/|ARGS_NAMES|ARGS|XML:/*|!REQUEST_HEADERS:x-ja3-hash \"@detectAiWaf\" \\\n    \"id:410111,\\\n    phase:2,\\\n    block,\\\n    t:none,t:utf8toUnicode,t:urlDecodeUni,t:htmlEntityDecode,t:jsDecode,t:cssDecode,t:removeNulls,\\\n    msg:'Malicious request Detected via ML FWAF XXE Injection',\\\n    tag:'paranoia-level/1',\\\n    severity:'CRITICAL',\\\n    setvar:'tx.inbound_anomaly_score_pl1=+%{tx.critical_anomaly_score}',\\\n    setvar:'tx.inbound_max_anomaly_score_pl1=<%{tx.critical_anomaly_score}',\\\n    logdata:'Matched Data: malicious data found within %{MATCHED_VAR_NAME}: %{MATCHED_VAR}',\\\n    tag:'CategoryName: XXE Injection',\\\n    tag:'CategoryNumber: 11'\"\n",
        "description": "XXE Injection",
        "ml_cate_name": "XXE Injection",
        "ml_cate_no": "11",
        "paranoia_level": "1",
        "rule_id": "410",
        "sec_rule_id": "410111",
        "severity": "CRITICAL",
        "tags": [
            "paranoia-level/1",
            "CategoryName: XXE Injection",
            "CategoryNumber: 11"
        ]
    },
    {
        "comment": "",
        "content": "SecRule REQUEST_URI|REQUEST_COOKIES|!REQUEST_COOKIES:/__utm/|!REQUEST_COOKIES:/^__sg_waf_captcha_.*/|!REQUEST_COOKIES:/^__sd_.*/|REQUEST_COOKIES_NAMES|!REQUEST_COOKIES_NAMES:/^__sg_waf_captcha_.*/|!REQUEST_COOKIES_NAMES:/^__sd_.*/|ARGS_NAMES|ARGS|XML:/*|!REQUEST_HEADERS:x-ja3-hash \"@detectAiWaf\" \\\n    \"id:410112,\\\n    phase:2,\\\n    block,\\\n    t:none,t:utf8toUnicode,t:urlDecodeUni,t:htmlEntityDecode,t:jsDecode,t:cssDecode,t:removeNulls,\\\n    msg:'Malicious request Detected via ML FWAF authentication',\\\n    tag:'paranoia-level/1',\\\n    severity:'NOTICE',\\\n    setvar:'tx.inbound_anomaly_score_pl1=+%{tx.notice_anomaly_score}',\\\n    setvar:'tx.inbound_max_anomaly_score_pl1=<%{tx.notice_anomaly_score}',\\\n    logdata:'Matched Data: malicious data found within %{MATCHED_VAR_NAME}: %{MATCHED_VAR}',\\\n    tag:'CategoryName: authentication',\\\n    tag:'CategoryNumber: 12'\"\n",
        "description": "Authentication Attack",
        "ml_cate_name": "authentication",
        "ml_cate_no": "12",
        "paranoia_level": "1",
        "rule_id": "410",
        "sec_rule_id": "410112",
        "severity": "NOTICE",
        "tags": [
            "paranoia-level/1",
            "CategoryName: authentication",
            "CategoryNumber: 12"
        ]
    },
    {
        "comment": "",
        "content": "SecRule REQUEST_URI|REQUEST_COOKIES|!REQUEST_COOKIES:/__utm/|!REQUEST_COOKIES:/^__sg_waf_captcha_.*/|!REQUEST_COOKIES:/^__sd_.*/|REQUEST_COOKIES_NAMES|!REQUEST_COOKIES_NAMES:/^__sg_waf_captcha_.*/|!REQUEST_COOKIES_NAMES:/^__sd_.*/|ARGS_NAMES|ARGS|XML:/*|!REQUEST_HEADERS:x-ja3-hash \"@detectAiWaf\" \\\n    \"id:410113,\\\n    phase:2,\\\n    block,\\\n    t:none,t:utf8toUnicode,t:urlDecodeUni,t:htmlEntityDecode,t:jsDecode,t:cssDecode,t:removeNulls,\\\n    msg:'Malicious request Detected via ML FWAF business-logic',\\\n    tag:'paranoia-level/1',\\\n    severity:'NOTICE',\\\n    setvar:'tx.inbound_anomaly_score_pl1=+%{tx.notice_anomaly_score}',\\\n    setvar:'tx.inbound_max_anomaly_score_pl1=<%{tx.notice_anomaly_score}',\\\n    logdata:'Matched Data: malicious data found within %{MATCHED_VAR_NAME}: %{MATCHED_VAR}',\\\n    tag:'CategoryName: business-logic',\\\n    tag:'CategoryNumber: 13'\"\n",
        "description": "Business Logic",
        "ml_cate_name": "business-logic",
        "ml_cate_no": "13",
        "paranoia_level": "1",
        "rule_id": "410",
        "sec_rule_id": "410113",
        "severity": "NOTICE",
        "tags": [
            "paranoia-level/1",
            "CategoryName: business-logic",
            "CategoryNumber: 13"
        ]
    },
    {
        "comment": "",
        "content": "SecRule REQUEST_URI|REQUEST_COOKIES|!REQUEST_COOKIES:/__utm/|!REQUEST_COOKIES:/^__sg_waf_captcha_.*/|!REQUEST_COOKIES:/^__sd_.*/|REQUEST_COOKIES_NAMES|!REQUEST_COOKIES_NAMES:/^__sg_waf_captcha_.*/|!REQUEST_COOKIES_NAMES:/^__sd_.*/|ARGS_NAMES|ARGS|XML:/*|!REQUEST_HEADERS:x-ja3-hash \"@detectAiWaf\" \\\n    \"id:410114,\\\n    phase:2,\\\n    block,\\\n    t:none,t:utf8toUnicode,t:urlDecodeUni,t:htmlEntityDecode,t:jsDecode,t:cssDecode,t:removeNulls,\\\n    msg:'Malicious request Detected via ML FWAF codeinjection',\\\n    tag:'paranoia-level/1',\\\n    severity:'CRITICAL',\\\n    setvar:'tx.inbound_anomaly_score_pl1=+%{tx.critical_anomaly_score}',\\\n    setvar:'tx.inbound_max_anomaly_score_pl1=<%{tx.critical_anomaly_score}',\\\n    logdata:'Matched Data: malicious data found within %{MATCHED_VAR_NAME}: %{MATCHED_VAR}',\\\n    tag:'CategoryName: codeinjection',\\\n    tag:'CategoryNumber: 14'\"\n",
        "description": "Code Injection",
        "ml_cate_name": "codeinjection",
        "ml_cate_no": "14",
        "paranoia_level": "1",
        "rule_id": "410",
        "sec_rule_id": "410114",
        "severity": "CRITICAL",
        "tags": [
            "paranoia-level/1",
            "CategoryName: codeinjection",
            "CategoryNumber: 14"
        ]
    },
    {
        "comment": "",
        "content": "SecRule REQUEST_URI|REQUEST_COOKIES|!REQUEST_COOKIES:/__utm/|!REQUEST_COOKIES:/^__sg_waf_captcha_.*/|!REQUEST_COOKIES:/^__sd_.*/|REQUEST_COOKIES_NAMES|!REQUEST_COOKIES_NAMES:/^__sg_waf_captcha_.*/|!REQUEST_COOKIES_NAMES:/^__sd_.*/|ARGS_NAMES|ARGS|XML:/*|!REQUEST_HEADERS:x-ja3-hash \"@detectAiWaf\" \\\n    \"id:410115,\\\n    phase:2,\\\n    block,\\\n    t:none,t:utf8toUnicode,t:urlDecodeUni,t:htmlEntityDecode,t:jsDecode,t:cssDecode,t:removeNulls,\\\n    msg:'Malicious request Detected via ML FWAF control-chars',\\\n    tag:'paranoia-level/1',\\\n    severity:'NOTICE',\\\n    setvar:'tx.inbound_anomaly_score_pl1=+%{tx.notice_anomaly_score}',\\\n    setvar:'tx.inbound_max_anomaly_score_pl1=<%{tx.notice_anomaly_score}',\\\n    logdata:'Matched Data: malicious data found within %{MATCHED_VAR_NAME}: %{MATCHED_VAR}',\\\n    tag:'CategoryName: control-chars',\\\n    tag:'CategoryNumber: 15'\"\n",
        "description": "Control Chars",
        "enabled": false,
        "ml_cate_name": "control-chars",
        "ml_cate_no": "15",
        "paranoia_level": "1",
        "rule_id": "410",
        "sec_rule_id": "410115",
        "severity": "NOTICE",
        "tags": [
            "paranoia-level/1",
            "CategoryName: control-chars",
            "CategoryNumber: 15"
        ]
    },
    {
        "comment": "",
        "content": "SecRule REQUEST_URI|REQUEST_COOKIES|!REQUEST_COOKIES:/__utm/|!REQUEST_COOKIES:/^__sg_waf_captcha_.*/|!REQUEST_COOKIES:/^__sd_.*/|REQUEST_COOKIES_NAMES|!REQUEST_COOKIES_NAMES:/^__sg_waf_captcha_.*/|!REQUEST_COOKIES_NAMES:/^__sd_.*/|ARGS_NAMES|ARGS|XML:/*|!REQUEST_HEADERS:x-ja3-hash \"@detectAiWaf\" \\\n    \"id:410116,\\\n    phase:2,\\\n    block,\\\n    t:none,t:utf8toUnicode,t:urlDecodeUni,t:htmlEntityDecode,t:jsDecode,t:cssDecode,t:removeNulls,\\\n    msg:'Malicious request Detected via ML FWAF dirbuster',\\\n    tag:'paranoia-level/1',\\\n    severity:'NOTICE',\\\n    setvar:'tx.inbound_anomaly_score_pl1=+%{tx.notice_anomaly_score}',\\\n    setvar:'tx.inbound_max_anomaly_score_pl1=<%{tx.notice_anomaly_score}',\\\n    logdata:'Matched Data: malicious data found within %{MATCHED_VAR_NAME}: %{MATCHED_VAR}',\\\n    tag:'CategoryName: dirbuster',\\\n    tag:'CategoryNumber: 16'\"\n",
        "description": "Brute Force Attack for URIs",
        "ml_cate_name": "dirbuster",
        "ml_cate_no": "16",
        "paranoia_level": "1",
        "rule_id": "410",
        "sec_rule_id": "410116",
        "severity": "NOTICE",
        "tags": [
            "paranoia-level/1",
            "CategoryName: dirbuster",
            "CategoryNumber: 16"
        ]
    },
    {
        "comment": "",
        "content": "SecRule REQUEST_URI|REQUEST_COOKIES|!REQUEST_COOKIES:/__utm/|!REQUEST_COOKIES:/^__sg_waf_captcha_.*/|!REQUEST_COOKIES:/^__sd_.*/|REQUEST_COOKIES_NAMES|!REQUEST_COOKIES_NAMES:/^__sg_waf_captcha_.*/|!REQUEST_COOKIES_NAMES:/^__sd_.*/|ARGS_NAMES|ARGS|XML:/*|!REQUEST_HEADERS:x-ja3-hash \"@detectAiWaf\" \\\n    \"id:410117,\\\n    phase:2,\\\n    block,\\\n    t:none,t:utf8toUnicode,t:urlDecodeUni,t:htmlEntityDecode,t:jsDecode,t:cssDecode,t:removeNulls,\\\n    msg:'Malicious request Detected via ML FWAF dirs',\\\n    tag:'paranoia-level/1',\\\n    severity:'NOTICE',\\\n    setvar:'tx.inbound_anomaly_score_pl1=+%{tx.notice_anomaly_score}',\\\n    setvar:'tx.inbound_max_anomaly_score_pl1=<%{tx.notice_anomaly_score}',\\\n    logdata:'Matched Data: malicious data found within %{MATCHED_VAR_NAME}: %{MATCHED_VAR}',\\\n    tag:'CategoryName: dirs',\\\n    tag:'CategoryNumber: 17'\"\n",
        "description": "Common Directory Attack",
        "ml_cate_name": "dirs",
        "ml_cate_no": "17",
        "paranoia_level": "1",
        "rule_id": "410",
        "sec_rule_id": "410117",
        "severity": "NOTICE",
        "tags": [
            "paranoia-level/1",
            "CategoryName: dirs",
            "CategoryNumber: 17"
        ]
    },
    {
        "comment": "",
        "content": "SecRule REQUEST_URI|REQUEST_COOKIES|!REQUEST_COOKIES:/__utm/|!REQUEST_COOKIES:/^__sg_waf_captcha_.*/|!REQUEST_COOKIES:/^__sd_.*/|REQUEST_COOKIES_NAMES|!REQUEST_COOKIES_NAMES:/^__sg_waf_captcha_.*/|!REQUEST_COOKIES_NAMES:/^__sd_.*/|ARGS_NAMES|ARGS|XML:/*|!REQUEST_HEADERS:x-ja3-hash \"@detectAiWaf\" \\\n    \"id:410118,\\\n    phase:2,\\\n    block,\\\n    t:none,t:utf8toUnicode,t:urlDecodeUni,t:htmlEntityDecode,t:jsDecode,t:cssDecode,t:removeNulls,\\\n    msg:'Malicious request Detected via ML FWAF disclosure',\\\n    tag:'paranoia-level/1',\\\n    severity:'WARNING',\\\n    setvar:'tx.inbound_anomaly_score_pl1=+%{tx.warning_anomaly_score}',\\\n    setvar:'tx.inbound_max_anomaly_score_pl1=<%{tx.warning_anomaly_score}',\\\n    logdata:'Matched Data: malicious data found within %{MATCHED_VAR_NAME}: %{MATCHED_VAR}',\\\n    tag:'CategoryName: disclosure',\\\n    tag:'CategoryNumber: 18'\"\n",
        "description": "Disclosure",
        "ml_cate_name": "disclosure",
        "ml_cate_no": "18",
        "paranoia_level": "1",
        "rule_id": "410",
        "sec_rule_id": "410118",
        "severity": "WARNING",
        "tags": [
            "paranoia-level/1",
            "CategoryName: disclosure",
            "CategoryNumber: 18"
        ]
    },
    {
        "comment": "",
        "content": "SecRule REQUEST_URI|REQUEST_COOKIES|!REQUEST_COOKIES:/__utm/|!REQUEST_COOKIES:/^__sg_waf_captcha_.*/|!REQUEST_COOKIES:/^__sd_.*/|REQUEST_COOKIES_NAMES|!REQUEST_COOKIES_NAMES:/^__sg_waf_captcha_.*/|!REQUEST_COOKIES_NAMES:/^__sd_.*/|ARGS_NAMES|ARGS|XML:/*|!REQUEST_HEADERS:x-ja3-hash \"@detectAiWaf\" \\\n    \"id:410119,\\\n    phase:2,\\\n    block,\\\n    t:none,t:utf8toUnicode,t:urlDecodeUni,t:htmlEntityDecode,t:jsDecode,t:cssDecode,t:removeNulls,\\\n    msg:'Malicious request Detected via ML FWAF email',\\\n    tag:'paranoia-level/1',\\\n    severity:'NOTICE',\\\n    setvar:'tx.inbound_anomaly_score_pl1=+%{tx.notice_anomaly_score}',\\\n    setvar:'tx.inbound_max_anomaly_score_pl1=<%{tx.notice_anomaly_score}',\\\n    logdata:'Matched Data: malicious data found within %{MATCHED_VAR_NAME}: %{MATCHED_VAR}',\\\n    tag:'CategoryName: email',\\\n    tag:'CategoryNumber: 19'\"\n",
        "description": "Invalid Emails",
        "enabled": false,
        "ml_cate_name": "email",
        "ml_cate_no": "19",
        "paranoia_level": "1",
        "rule_id": "410",
        "sec_rule_id": "410119",
        "severity": "NOTICE",
        "tags": [
            "paranoia-level/1",
            "CategoryName: email",
            "CategoryNumber: 19"
        ]
    },
    {
        "comment": "",
        "content": "SecRule REQUEST_URI|REQUEST_COOKIES|!REQUEST_COOKIES:/__utm/|!REQUEST_COOKIES:/^__sg_waf_captcha_.*/|!REQUEST_COOKIES:/^__sd_.*/|REQUEST_COOKIES_NAMES|!REQUEST_COOKIES_NAMES:/^__sg_waf_captcha_.*/|!REQUEST_COOKIES_NAMES:/^__sd_.*/|ARGS_NAMES|ARGS|XML:/*|!REQUEST_HEADERS:x-ja3-hash \"@detectAiWaf\" \\\n    \"id:410120,\\\n    phase:2,\\\n    block,\\\n    t:none,t:utf8toUnicode,t:urlDecodeUni,t:htmlEntityDecode,t:jsDecode,t:cssDecode,t:removeNulls,\\\n    msg:'Malicious request Detected via ML FWAF extensions',\\\n    tag:'paranoia-level/1',\\\n    severity:'NOTICE',\\\n    setvar:'tx.inbound_anomaly_score_pl1=+%{tx.notice_anomaly_score}',\\\n    setvar:'tx.inbound_max_anomaly_score_pl1=<%{tx.notice_anomaly_score}',\\\n    logdata:'Matched Data: malicious data found within %{MATCHED_VAR_NAME}: %{MATCHED_VAR}',\\\n    tag:'CategoryName: extensions',\\\n    tag:'CategoryNumber: 20'\"\n",
        "description": "Invalid Extentions",
        "ml_cate_name": "extensions",
        "ml_cate_no": "20",
        "paranoia_level": "1",
        "rule_id": "410",
        "sec_rule_id": "410120",
        "severity": "NOTICE",
        "tags": [
            "paranoia-level/1",
            "CategoryName: extensions",
            "CategoryNumber: 20"
        ]
    },
    {
        "comment": "",
        "content": "SecRule REQUEST_URI|REQUEST_COOKIES|!REQUEST_COOKIES:/__utm/|!REQUEST_COOKIES:/^__sg_waf_captcha_.*/|!REQUEST_COOKIES:/^__sd_.*/|REQUEST_COOKIES_NAMES|!REQUEST_COOKIES_NAMES:/^__sg_waf_captcha_.*/|!REQUEST_COOKIES_NAMES:/^__sd_.*/|ARGS_NAMES|ARGS|XML:/*|!REQUEST_HEADERS:x-ja3-hash \"@detectAiWaf\" \\\n    \"id:410121,\\\n    phase:2,\\\n    block,\\\n    t:none,t:utf8toUnicode,t:urlDecodeUni,t:htmlEntityDecode,t:jsDecode,t:cssDecode,t:removeNulls,\\\n    msg:'Malicious request Detected via ML FWAF file-upload',\\\n    tag:'paranoia-level/1',\\\n    severity:'CRITICAL',\\\n    setvar:'tx.inbound_anomaly_score_pl1=+%{tx.critical_anomaly_score}',\\\n    setvar:'tx.inbound_max_anomaly_score_pl1=<%{tx.critical_anomaly_score}',\\\n    logdata:'Matched Data: malicious data found within %{MATCHED_VAR_NAME}: %{MATCHED_VAR}',\\\n    tag:'CategoryName: file-upload',\\\n    tag:'CategoryNumber: 21'\"\n",
        "description": "File Upload",
        "ml_cate_name": "file-upload",
        "ml_cate_no": "21",
        "paranoia_level": "1",
        "rule_id": "410",
        "sec_rule_id": "410121",
        "severity": "CRITICAL",
        "tags": [
            "paranoia-level/1",
            "CategoryName: file-upload",
            "CategoryNumber: 21"
        ]
    },
    {
        "comment": "",
        "content": "SecRule REQUEST_URI|REQUEST_COOKIES|!REQUEST_COOKIES:/__utm/|!REQUEST_COOKIES:/^__sg_waf_captcha_.*/|!REQUEST_COOKIES:/^__sd_.*/|REQUEST_COOKIES_NAMES|!REQUEST_COOKIES_NAMES:/^__sg_waf_captcha_.*/|!REQUEST_COOKIES_NAMES:/^__sd_.*/|ARGS_NAMES|ARGS|XML:/*|!REQUEST_HEADERS:x-ja3-hash \"@detectAiWaf\" \\\n    \"id:410122,\\\n    phase:2,\\\n    block,\\\n    t:none,t:utf8toUnicode,t:urlDecodeUni,t:htmlEntityDecode,t:jsDecode,t:cssDecode,t:removeNulls,\\\n    msg:'Malicious request Detected via ML FWAF format_string',\\\n    tag:'paranoia-level/1',\\\n    severity:'CRITICAL',\\\n    setvar:'tx.inbound_anomaly_score_pl1=+%{tx.critical_anomaly_score}',\\\n    setvar:'tx.inbound_max_anomaly_score_pl1=<%{tx.critical_anomaly_score}',\\\n    logdata:'Matched Data: malicious data found within %{MATCHED_VAR_NAME}: %{MATCHED_VAR}',\\\n    tag:'CategoryName: format_string',\\\n    tag:'CategoryNumber: 22'\"\n",
        "description": "Format String",
        "ml_cate_name": "format_string",
        "ml_cate_no": "22",
        "paranoia_level": "1",
        "rule_id": "410",
        "sec_rule_id": "410122",
        "severity": "CRITICAL",
        "tags": [
            "paranoia-level/1",
            "CategoryName: format_string",
            "CategoryNumber: 22"
        ]
    },
    {
        "comment": "",
        "content": "SecRule REQUEST_URI|REQUEST_COOKIES|!REQUEST_COOKIES:/__utm/|!REQUEST_COOKIES:/^__sg_waf_captcha_.*/|!REQUEST_COOKIES:/^__sd_.*/|REQUEST_COOKIES_NAMES|!REQUEST_COOKIES_NAMES:/^__sg_waf_captcha_.*/|!REQUEST_COOKIES_NAMES:/^__sd_.*/|ARGS_NAMES|ARGS|XML:/*|!REQUEST_HEADERS:x-ja3-hash \"@detectAiWaf\" \\\n    \"id:410123,\\\n    phase:2,\\\n    block,\\\n    t:none,t:utf8toUnicode,t:urlDecodeUni,t:htmlEntityDecode,t:jsDecode,t:cssDecode,t:removeNulls,\\\n    msg:'Malicious request Detected via ML FWAF html_js_fuzz',\\\n    tag:'paranoia-level/1',\\\n    severity:'WARNING',\\\n    setvar:'tx.inbound_anomaly_score_pl1=+%{tx.warning_anomaly_score}',\\\n    setvar:'tx.inbound_max_anomaly_score_pl1=<%{tx.warning_anomaly_score}',\\\n    logdata:'Matched Data: malicious data found within %{MATCHED_VAR_NAME}: %{MATCHED_VAR}',\\\n    tag:'CategoryName: html_js_fuzz',\\\n    tag:'CategoryNumber: 23'\"\n",
        "description": "HTML-JS-Fuzz",
        "ml_cate_name": "html_js_fuzz",
        "ml_cate_no": "23",
        "paranoia_level": "1",
        "rule_id": "410",
        "sec_rule_id": "410123",
        "severity": "WARNING",
        "tags": [
            "paranoia-level/1",
            "CategoryName: html_js_fuzz",
            "CategoryNumber: 23"
        ]
    },
    {
        "comment": "",
        "content": "SecRule REQUEST_URI|REQUEST_COOKIES|!REQUEST_COOKIES:/__utm/|!REQUEST_COOKIES:/^__sg_waf_captcha_.*/|!REQUEST_COOKIES:/^__sd_.*/|REQUEST_COOKIES_NAMES|!REQUEST_COOKIES_NAMES:/^__sg_waf_captcha_.*/|!REQUEST_COOKIES_NAMES:/^__sd_.*/|ARGS_NAMES|ARGS|XML:/*|!REQUEST_HEADERS:x-ja3-hash \"@detectAiWaf\" \\\n    \"id:410124,\\\n    phase:2,\\\n    block,\\\n    t:none,t:utf8toUnicode,t:urlDecodeUni,t:htmlEntityDecode,t:jsDecode,t:cssDecode,t:removeNulls,\\\n    msg:'Malicious request Detected via ML FWAF http-protocol',\\\n    tag:'paranoia-level/1',\\\n    severity:'CRITICAL',\\\n    setvar:'tx.inbound_anomaly_score_pl1=+%{tx.critical_anomaly_score}',\\\n    setvar:'tx.inbound_max_anomaly_score_pl1=<%{tx.critical_anomaly_score}',\\\n    logdata:'Matched Data: malicious data found within %{MATCHED_VAR_NAME}: %{MATCHED_VAR}',\\\n    tag:'CategoryName: http-protocol',\\\n    tag:'CategoryNumber: 24'\"\n",
        "description": "HTTP Protocol Attacks",
        "ml_cate_name": "http-protocol",
        "ml_cate_no": "24",
        "paranoia_level": "1",
        "rule_id": "410",
        "sec_rule_id": "410124",
        "severity": "CRITICAL",
        "tags": [
            "paranoia-level/1",
            "CategoryName: http-protocol",
            "CategoryNumber: 24"
        ]
    },
    {
        "comment": "",
        "content": "SecRule REQUEST_URI|REQUEST_COOKIES|!REQUEST_COOKIES:/__utm/|!REQUEST_COOKIES:/^__sg_waf_captcha_.*/|!REQUEST_COOKIES:/^__sd_.*/|REQUEST_COOKIES_NAMES|!REQUEST_COOKIES_NAMES:/^__sg_waf_captcha_.*/|!REQUEST_COOKIES_NAMES:/^__sd_.*/|ARGS_NAMES|ARGS|XML:/*|!REQUEST_HEADERS:x-ja3-hash \"@detectAiWaf\" \\\n    \"id:410125,\\\n    phase:2,\\\n    block,\\\n    t:none,t:utf8toUnicode,t:urlDecodeUni,t:htmlEntityDecode,t:jsDecode,t:cssDecode,t:removeNulls,\\\n    msg:'Malicious request Detected via ML FWAF iis_cgi',\\\n    tag:'paranoia-level/1',\\\n    severity:'WARNING',\\\n    setvar:'tx.inbound_anomaly_score_pl1=+%{tx.warning_anomaly_score}',\\\n    setvar:'tx.inbound_max_anomaly_score_pl1=<%{tx.warning_anomaly_score}',\\\n    logdata:'Matched Data: malicious data found within %{MATCHED_VAR_NAME}: %{MATCHED_VAR}',\\\n    tag:'CategoryName: iis_cgi',\\\n    tag:'CategoryNumber: 25'\"\n",
        "description": "IIS CGI Attacks",
        "ml_cate_name": "iis_cgi",
        "ml_cate_no": "25",
        "paranoia_level": "1",
        "rule_id": "410",
        "sec_rule_id": "410125",
        "severity": "WARNING",
        "tags": [
            "paranoia-level/1",
            "CategoryName: iis_cgi",
            "CategoryNumber: 25"
        ]
    },
    {
        "comment": "",
        "content": "SecRule REQUEST_URI|REQUEST_COOKIES|!REQUEST_COOKIES:/__utm/|!REQUEST_COOKIES:/^__sg_waf_captcha_.*/|!REQUEST_COOKIES:/^__sd_.*/|REQUEST_COOKIES_NAMES|!REQUEST_COOKIES_NAMES:/^__sg_waf_captcha_.*/|!REQUEST_COOKIES_NAMES:/^__sd_.*/|ARGS_NAMES|ARGS|XML:/*|!REQUEST_HEADERS:x-ja3-hash \"@detectAiWaf\" \\\n    \"id:410126,\\\n    phase:2,\\\n    block,\\\n    t:none,t:utf8toUnicode,t:urlDecodeUni,t:htmlEntityDecode,t:jsDecode,t:cssDecode,t:removeNulls,\\\n    msg:'Malicious request Detected via ML FWAF integer-overflow',\\\n    tag:'paranoia-level/1',\\\n    severity:'CRITICAL',\\\n    setvar:'tx.inbound_anomaly_score_pl1=+%{tx.critical_anomaly_score}',\\\n    setvar:'tx.inbound_max_anomaly_score_pl1=<%{tx.critical_anomaly_score}',\\\n    logdata:'Matched Data: malicious data found within %{MATCHED_VAR_NAME}: %{MATCHED_VAR}',\\\n    tag:'CategoryName: integer-overflow',\\\n    tag:'CategoryNumber: 26'\"\n",
        "description": "Integer Overflow",
        "ml_cate_name": "integer-overflow",
        "ml_cate_no": "26",
        "paranoia_level": "1",
        "rule_id": "410",
        "sec_rule_id": "410126",
        "severity": "CRITICAL",
        "tags": [
            "paranoia-level/1",
            "CategoryName: integer-overflow",
            "CategoryNumber: 26"
        ]
    },
    {
        "comment": "",
        "content": "SecRule REQUEST_URI|REQUEST_COOKIES|!REQUEST_COOKIES:/__utm/|!REQUEST_COOKIES:/^__sg_waf_captcha_.*/|!REQUEST_COOKIES:/^__sd_.*/|REQUEST_COOKIES_NAMES|!REQUEST_COOKIES_NAMES:/^__sg_waf_captcha_.*/|!REQUEST_COOKIES_NAMES:/^__sd_.*/|ARGS_NAMES|ARGS|XML:/*|!REQUEST_HEADERS:x-ja3-hash \"@detectAiWaf\" \\\n    \"id:410127,\\\n    phase:2,\\\n    block,\\\n    t:none,t:utf8toUnicode,t:urlDecodeUni,t:htmlEntityDecode,t:jsDecode,t:cssDecode,t:removeNulls,\\\n    msg:'Malicious request Detected via ML FWAF ip',\\\n    tag:'paranoia-level/1',\\\n    severity:'CRITICAL',\\\n    setvar:'tx.inbound_anomaly_score_pl1=+%{tx.critical_anomaly_score}',\\\n    setvar:'tx.inbound_max_anomaly_score_pl1=<%{tx.critical_anomaly_score}',\\\n    logdata:'Matched Data: malicious data found within %{MATCHED_VAR_NAME}: %{MATCHED_VAR}',\\\n    tag:'CategoryName: ip',\\\n    tag:'CategoryNumber: 27'\"\n",
        "description": "Common Attack IP",
        "ml_cate_name": "ip",
        "ml_cate_no": "27",
        "paranoia_level": "1",
        "rule_id": "410",
        "sec_rule_id": "410127",
        "severity": "CRITICAL",
        "tags": [
            "paranoia-level/1",
            "CategoryName: ip",
            "CategoryNumber: 27"
        ]
    },
    {
        "comment": "",
        "content": "SecRule REQUEST_URI|REQUEST_COOKIES|!REQUEST_COOKIES:/__utm/|!REQUEST_COOKIES:/^__sg_waf_captcha_.*/|!REQUEST_COOKIES:/^__sd_.*/|REQUEST_COOKIES_NAMES|!REQUEST_COOKIES_NAMES:/^__sg_waf_captcha_.*/|!REQUEST_COOKIES_NAMES:/^__sd_.*/|ARGS_NAMES|ARGS|XML:/*|!REQUEST_HEADERS:x-ja3-hash \"@detectAiWaf\" \\\n    \"id:410128,\\\n    phase:2,\\\n    block,\\\n    t:none,t:utf8toUnicode,t:urlDecodeUni,t:htmlEntityDecode,t:jsDecode,t:cssDecode,t:removeNulls,\\\n    msg:'Malicious request Detected via ML FWAF json',\\\n    tag:'paranoia-level/1',\\\n    severity:'CRITICAL',\\\n    setvar:'tx.inbound_anomaly_score_pl1=+%{tx.critical_anomaly_score}',\\\n    setvar:'tx.inbound_max_anomaly_score_pl1=<%{tx.critical_anomaly_score}',\\\n    logdata:'Matched Data: malicious data found within %{MATCHED_VAR_NAME}: %{MATCHED_VAR}',\\\n    tag:'CategoryName: json',\\\n    tag:'CategoryNumber: 28'\"\n",
        "description": "Json Fuzzing",
        "ml_cate_name": "json",
        "ml_cate_no": "28",
        "paranoia_level": "1",
        "rule_id": "410",
        "sec_rule_id": "410128",
        "severity": "CRITICAL",
        "tags": [
            "paranoia-level/1",
            "CategoryName: json",
            "CategoryNumber: 28"
        ]
    },
    {
        "comment": "",
        "content": "SecRule REQUEST_URI|REQUEST_COOKIES|!REQUEST_COOKIES:/__utm/|!REQUEST_COOKIES:/^__sg_waf_captcha_.*/|!REQUEST_COOKIES:/^__sd_.*/|REQUEST_COOKIES_NAMES|!REQUEST_COOKIES_NAMES:/^__sg_waf_captcha_.*/|!REQUEST_COOKIES_NAMES:/^__sd_.*/|ARGS_NAMES|ARGS|XML:/*|!REQUEST_HEADERS:x-ja3-hash \"@detectAiWaf\" \\\n    \"id:410129,\\\n    phase:2,\\\n    block,\\\n    t:none,t:utf8toUnicode,t:urlDecodeUni,t:htmlEntityDecode,t:jsDecode,t:cssDecode,t:removeNulls,\\\n    msg:'Malicious request Detected via ML FWAF ldap',\\\n    tag:'paranoia-level/1',\\\n    severity:'WARNING',\\\n    setvar:'tx.inbound_anomaly_score_pl1=+%{tx.warning_anomaly_score}',\\\n    setvar:'tx.inbound_max_anomaly_score_pl1=<%{tx.warning_anomaly_score}',\\\n    logdata:'Matched Data: malicious data found within %{MATCHED_VAR_NAME}: %{MATCHED_VAR}',\\\n    tag:'CategoryName: ldap',\\\n    tag:'CategoryNumber: 29'\"\n",
        "description": "LDAP Attacks",
        "ml_cate_name": "ldap",
        "ml_cate_no": "29",
        "paranoia_level": "1",
        "rule_id": "410",
        "sec_rule_id": "410129",
        "severity": "WARNING",
        "tags": [
            "paranoia-level/1",
            "CategoryName: ldap",
            "CategoryNumber: 29"
        ]
    },
    {
        "comment": "",
        "content": "SecRule REQUEST_URI|REQUEST_COOKIES|!REQUEST_COOKIES:/__utm/|!REQUEST_COOKIES:/^__sg_waf_captcha_.*/|!REQUEST_COOKIES:/^__sd_.*/|REQUEST_COOKIES_NAMES|!REQUEST_COOKIES_NAMES:/^__sg_waf_captcha_.*/|!REQUEST_COOKIES_NAMES:/^__sd_.*/|ARGS_NAMES|ARGS|XML:/*|!REQUEST_HEADERS:x-ja3-hash \"@detectAiWaf\" \\\n    \"id:410130,\\\n    phase:2,\\\n    block,\\\n    t:none,t:utf8toUnicode,t:urlDecodeUni,t:htmlEntityDecode,t:jsDecode,t:cssDecode,t:removeNulls,\\\n    msg:'Malicious request Detected via ML FWAF lfi',\\\n    tag:'paranoia-level/1',\\\n    severity:'CRITICAL',\\\n    setvar:'tx.inbound_anomaly_score_pl1=+%{tx.critical_anomaly_score}',\\\n    setvar:'tx.inbound_max_anomaly_score_pl1=<%{tx.critical_anomaly_score}',\\\n    logdata:'Matched Data: malicious data found within %{MATCHED_VAR_NAME}: %{MATCHED_VAR}',\\\n    tag:'CategoryName: lfi',\\\n    tag:'CategoryNumber: 30'\"\n",
        "description": "Local File Inclusion",
        "ml_cate_name": "lfi",
        "ml_cate_no": "30",
        "paranoia_level": "1",
        "rule_id": "410",
        "sec_rule_id": "410130",
        "severity": "CRITICAL",
        "tags": [
            "paranoia-level/1",
            "CategoryName: lfi",
            "CategoryNumber: 30"
        ]
    },
    {
        "comment": "",
        "content": "SecRule REQUEST_URI|REQUEST_COOKIES|!REQUEST_COOKIES:/__utm/|!REQUEST_COOKIES:/^__sg_waf_captcha_.*/|!REQUEST_COOKIES:/^__sd_.*/|REQUEST_COOKIES_NAMES|!REQUEST_COOKIES_NAMES:/^__sg_waf_captcha_.*/|!REQUEST_COOKIES_NAMES:/^__sd_.*/|ARGS_NAMES|ARGS|XML:/*|!REQUEST_HEADERS:x-ja3-hash \"@detectAiWaf\" \\\n    \"id:410131,\\\n    phase:2,\\\n    block,\\\n    t:none,t:utf8toUnicode,t:urlDecodeUni,t:htmlEntityDecode,t:jsDecode,t:cssDecode,t:removeNulls,\\\n    msg:'Malicious request Detected via ML FWAF os-cmd-execution',\\\n    tag:'paranoia-level/1',\\\n    severity:'WARNING',\\\n    setvar:'tx.inbound_anomaly_score_pl1=+%{tx.warning_anomaly_score}',\\\n    setvar:'tx.inbound_max_anomaly_score_pl1=<%{tx.warning_anomaly_score}',\\\n    logdata:'Matched Data: malicious data found within %{MATCHED_VAR_NAME}: %{MATCHED_VAR}',\\\n    tag:'CategoryName: os-cmd-execution',\\\n    tag:'CategoryNumber: 31'\"\n",
        "description": "OS Command Execution",
        "ml_cate_name": "os-cmd-execution",
        "ml_cate_no": "31",
        "paranoia_level": "1",
        "rule_id": "410",
        "sec_rule_id": "410131",
        "severity": "WARNING",
        "tags": [
            "paranoia-level/1",
            "CategoryName: os-cmd-execution",
            "CategoryNumber: 31"
        ]
    },
    {
        "comment": "",
        "content": "SecRule REQUEST_URI|REQUEST_COOKIES|!REQUEST_COOKIES:/__utm/|!REQUEST_COOKIES:/^__sg_waf_captcha_.*/|!REQUEST_COOKIES:/^__sd_.*/|REQUEST_COOKIES_NAMES|!REQUEST_COOKIES_NAMES:/^__sg_waf_captcha_.*/|!REQUEST_COOKIES_NAMES:/^__sd_.*/|ARGS_NAMES|ARGS|XML:/*|!REQUEST_HEADERS:x-ja3-hash \"@detectAiWaf\" \\\n    \"id:410132,\\\n    phase:2,\\\n    block,\\\n    t:none,t:utf8toUnicode,t:urlDecodeUni,t:htmlEntityDecode,t:jsDecode,t:cssDecode,t:removeNulls,\\\n    msg:'Malicious request Detected via ML FWAF os-dir-indexing',\\\n    tag:'paranoia-level/1',\\\n    severity:'CRITICAL',\\\n    setvar:'tx.inbound_anomaly_score_pl1=+%{tx.critical_anomaly_score}',\\\n    setvar:'tx.inbound_max_anomaly_score_pl1=<%{tx.critical_anomaly_score}',\\\n    logdata:'Matched Data: malicious data found within %{MATCHED_VAR_NAME}: %{MATCHED_VAR}',\\\n    tag:'CategoryName: os-dir-indexing',\\\n    tag:'CategoryNumber: 32'\"\n",
        "description": "OS Directory Indexing",
        "ml_cate_name": "os-dir-indexing",
        "ml_cate_no": "32",
        "paranoia_level": "1",
        "rule_id": "410",
        "sec_rule_id": "410132",
        "severity": "CRITICAL",
        "tags": [
            "paranoia-level/1",
            "CategoryName: os-dir-indexing",
            "CategoryNumber: 32"
        ]
    },
    {
        "comment": "",
        "content": "SecRule REQUEST_URI|REQUEST_COOKIES|!REQUEST_COOKIES:/__utm/|!REQUEST_COOKIES:/^__sg_waf_captcha_.*/|!REQUEST_COOKIES:/^__sd_.*/|REQUEST_COOKIES_NAMES|!REQUEST_COOKIES_NAMES:/^__sg_waf_captcha_.*/|!REQUEST_COOKIES_NAMES:/^__sd_.*/|ARGS_NAMES|ARGS|XML:/*|!REQUEST_HEADERS:x-ja3-hash \"@detectAiWaf\" \\\n    \"id:410133,\\\n    phase:2,\\\n    block,\\\n    t:none,t:utf8toUnicode,t:urlDecodeUni,t:htmlEntityDecode,t:jsDecode,t:cssDecode,t:removeNulls,\\\n    msg:'Malicious request Detected via ML FWAF redirect',\\\n    tag:'paranoia-level/1',\\\n    severity:'NOTICE',\\\n    setvar:'tx.inbound_anomaly_score_pl1=+%{tx.notice_anomaly_score}',\\\n    setvar:'tx.inbound_max_anomaly_score_pl1=<%{tx.notice_anomaly_score}',\\\n    logdata:'Matched Data: malicious data found within %{MATCHED_VAR_NAME}: %{MATCHED_VAR}',\\\n    tag:'CategoryName: redirect',\\\n    tag:'CategoryNumber: 33'\"\n",
        "description": "Redirect Attacks",
        "ml_cate_name": "redirect",
        "ml_cate_no": "33",
        "paranoia_level": "1",
        "rule_id": "410",
        "sec_rule_id": "410133",
        "severity": "NOTICE",
        "tags": [
            "paranoia-level/1",
            "CategoryName: redirect",
            "CategoryNumber: 33"
        ]
    },
    {
        "comment": "",
        "content": "SecRule REQUEST_URI|REQUEST_COOKIES|!REQUEST_COOKIES:/__utm/|!REQUEST_COOKIES:/^__sg_waf_captcha_.*/|!REQUEST_COOKIES:/^__sd_.*/|REQUEST_COOKIES_NAMES|!REQUEST_COOKIES_NAMES:/^__sg_waf_captcha_.*/|!REQUEST_COOKIES_NAMES:/^__sd_.*/|ARGS_NAMES|ARGS|XML:/*|!REQUEST_HEADERS:x-ja3-hash \"@detectAiWaf\" \\\n    \"id:410134,\\\n    phase:2,\\\n    block,\\\n    t:none,t:utf8toUnicode,t:urlDecodeUni,t:htmlEntityDecode,t:jsDecode,t:cssDecode,t:removeNulls,\\\n    msg:'Malicious request Detected via ML FWAF rfi',\\\n    tag:'paranoia-level/1',\\\n    severity:'CRITICAL',\\\n    setvar:'tx.inbound_anomaly_score_pl1=+%{tx.critical_anomaly_score}',\\\n    setvar:'tx.inbound_max_anomaly_score_pl1=<%{tx.critical_anomaly_score}',\\\n    logdata:'Matched Data: malicious data found within %{MATCHED_VAR_NAME}: %{MATCHED_VAR}',\\\n    tag:'CategoryName: rfi',\\\n    tag:'CategoryNumber: 34'\"\n",
        "description": "Remote File Inclusion",
        "ml_cate_name": "rfi",
        "ml_cate_no": "34",
        "paranoia_level": "1",
        "rule_id": "410",
        "sec_rule_id": "410134",
        "severity": "CRITICAL",
        "tags": [
            "paranoia-level/1",
            "CategoryName: rfi",
            "CategoryNumber: 34"
        ]
    },
    {
        "comment": "",
        "content": "SecRule REQUEST_URI|REQUEST_COOKIES|!REQUEST_COOKIES:/__utm/|!REQUEST_COOKIES:/^__sg_waf_captcha_.*/|!REQUEST_COOKIES:/^__sd_.*/|REQUEST_COOKIES_NAMES|!REQUEST_COOKIES_NAMES:/^__sg_waf_captcha_.*/|!REQUEST_COOKIES_NAMES:/^__sd_.*/|ARGS_NAMES|ARGS|XML:/*|!REQUEST_HEADERS:x-ja3-hash \"@detectAiWaf\" \\\n    \"id:410135,\\\n    phase:2,\\\n    block,\\\n    t:none,t:utf8toUnicode,t:urlDecodeUni,t:htmlEntityDecode,t:jsDecode,t:cssDecode,t:removeNulls,\\\n    msg:'Malicious request Detected via ML FWAF ssi',\\\n    tag:'paranoia-level/1',\\\n    severity:'CRITICAL',\\\n    setvar:'tx.inbound_anomaly_score_pl1=+%{tx.critical_anomaly_score}',\\\n    setvar:'tx.inbound_max_anomaly_score_pl1=<%{tx.critical_anomaly_score}',\\\n    logdata:'Matched Data: malicious data found within %{MATCHED_VAR_NAME}: %{MATCHED_VAR}',\\\n    tag:'CategoryName: ssi',\\\n    tag:'CategoryNumber: 35'\"\n",
        "description": "Server Side Inclusion",
        "ml_cate_name": "ssi",
        "ml_cate_no": "35",
        "paranoia_level": "1",
        "rule_id": "410",
        "sec_rule_id": "410135",
        "severity": "CRITICAL",
        "tags": [
            "paranoia-level/1",
            "CategoryName: ssi",
            "CategoryNumber: 35"
        ]
    },
    {
        "comment": "",
        "content": "SecRule REQUEST_URI|REQUEST_COOKIES|!REQUEST_COOKIES:/__utm/|!REQUEST_COOKIES:/^__sg_waf_captcha_.*/|!REQUEST_COOKIES:/^__sd_.*/|REQUEST_COOKIES_NAMES|!REQUEST_COOKIES_NAMES:/^__sg_waf_captcha_.*/|!REQUEST_COOKIES_NAMES:/^__sd_.*/|ARGS_NAMES|ARGS|XML:/*|!REQUEST_HEADERS:x-ja3-hash \"@detectAiWaf\" \\\n    \"id:410136,\\\n    phase:2,\\\n    block,\\\n    t:none,t:utf8toUnicode,t:urlDecodeUni,t:htmlEntityDecode,t:jsDecode,t:cssDecode,t:removeNulls,\\\n    msg:'Malicious request Detected via ML FWAF string-expansion',\\\n    tag:'paranoia-level/1',\\\n    severity:'CRITICAL',\\\n    setvar:'tx.inbound_anomaly_score_pl1=+%{tx.critical_anomaly_score}',\\\n    setvar:'tx.inbound_max_anomaly_score_pl1=<%{tx.critical_anomaly_score}',\\\n    logdata:'Matched Data: malicious data found within %{MATCHED_VAR_NAME}: %{MATCHED_VAR}',\\\n    tag:'CategoryName: string-expansion',\\\n    tag:'CategoryNumber: 36'\"\n",
        "description": "String Expansion Attacks",
        "ml_cate_name": "string-expansion",
        "ml_cate_no": "36",
        "paranoia_level": "1",
        "rule_id": "410",
        "sec_rule_id": "410136",
        "severity": "CRITICAL",
        "tags": [
            "paranoia-level/1",
            "CategoryName: string-expansion",
            "CategoryNumber: 36"
        ]
    },
    {
        "comment": "",
        "content": "SecRule REQUEST_URI|REQUEST_COOKIES|!REQUEST_COOKIES:/__utm/|!REQUEST_COOKIES:/^__sg_waf_captcha_.*/|!REQUEST_COOKIES:/^__sd_.*/|REQUEST_COOKIES_NAMES|!REQUEST_COOKIES_NAMES:/^__sg_waf_captcha_.*/|!REQUEST_COOKIES_NAMES:/^__sd_.*/|ARGS_NAMES|ARGS|XML:/*|!REQUEST_HEADERS:x-ja3-hash \"@detectAiWaf\" \\\n    \"id:410137,\\\n    phase:2,\\\n    block,\\\n    t:none,t:utf8toUnicode,t:urlDecodeUni,t:htmlEntityDecode,t:jsDecode,t:cssDecode,t:removeNulls,\\\n    msg:'Malicious request Detected via ML FWAF unicode',\\\n    tag:'paranoia-level/1',\\\n    severity:'NOTICE',\\\n    setvar:'tx.inbound_anomaly_score_pl1=+%{tx.notice_anomaly_score}',\\\n    setvar:'tx.inbound_max_anomaly_score_pl1=<%{tx.notice_anomaly_score}',\\\n    logdata:'Matched Data: malicious data found within %{MATCHED_VAR_NAME}: %{MATCHED_VAR}',\\\n    tag:'CategoryName: unicode',\\\n    tag:'CategoryNumber: 37'\"\n",
        "description": "Unicode Attacks",
        "ml_cate_name": "unicode",
        "ml_cate_no": "37",
        "paranoia_level": "1",
        "rule_id": "410",
        "sec_rule_id": "410137",
        "severity": "NOTICE",
        "tags": [
            "paranoia-level/1",
            "CategoryName: unicode",
            "CategoryNumber: 37"
        ]
    },
    {
        "comment": "",
        "content": "SecRule REQUEST_URI|REQUEST_COOKIES|!REQUEST_COOKIES:/__utm/|!REQUEST_COOKIES:/^__sg_waf_captcha_.*/|!REQUEST_COOKIES:/^__sd_.*/|REQUEST_COOKIES_NAMES|!REQUEST_COOKIES_NAMES:/^__sg_waf_captcha_.*/|!REQUEST_COOKIES_NAMES:/^__sd_.*/|ARGS_NAMES|ARGS|XML:/*|!REQUEST_HEADERS:x-ja3-hash \"@detectAiWaf\" \\\n    \"id:410138,\\\n    phase:2,\\\n    block,\\\n    t:none,t:utf8toUnicode,t:urlDecodeUni,t:htmlEntityDecode,t:jsDecode,t:cssDecode,t:removeNulls,\\\n    msg:'Malicious request Detected via ML FWAF web-backdoors',\\\n    tag:'paranoia-level/1',\\\n    severity:'CRITICAL',\\\n    setvar:'tx.inbound_anomaly_score_pl1=+%{tx.critical_anomaly_score}',\\\n    setvar:'tx.inbound_max_anomaly_score_pl1=<%{tx.critical_anomaly_score}',\\\n    logdata:'Matched Data: malicious data found within %{MATCHED_VAR_NAME}: %{MATCHED_VAR}',\\\n    tag:'CategoryName: web-backdoors',\\\n    tag:'CategoryNumber: 38'\"\n",
        "description": "Web Backdoors",
        "ml_cate_name": "web-backdoors",
        "ml_cate_no": "38",
        "paranoia_level": "1",
        "rule_id": "410",
        "sec_rule_id": "410138",
        "severity": "CRITICAL",
        "tags": [
            "paranoia-level/1",
            "CategoryName: web-backdoors",
            "CategoryNumber: 38"
        ]
    },
    {
        "comment": "",
        "content": "SecRule REQUEST_URI|REQUEST_COOKIES|!REQUEST_COOKIES:/__utm/|!REQUEST_COOKIES:/^__sg_waf_captcha_.*/|!REQUEST_COOKIES:/^__sd_.*/|REQUEST_COOKIES_NAMES|!REQUEST_COOKIES_NAMES:/^__sg_waf_captcha_.*/|!REQUEST_COOKIES_NAMES:/^__sd_.*/|ARGS_NAMES|ARGS|XML:/*|!REQUEST_HEADERS:x-ja3-hash \"@detectAiWaf\" \\\n    \"id:410139,\\\n    phase:2,\\\n    block,\\\n    t:none,t:utf8toUnicode,t:urlDecodeUni,t:htmlEntityDecode,t:jsDecode,t:cssDecode,t:removeNulls,\\\n    msg:'Malicious request Detected via ML FWAF windows_variables',\\\n    tag:'paranoia-level/1',\\\n    severity:'CRITICAL',\\\n    setvar:'tx.inbound_anomaly_score_pl1=+%{tx.critical_anomaly_score}',\\\n    setvar:'tx.inbound_max_anomaly_score_pl1=<%{tx.critical_anomaly_score}',\\\n    logdata:'Matched Data: malicious data found within %{MATCHED_VAR_NAME}: %{MATCHED_VAR}',\\\n    tag:'CategoryName: windows_variables',\\\n    tag:'CategoryNumber: 39'\"\n",
        "description": "Windows Variables",
        "ml_cate_name": "windows_variables",
        "ml_cate_no": "39",
        "paranoia_level": "1",
        "rule_id": "410",
        "sec_rule_id": "410139",
        "severity": "CRITICAL",
        "tags": [
            "paranoia-level/1",
            "CategoryName: windows_variables",
            "CategoryNumber: 39"
        ]
    },
    {
        "comment": "",
        "content": "SecRule REQUEST_URI|REQUEST_COOKIES|!REQUEST_COOKIES:/__utm/|!REQUEST_COOKIES:/^__sg_waf_captcha_.*/|!REQUEST_COOKIES:/^__sd_.*/|REQUEST_COOKIES_NAMES|!REQUEST_COOKIES_NAMES:/^__sg_waf_captcha_.*/|!REQUEST_COOKIES_NAMES:/^__sd_.*/|ARGS_NAMES|ARGS|XML:/*|!REQUEST_HEADERS:x-ja3-hash \"@detectAiWaf\" \\\n    \"id:410140,\\\n    phase:2,\\\n    block,\\\n    t:none,t:utf8toUnicode,t:urlDecodeUni,t:htmlEntityDecode,t:jsDecode,t:cssDecode,t:removeNulls,\\\n    msg:'Malicious request Detected via ML FWAF xml',\\\n    tag:'paranoia-level/1',\\\n    severity:'CRITICAL',\\\n    setvar:'tx.inbound_anomaly_score_pl1=+%{tx.critical_anomaly_score}',\\\n    setvar:'tx.inbound_max_anomaly_score_pl1=<%{tx.critical_anomaly_score}',\\\n    logdata:'Matched Data: malicious data found within %{MATCHED_VAR_NAME}: %{MATCHED_VAR}',\\\n    tag:'CategoryName: xml',\\\n    tag:'CategoryNumber: 40'\"\n",
        "description": "XML Attacks",
        "ml_cate_name": "xml",
        "ml_cate_no": "40",
        "paranoia_level": "1",
        "rule_id": "410",
        "sec_rule_id": "410140",
        "severity": "CRITICAL",
        "tags": [
            "paranoia-level/1",
            "CategoryName: xml",
            "CategoryNumber: 40"
        ]
    },
    {
        "comment": "",
        "content": "SecRule REQUEST_URI|REQUEST_COOKIES|!REQUEST_COOKIES:/__utm/|!REQUEST_COOKIES:/^__sg_waf_captcha_.*/|!REQUEST_COOKIES:/^__sd_.*/|REQUEST_COOKIES_NAMES|!REQUEST_COOKIES_NAMES:/^__sg_waf_captcha_.*/|!REQUEST_COOKIES_NAMES:/^__sd_.*/|ARGS_NAMES|ARGS|XML:/*|!REQUEST_HEADERS:x-ja3-hash \"@detectAiWaf\" \\\n    \"id:410141,\\\n    phase:2,\\\n    block,\\\n    t:none,t:utf8toUnicode,t:urlDecodeUni,t:htmlEntityDecode,t:jsDecode,t:cssDecode,t:removeNulls,\\\n    msg:'Malicious request Detected via ML FWAF xpath',\\\n    tag:'paranoia-level/1',\\\n    severity:'CRITICAL',\\\n    setvar:'tx.inbound_anomaly_score_pl1=+%{tx.critical_anomaly_score}',\\\n    setvar:'tx.inbound_max_anomaly_score_pl1=<%{tx.critical_anomaly_score}',\\\n    logdata:'Matched Data: malicious data found within %{MATCHED_VAR_NAME}: %{MATCHED_VAR}',\\\n    tag:'CategoryName: xpath',\\\n    tag:'CategoryNumber: 41'\"\n",
        "description": "Xpath Injection",
        "ml_cate_name": "xpath",
        "ml_cate_no": "41",
        "paranoia_level": "1",
        "rule_id": "410",
        "sec_rule_id": "410141",
        "severity": "CRITICAL",
        "tags": [
            "paranoia-level/1",
            "CategoryName: xpath",
            "CategoryNumber: 41"
        ]
    },
    {
        "comment": "",
        "content": "SecRule REQUEST_URI|REQUEST_COOKIES|!REQUEST_COOKIES:/__utm/|!REQUEST_COOKIES:/^__sg_waf_captcha_.*/|!REQUEST_COOKIES:/^__sd_.*/|REQUEST_COOKIES_NAMES|!REQUEST_COOKIES_NAMES:/^__sg_waf_captcha_.*/|!REQUEST_COOKIES_NAMES:/^__sd_.*/|ARGS_NAMES|ARGS|XML:/*|!REQUEST_HEADERS:x-ja3-hash \"@detectAiWaf\" \\\n    \"id:410142,\\\n    phase:2,\\\n    block,\\\n    t:none,t:utf8toUnicode,t:urlDecodeUni,t:htmlEntityDecode,t:jsDecode,t:cssDecode,t:removeNulls,\\\n    msg:'Malicious request Detected via ML FWAF xss',\\\n    tag:'paranoia-level/1',\\\n    severity:'CRITICAL',\\\n    setvar:'tx.inbound_anomaly_score_pl1=+%{tx.critical_anomaly_score}',\\\n    setvar:'tx.inbound_max_anomaly_score_pl1=<%{tx.critical_anomaly_score}',\\\n    logdata:'Matched Data: malicious data found within %{MATCHED_VAR_NAME}: %{MATCHED_VAR}',\\\n    tag:'CategoryName: xss',\\\n    tag:'CategoryNumber: 42'\"\n",
        "description": "Cross Site Script (XSS)",
        "ml_cate_name": "xss",
        "ml_cate_no": "42",
        "paranoia_level": "1",
        "rule_id": "410",
        "sec_rule_id": "410142",
        "severity": "CRITICAL",
        "tags": [
            "paranoia-level/1",
            "CategoryName: xss",
            "CategoryNumber: 42"
        ]
    },
    {
        "comment": "# at start of phase 2, we reset the aggregate scores to 0 to prevent duplicate counting of per-PL scores\n# this is necessary because the per-PL scores are counted across phases\n",
        "content": "SecAction \"id:410200,\\\n    phase:2,\\\n    pass,\\\n    t:none,\\\n    nolog,\\\n    setvar:'tx.blocking_inbound_anomaly_score=0'\"\n",
        "rule_id": "410",
        "sec_rule_id": "410200"
    },
    {
        "comment": "",
        "content": "SecAction \"id:410201,\\\n    phase:2,\\\n    pass,\\\n    t:none,\\\n    nolog,\\\n    setvar:'tx.detection_inbound_anomaly_score=0'\"\n",
        "rule_id": "410",
        "sec_rule_id": "410201"
    },
    {
        "comment": "# Summing up the blocking and detection anomaly scores in phase 2\n",
        "content": "SecRule TX:BLOCKING_PARANOIA_LEVEL \"@ge 1\" \\\n    \"id:410210,\\\n    phase:2,\\\n    pass,\\\n    t:none,\\\n    nolog,\\\n    setvar:'tx.blocking_inbound_anomaly_score=+%{tx.inbound_anomaly_score_pl1}'\"\n",
        "rule_id": "410",
        "sec_rule_id": "410210"
    },
    {
        "comment": "",
        "content": "SecRule TX:DETECTION_PARANOIA_LEVEL \"@ge 1\" \\\n    \"id:410211,\\\n    phase:2,\\\n    pass,\\\n    t:none,\\\n    nolog,\\\n    setvar:'tx.detection_inbound_anomaly_score=+%{tx.inbound_anomaly_score_pl1}'\"\n",
        "rule_id": "410",
        "sec_rule_id": "410211"
    },
    {
        "comment": "# always check threshold in phase 2\n",
        "content": "SecRule TX:BLOCKING_INBOUND_ANOMALY_SCORE \"@ge 5\" \\\n    \"id:410220,\\\n    phase:2,\\\n    deny,\\\n    t:none,\\\n    msg:'Inbound Anomaly Score Exceeded (Total Score: %{TX.BLOCKING_INBOUND_ANOMALY_SCORE})',\\\n    tag:'anomaly-evaluation',\\\n    tag:'CategoryName: anomaly-evaluation',\\\n    ver:'OWASP_CRS/3.4.0-dev',\\\n    chain\"\n    SecRule TX:INBOUND_MAX_ANOMALY_SCORE_PL1 \"@gt %{tx.notice_anomaly_score}\" \"\"\n",
        "description": "Anomaly Evaluation",
        "ml_cate_name": "anomaly-evaluation",
        "rule_id": "410",
        "sec_rule_id": "410220",
        "tags": [
            "anomaly-evaluation",
            "CategoryName: anomaly-evaluation"
        ]
    },
    {
        "comment": "# at end of phase 2, we reset the anomaly scores to 0\n# because ML FWAF must be independent from Signature WAF\n",
        "content": "SecAction \"id:410230,\\\n    phase:2,\\\n    pass,\\\n    t:none,\\\n    nolog,\\\n    setvar:'tx.inbound_anomaly_score_pl1=0'\"\n",
        "rule_id": "410",
        "sec_rule_id": "410230"
    },
    {
        "comment": "#\n# -=[ Default setup values ]=-\n#\n# The CRS checks the tx.crs_setup_version variable to ensure that the setup\n# file is included at the correct time. This detects situations where\n# necessary settings are not defined, for instance if the file\n# inclusion order is incorrect, or if the user has forgotten to\n# include the crs-setup.conf file.\n#\n# If you are upgrading from an earlier version of the CRS and you are\n# getting this error, please make a new copy of the setup template\n# crs-setup.conf.example to crs-setup.conf, and re-apply your policy\n# changes. There have been many changes in settings syntax from CRS2\n# to CRS3, so an old setup file may cause unwanted behavior.\n#\n# If you are not planning to use the crs-setup.conf template, you must\n# manually set the tx.crs_setup_version variable before including\n# the CRS rules/* files.\n#\n# The variable is a numerical representation of the CRS version number.\n# E.g., v3.0.0 is represented as 300.\n#\n",
        "content": "SecRule &TX:crs_setup_version \"@eq 0\" \\\n    \"id:901001,\\\n    phase:1,\\\n    deny,\\\n    status:500,\\\n    log,\\\n    auditlog,\\\n    msg:'ModSecurity Core Rule Set is deployed without configuration! Please copy the crs-setup.conf.example template to crs-setup.conf, and include the crs-setup.conf file in your webserver configuration before including the CRS rules. See the INSTALL file in the CRS directory for detailed instructions',\\\n    ver:'OWASP_CRS/3.4.0-dev',\\\n    severity:'CRITICAL'\"\n",
        "description": "Check if crs-set.conf was loaded",
        "rule_id": "901",
        "sec_rule_id": "901001"
    },
    {
        "comment": "# Default Inbound Anomaly Threshold Level (rule 900110 in crs-setup.conf)\n",
        "content": "SecRule &TX:inbound_anomaly_score_threshold \"@eq 0\" \\\n    \"id:901100,\\\n    phase:1,\\\n    pass,\\\n    nolog,\\\n    ver:'OWASP_CRS/3.4.0-dev',\\\n    setvar:'tx.inbound_anomaly_score_threshold=5'\"\n",
        "rule_id": "901",
        "sec_rule_id": "901100"
    },
    {
        "comment": "# Default Outbound Anomaly Threshold Level (rule 900110 in crs-setup.conf)\n",
        "content": "SecRule &TX:outbound_anomaly_score_threshold \"@eq 0\" \\\n    \"id:901110,\\\n    phase:1,\\\n    pass,\\\n    nolog,\\\n    ver:'OWASP_CRS/3.4.0-dev',\\\n    setvar:'tx.outbound_anomaly_score_threshold=4'\"\n",
        "rule_id": "901",
        "sec_rule_id": "901110"
    },
    {
        "comment": "# Default Reporting Level (rule 900115 in crs-setup.conf)\n",
        "content": "SecRule &TX:reporting_level \"@eq 0\" \\\n    \"id:901111,\\\n    phase:1,\\\n    pass,\\\n    nolog,\\\n    ver:'OWASP_CRS/3.4.0-dev',\\\n    setvar:'tx.reporting_level=4'\"\n",
        "rule_id": "901",
        "sec_rule_id": "901111"
    },
    {
        "comment": "# Default Early Blocking (rule 900120 in crs-setup.conf)\n",
        "content": "SecRule &TX:early_blocking \"@eq 0\" \\\n    \"id:901115,\\\n    phase:1,\\\n    pass,\\\n    nolog,\\\n    ver:'OWASP_CRS/3.4.0-dev',\\\n    setvar:'tx.early_blocking=0'\"\n",
        "rule_id": "901",
        "sec_rule_id": "901115"
    },
    {
        "comment": "# Default Blocking Paranoia Level (rule 900000 in crs-setup.conf)\n",
        "content": "SecRule &TX:blocking_paranoia_level \"@eq 0\" \\\n    \"id:901120,\\\n    phase:1,\\\n    pass,\\\n    nolog,\\\n    ver:'OWASP_CRS/3.4.0-dev',\\\n    setvar:'tx.blocking_paranoia_level=1'\"\n",
        "rule_id": "901",
        "sec_rule_id": "901120"
    },
    {
        "comment": "# Default Detection Paranoia Level (rule 900000 in crs-setup.conf)\n",
        "content": "SecRule &TX:detection_paranoia_level \"@eq 0\" \\\n    \"id:901125,\\\n    phase:1,\\\n    pass,\\\n    nolog,\\\n    ver:'OWASP_CRS/3.4.0-dev',\\\n    setvar:'tx.detection_paranoia_level=%{TX.blocking_paranoia_level}'\"\n",
        "rule_id": "901",
        "sec_rule_id": "901125"
    },
    {
        "comment": "# Default Sampling Percentage (rule 900400 in crs-setup.conf)\n",
        "content": "SecRule &TX:sampling_percentage \"@eq 0\" \\\n    \"id:901130,\\\n    phase:1,\\\n    pass,\\\n    nolog,\\\n    ver:'OWASP_CRS/3.4.0-dev',\\\n    setvar:'tx.sampling_percentage=100'\"\n",
        "rule_id": "901",
        "sec_rule_id": "901130"
    },
    {
        "comment": "# Default Anomaly Scores (rule 900100 in crs-setup.conf)\n",
        "content": "SecRule &TX:critical_anomaly_score \"@eq 0\" \\\n    \"id:901140,\\\n    phase:1,\\\n    pass,\\\n    nolog,\\\n    ver:'OWASP_CRS/3.4.0-dev',\\\n    setvar:'tx.critical_anomaly_score=5'\"\n",
        "rule_id": "901",
        "sec_rule_id": "901140"
    },
    {
        "comment": "",
        "content": "SecRule &TX:error_anomaly_score \"@eq 0\" \\\n    \"id:901141,\\\n    phase:1,\\\n    pass,\\\n    nolog,\\\n    ver:'OWASP_CRS/3.4.0-dev',\\\n    setvar:'tx.error_anomaly_score=4'\"\n",
        "rule_id": "901",
        "sec_rule_id": "901141"
    },
    {
        "comment": "",
        "content": "SecRule &TX:warning_anomaly_score \"@eq 0\" \\\n    \"id:901142,\\\n    phase:1,\\\n    pass,\\\n    nolog,\\\n    ver:'OWASP_CRS/3.4.0-dev',\\\n    setvar:'tx.warning_anomaly_score=3'\"\n",
        "rule_id": "901",
        "sec_rule_id": "901142"
    },
    {
        "comment": "",
        "content": "SecRule &TX:notice_anomaly_score \"@eq 0\" \\\n    \"id:901143,\\\n    phase:1,\\\n    pass,\\\n    nolog,\\\n    ver:'OWASP_CRS/3.4.0-dev',\\\n    setvar:'tx.notice_anomaly_score=2'\"\n",
        "rule_id": "901",
        "sec_rule_id": "901143"
    },
    {
        "comment": "# Default do_reput_block\n",
        "content": "SecRule &TX:do_reput_block \"@eq 0\" \\\n    \"id:901150,\\\n    phase:1,\\\n    pass,\\\n    nolog,\\\n    ver:'OWASP_CRS/3.4.0-dev',\\\n    setvar:'tx.do_reput_block=0'\"\n",
        "rule_id": "901",
        "sec_rule_id": "901150"
    },
    {
        "comment": "# Default block duration\n",
        "content": "SecRule &TX:reput_block_duration \"@eq 0\" \\\n    \"id:901152,\\\n    phase:1,\\\n    pass,\\\n    nolog,\\\n    ver:'OWASP_CRS/3.4.0-dev',\\\n    setvar:'tx.reput_block_duration=300'\"\n",
        "rule_id": "901",
        "sec_rule_id": "901152"
    },
    {
        "comment": "# Default HTTP policy: allowed_methods (rule 900200)\n",
        "content": "SecRule &TX:allowed_methods \"@eq 0\" \\\n    \"id:901160,\\\n    phase:1,\\\n    pass,\\\n    nolog,\\\n    ver:'OWASP_CRS/3.4.0-dev',\\\n    setvar:'tx.allowed_methods=GET HEAD POST OPTIONS'\"\n",
        "rule_id": "901",
        "sec_rule_id": "901160"
    },
    {
        "comment": "# Default HTTP policy: allowed_request_content_type (rule 900220)\n",
        "content": "SecRule &TX:allowed_request_content_type \"@eq 0\" \\\n    \"id:901162,\\\n    phase:1,\\\n    pass,\\\n    nolog,\\\n    ver:'OWASP_CRS/3.4.0-dev',\\\n    setvar:'tx.allowed_request_content_type=|application/x-www-form-urlencoded| |multipart/form-data| |multipart/related| |text/xml| |application/xml| |application/soap+xml| |application/x-amf| |application/json| |application/cloudevents+json| |application/cloudevents-batch+json| |application/octet-stream| |application/csp-report| |application/xss-auditor-report| |text/plain|'\"\n",
        "rule_id": "901",
        "sec_rule_id": "901162"
    },
    {
        "comment": "# Default HTTP policy: allowed_request_content_type_charset (rule 900270)\n",
        "content": "SecRule &TX:allowed_request_content_type_charset \"@eq 0\" \\\n    \"id:901168,\\\n    phase:1,\\\n    pass,\\\n    nolog,\\\n    ver:'OWASP_CRS/3.4.0-dev',\\\n    setvar:'tx.allowed_request_content_type_charset=|utf-8| |iso-8859-1| |iso-8859-15| |windows-1252|'\"\n",
        "rule_id": "901",
        "sec_rule_id": "901168"
    },
    {
        "comment": "# Default HTTP policy: allowed_http_versions (rule 900230)\n",
        "content": "SecRule &TX:allowed_http_versions \"@eq 0\" \\\n    \"id:901163,\\\n    phase:1,\\\n    pass,\\\n    nolog,\\\n    ver:'OWASP_CRS/3.4.0-dev',\\\n    setvar:'tx.allowed_http_versions=HTTP/1.0 HTTP/1.1 HTTP/2 HTTP/2.0'\"\n",
        "rule_id": "901",
        "sec_rule_id": "901163"
    },
    {
        "comment": "# Default HTTP policy: restricted_extensions (rule 900240)\n",
        "content": "SecRule &TX:restricted_extensions \"@eq 0\" \\\n    \"id:901164,\\\n    phase:1,\\\n    pass,\\\n    nolog,\\\n    ver:'OWASP_CRS/3.4.0-dev',\\\n    setvar:'tx.restricted_extensions=.asa/ .asax/ .ascx/ .backup/ .bak/ .bat/ .cdx/ .cer/ .cfg/ .cmd/ .com/ .config/ .conf/ .cs/ .csproj/ .csr/ .dat/ .db/ .dbf/ .dll/ .dos/ .htr/ .htw/ .ida/ .idc/ .idq/ .inc/ .ini/ .key/ .licx/ .lnk/ .log/ .mdb/ .old/ .pass/ .pdb/ .pol/ .printer/ .pwd/ .rdb/ .resources/ .resx/ .sql/ .swp/ .sys/ .vb/ .vbs/ .vbproj/ .vsdisco/ .webinfo/ .xsd/ .xsx/'\"\n",
        "rule_id": "901",
        "sec_rule_id": "901164"
    },
    {
        "comment": "# Default HTTP policy: restricted_headers (rule 900250)\n",
        "content": "SecRule &TX:restricted_headers \"@eq 0\" \\\n    \"id:901165,\\\n    phase:1,\\\n    pass,\\\n    nolog,\\\n    ver:'OWASP_CRS/3.4.0-dev',\\\n    setvar:'tx.restricted_headers=/proxy/ /lock-token/ /content-range/ /if/ /user-agentt/'\"\n",
        "rule_id": "901",
        "sec_rule_id": "901165"
    },
    {
        "comment": "# Default enforcing of body processor URLENCODED\n",
        "content": "SecRule &TX:enforce_bodyproc_urlencoded \"@eq 0\" \\\n    \"id:901167,\\\n    phase:1,\\\n    pass,\\\n    nolog,\\\n    ver:'OWASP_CRS/3.4.0-dev',\\\n    setvar:'tx.enforce_bodyproc_urlencoded=0'\"\n",
        "rule_id": "901",
        "sec_rule_id": "901167"
    },
    {
        "comment": "# Initialize anomaly scoring variables.\n# All _score variables start at 0, and are incremented by the various rules\n# upon detection of a possible attack.\n# sql_error_match is used for shortcutting rules for performance reasons.\n",
        "content": "SecAction \\\n    \"id:901200,\\\n    phase:1,\\\n    pass,\\\n    t:none,\\\n    nolog,\\\n    ver:'OWASP_CRS/3.4.0-dev',\\\n    setvar:'tx.blocking_inbound_anomaly_score=0',\\\n    setvar:'tx.detection_inbound_anomaly_score=0',\\\n    setvar:'tx.inbound_anomaly_score_pl1=0',\\\n    setvar:'tx.inbound_anomaly_score_pl2=0',\\\n    setvar:'tx.inbound_anomaly_score_pl3=0',\\\n    setvar:'tx.inbound_anomaly_score_pl4=0',\\\n    setvar:'tx.sql_injection_score=0',\\\n    setvar:'tx.xss_score=0',\\\n    setvar:'tx.rfi_score=0',\\\n    setvar:'tx.lfi_score=0',\\\n    setvar:'tx.rce_score=0',\\\n    setvar:'tx.php_injection_score=0',\\\n    setvar:'tx.http_violation_score=0',\\\n    setvar:'tx.session_fixation_score=0',\\\n    setvar:'tx.blocking_outbound_anomaly_score=0',\\\n    setvar:'tx.detection_outbound_anomaly_score=0',\\\n    setvar:'tx.outbound_anomaly_score_pl1=0',\\\n    setvar:'tx.outbound_anomaly_score_pl2=0',\\\n    setvar:'tx.outbound_anomaly_score_pl3=0',\\\n    setvar:'tx.outbound_anomaly_score_pl4=0',\\\n    setvar:'tx.sql_error_match=0'\"\n",
        "rule_id": "901",
        "sec_rule_id": "901200"
    },
    {
        "comment": "#\n# -=[ Initialize collections ]=-\n#\n# Create both Global and IP collections for rules to use.\n# There are some CRS rules that assume that these two collections\n# have already been initiated.\n#\n",
        "content": "SecRule REQUEST_HEADERS:User-Agent \"@rx ^.*$\" \\\n    \"id:901318,\\\n    phase:1,\\\n    pass,\\\n    t:none,t:sha1,t:hexEncode,\\\n    nolog,\\\n    ver:'OWASP_CRS/3.4.0-dev',\\\n    setvar:'tx.ua_hash=%{MATCHED_VAR}'\"\n",
        "rule_id": "901",
        "sec_rule_id": "901318"
    },
    {
        "comment": "",
        "content": "SecAction \\\n    \"id:901321,\\\n    phase:1,\\\n    pass,\\\n    t:none,\\\n    nolog,\\\n    ver:'OWASP_CRS/3.4.0-dev',\\\n    initcol:global=global,\\\n    initcol:ip=%{remote_addr}_%{tx.ua_hash},\\\n    setvar:'tx.real_ip=%{remote_addr}'\"\n",
        "rule_id": "901",
        "sec_rule_id": "901321"
    },
    {
        "comment": "# Force body variable\n",
        "content": "SecRule REQBODY_PROCESSOR \"!@rx (?:URLENCODED|MULTIPART|XML|JSON)\" \\\n    \"id:901340,\\\n    phase:1,\\\n    pass,\\\n    nolog,\\\n    noauditlog,\\\n    msg:'Enabling body inspection',\\\n    tag:'paranoia-level/1',\\\n    ctl:forceRequestBodyVariable=On,\\\n    ver:'OWASP_CRS/3.4.0-dev'\"\n",
        "paranoia_level": "1",
        "rule_id": "901",
        "sec_rule_id": "901340",
        "tags": [
            "paranoia-level/1"
        ]
    },
    {
        "comment": "# Force body processor URLENCODED\n",
        "content": "SecRule TX:enforce_bodyproc_urlencoded \"@eq 1\" \\\n    \"id:901350,\\\n    phase:1,\\\n    pass,\\\n    t:none,t:urlDecodeUni,\\\n    nolog,\\\n    noauditlog,\\\n    msg:'Enabling forced body inspection for ASCII content',\\\n    ver:'OWASP_CRS/3.4.0-dev',\\\n    chain\"\n    SecRule REQBODY_PROCESSOR \"!@rx (?:URLENCODED|MULTIPART|XML|JSON)\" \\\n        \"ctl:requestBodyProcessor=URLENCODED\"\n",
        "rule_id": "901",
        "sec_rule_id": "901350"
    },
    {
        "comment": "#\n# Generate the pseudo random number\n#\n# ATTENTION: This is no cryptographically secure random number. It's just\n# a cheap way to get some random number suitable for sampling.\n#\n# We take the entropy contained in the UNIQUE_ID. We hash that variable and\n# take the first integer numbers out of it. Theoretically, it is possible\n# but highly improbable that there are no integers in a hexEncoded sha1 hash.\n# In the very rare event that two integers are not matched (due to only being\n# a-f in all, or all but one positions) 901450 will not be triggered.\n# Leading zeros are not removed from the two-digit random number, and are\n# handled gracefullly by 901450\n",
        "content": "SecRule TX:sampling_percentage \"@eq 100\" \\\n    \"id:901400,\\\n    phase:1,\\\n    pass,\\\n    nolog,\\\n    ver:'OWASP_CRS/3.4.0-dev',\\\n    skipAfter:END-SAMPLING\"\n",
        "rule_id": "901",
        "sec_rule_id": "901400"
    },
    {
        "comment": "",
        "content": "SecRule UNIQUE_ID \"@rx ^[a-f]*([0-9])[a-f]*([0-9])\" \\\n    \"id:901410,\\\n    phase:1,\\\n    pass,\\\n    capture,\\\n    t:sha1,t:hexEncode,\\\n    nolog,\\\n    ver:'OWASP_CRS/3.4.0-dev',\\\n    setvar:'TX.sampling_rnd100=%{TX.1}%{TX.2}'\"\n",
        "rule_id": "901",
        "sec_rule_id": "901410"
    },
    {
        "comment": "#\n# Sampling decision\n#\n# If a request is allowed to pass without being checked by the CRS, there is no\n# entry in the audit log (for performance reasons), but an error log entry is\n# being written.  If you want to disable the error log entry, then issue the\n# following directive somewhere after the inclusion of the CRS\n# (E.g., RESPONSE-999-EXCEPTIONS.conf).\n#\n# SecRuleUpdateActionById 901450 \"nolog\"\n#\n",
        "content": "SecRule TX:sampling_rnd100 \"!@lt %{tx.sampling_percentage}\" \\\n    \"id:901450,\\\n    phase:1,\\\n    pass,\\\n    log,\\\n    noauditlog,\\\n    msg:'Sampling: Disable the rule engine based on sampling_percentage %{TX.sampling_percentage} and random number %{TX.sampling_rnd100}',\\\n    ctl:ruleRemoveByTag=OWASP_CRS,\\\n    ver:'OWASP_CRS/3.4.0-dev'\"\n",
        "description": "Sampling: Disable the rule engine based on sampling_percentage ",
        "rule_id": "901",
        "sec_rule_id": "901450"
    },
    {
        "comment": "# Make sure detection paranoia level is not lower than paranoia level\n",
        "content": "SecRule TX:detection_paranoia_level \"@lt %{tx.blocking_paranoia_level}\" \\\n    \"id:901500,\\\n    phase:1,\\\n    deny,\\\n    status:500,\\\n    t:none,\\\n    log,\\\n    msg:'Detection paranoia level configured is lower than the paranoia level itself. This is illegal. Blocking request. Aborting',\\\n    ver:'OWASP_CRS/3.4.0-dev'\"\n",
        "rule_id": "901",
        "sec_rule_id": "901500"
    },
    {
        "comment": "# This file is used as an exception mechanism to remove common false positives\n# that may be encountered.\n#\n# Exception for Apache SSL pinger\n#\n",
        "content": "SecRule REQUEST_LINE \"@streq GET /\" \\\n    \"id:905100,\\\n    phase:1,\\\n    pass,\\\n    t:none,\\\n    nolog,\\\n    tag:'application-multi',\\\n    tag:'language-multi',\\\n    tag:'platform-apache',\\\n    tag:'attack-generic',\\\n    ver:'OWASP_CRS/3.4.0-dev',\\\n    chain\"\n    SecRule REMOTE_ADDR \"@ipMatch 127.0.0.1,::1\" \\\n        \"t:none,\\\n        ctl:ruleRemoveByTag=OWASP_CRS,\\\n        ctl:auditEngine=Off\"\n",
        "description": "Common Exeptions example rule",
        "rule_id": "905",
        "sec_rule_id": "905100",
        "tags": [
            "application-multi",
            "language-multi",
            "platform-apache",
            "attack-generic"
        ]
    },
    {
        "comment": "#\n# Exception for Apache internal dummy connection\n#\n",
        "content": "SecRule REMOTE_ADDR \"@ipMatch 127.0.0.1,::1\" \\\n    \"id:905110,\\\n    phase:1,\\\n    pass,\\\n    t:none,\\\n    nolog,\\\n    tag:'application-multi',\\\n    tag:'language-multi',\\\n    tag:'platform-apache',\\\n    tag:'attack-generic',\\\n    ver:'OWASP_CRS/3.4.0-dev',\\\n    chain\"\n    SecRule REQUEST_HEADERS:User-Agent \"@endsWith (internal dummy connection)\" \\\n        \"t:none,\\\n        chain\"\n        SecRule REQUEST_LINE \"@rx ^(?:GET /|OPTIONS \\*) HTTP/[12]\\.[01]$\" \\\n            \"t:none,\\\n            ctl:ruleRemoveByTag=OWASP_CRS,\\\n            ctl:auditEngine=Off\"\n",
        "description": "Common Exeptions example rule",
        "rule_id": "905",
        "sec_rule_id": "905110",
        "tags": [
            "application-multi",
            "language-multi",
            "platform-apache",
            "attack-generic"
        ]
    },
    {
        "comment": "#\n# -= Paranoia Level 0 (empty) =- (apply unconditionally)\n#\n",
        "content": "SecRule TX:DETECTION_PARANOIA_LEVEL \"@lt 1\" \"id:911011,phase:1,pass,nolog,skipAfter:END-REQUEST-911-METHOD-ENFORCEMENT\"\n",
        "rule_id": "911",
        "sec_rule_id": "911011"
    },
    {
        "comment": "",
        "content": "SecRule TX:DETECTION_PARANOIA_LEVEL \"@lt 1\" \"id:911012,phase:2,pass,nolog,skipAfter:END-REQUEST-911-METHOD-ENFORCEMENT\"\n",
        "rule_id": "911",
        "sec_rule_id": "911012"
    },
    {
        "comment": "#\n# -=[ Allowed Request Methods ]=-\n#\n# tx.allowed_methods is defined in the crs-setup.conf file\n#\n",
        "content": "SecRule REQUEST_METHOD \"!@within %{tx.allowed_methods}\" \\\n    \"id:911100,\\\n    phase:1,\\\n    block,\\\n    msg:'Method is not allowed by policy',\\\n    logdata:'%{MATCHED_VAR}',\\\n    tag:'application-multi',\\\n    tag:'language-multi',\\\n    tag:'platform-multi',\\\n    tag:'attack-generic',\\\n    tag:'paranoia-level/1',\\\n    tag:'OWASP_CRS',\\\n    tag:'capec/1000/210/272/220/274',\\\n    tag:'PCI/12.1',\\\n    ver:'OWASP_CRS/3.4.0-dev',\\\n    severity:'CRITICAL',\\\n    setvar:'tx.inbound_anomaly_score_pl1=+%{tx.critical_anomaly_score}'\"\n",
        "description": "Method is not allowed by policy",
        "paranoia_level": "1",
        "rule_id": "911",
        "sec_rule_id": "911100",
        "severity": "CRITICAL",
        "tags": [
            "application-multi",
            "language-multi",
            "platform-multi",
            "attack-generic",
            "paranoia-level/1",
            "OWASP_CRS",
            "capec/1000/210/272/220/274",
            "PCI/12.1"
        ]
    },
    {
        "comment": "",
        "content": "SecRule TX:DETECTION_PARANOIA_LEVEL \"@lt 2\" \"id:911013,phase:1,pass,nolog,skipAfter:END-REQUEST-911-METHOD-ENFORCEMENT\"\n",
        "rule_id": "911",
        "sec_rule_id": "911013"
    },
    {
        "comment": "",
        "content": "SecRule TX:DETECTION_PARANOIA_LEVEL \"@lt 2\" \"id:911014,phase:2,pass,nolog,skipAfter:END-REQUEST-911-METHOD-ENFORCEMENT\"\n",
        "rule_id": "911",
        "sec_rule_id": "911014"
    },
    {
        "comment": "#\n# -= Paranoia Level 2 =- (apply only when tx.detection_paranoia_level is sufficiently high: 2 or higher)\n#\n",
        "content": "SecRule TX:DETECTION_PARANOIA_LEVEL \"@lt 3\" \"id:911015,phase:1,pass,nolog,skipAfter:END-REQUEST-911-METHOD-ENFORCEMENT\"\n",
        "rule_id": "911",
        "sec_rule_id": "911015"
    },
    {
        "comment": "",
        "content": "SecRule TX:DETECTION_PARANOIA_LEVEL \"@lt 3\" \"id:911016,phase:2,pass,nolog,skipAfter:END-REQUEST-911-METHOD-ENFORCEMENT\"\n",
        "rule_id": "911",
        "sec_rule_id": "911016"
    },
    {
        "comment": "#\n# -= Paranoia Level 3 =- (apply only when tx.detection_paranoia_level is sufficiently high: 3 or higher)\n#\n",
        "content": "SecRule TX:DETECTION_PARANOIA_LEVEL \"@lt 4\" \"id:911017,phase:1,pass,nolog,skipAfter:END-REQUEST-911-METHOD-ENFORCEMENT\"\n",
        "rule_id": "911",
        "sec_rule_id": "911017"
    },
    {
        "comment": "",
        "content": "SecRule TX:DETECTION_PARANOIA_LEVEL \"@lt 4\" \"id:911018,phase:2,pass,nolog,skipAfter:END-REQUEST-911-METHOD-ENFORCEMENT\"\n",
        "rule_id": "911",
        "sec_rule_id": "911018"
    },
    {
        "comment": "#\n# -= Paranoia Level 0 (empty) =- (apply unconditionally)\n#\n",
        "content": "SecRule TX:DETECTION_PARANOIA_LEVEL \"@lt 1\" \"id:913011,phase:1,pass,nolog,skipAfter:END-REQUEST-913-SCANNER-DETECTION\"\n",
        "rule_id": "913",
        "sec_rule_id": "913011"
    },
    {
        "comment": "",
        "content": "SecRule TX:DETECTION_PARANOIA_LEVEL \"@lt 1\" \"id:913012,phase:2,pass,nolog,skipAfter:END-REQUEST-913-SCANNER-DETECTION\"\n",
        "rule_id": "913",
        "sec_rule_id": "913012"
    },
    {
        "comment": "#\n# -=[ Vulnerability Scanner Checks ]=-\n#\n# These rules inspect the default User-Agent and Header values sent by\n# various commercial and open source vuln scanners.\n#\n# The following rules contain User-Agent lists:\n# 913100 - security scanners (data file scanners-user-agents.data)\n# 913101 - scripting/generic HTTP clients (data file scripting-user-agents.data)\n# 913102 - web crawlers/bots (data file crawlers-user-agents.data)\n#\n# Chained rule is allow listing:\n# YUM package manager of CentOS / Fedore: User-Agent: urlgrabber/3.10 yum/3.4.3\n# eCairn service: User-Agent: mozilla/5.0 ecairn-grabber/1.0 (+http://ecairn.com/grabber)\n",
        "content": "SecRule REQUEST_HEADERS:User-Agent \"@pmFromFile scanners-user-agents.data\" \\\n    \"id:913100,\\\n    phase:1,\\\n    block,\\\n    capture,\\\n    t:none,\\\n    msg:'Found User-Agent associated with security scanner',\\\n    logdata:'Matched Data: %{TX.0} found within %{MATCHED_VAR_NAME}: %{MATCHED_VAR}',\\\n    tag:'application-multi',\\\n    tag:'language-multi',\\\n    tag:'platform-multi',\\\n    tag:'attack-reputation-scanner',\\\n    tag:'paranoia-level/1',\\\n    tag:'OWASP_CRS',\\\n    tag:'capec/1000/118/224/541/310',\\\n    tag:'PCI/6.5.10',\\\n    ver:'OWASP_CRS/3.4.0-dev',\\\n    severity:'CRITICAL',\\\n    chain\"\n    SecRule MATCHED_VARS \"!@rx ^(?:urlgrabber/[0-9\\.]+ yum/[0-9\\.]+|mozilla/[0-9\\.]+ ecairn-grabber/[0-9\\.]+ \\(\\+http://ecairn.com/grabber\\))$\" \\\n        \"setvar:'tx.inbound_anomaly_score_pl1=+%{tx.critical_anomaly_score}'\"\n",
        "description": "Found User-Agent associated with security scanner",
        "paranoia_level": "1",
        "rule_id": "913",
        "sec_rule_id": "913100",
        "severity": "CRITICAL",
        "tags": [
            "application-multi",
            "language-multi",
            "platform-multi",
            "attack-reputation-scanner",
            "paranoia-level/1",
            "OWASP_CRS",
            "capec/1000/118/224/541/310",
            "PCI/6.5.10"
        ]
    },
    {
        "comment": "",
        "content": "SecRule REQUEST_HEADERS_NAMES|REQUEST_HEADERS \"@pmFromFile scanners-headers.data\" \\\n    \"id:913110,\\\n    phase:1,\\\n    block,\\\n    capture,\\\n    t:none,\\\n    msg:'Found request header associated with security scanner',\\\n    logdata:'Matched Data: %{TX.0} found within %{MATCHED_VAR_NAME}: %{MATCHED_VAR}',\\\n    tag:'application-multi',\\\n    tag:'language-multi',\\\n    tag:'platform-multi',\\\n    tag:'attack-reputation-scanner',\\\n    tag:'paranoia-level/1',\\\n    tag:'OWASP_CRS',\\\n    tag:'capec/1000/118/224/541/310',\\\n    tag:'PCI/6.5.10',\\\n    ver:'OWASP_CRS/3.4.0-dev',\\\n    severity:'CRITICAL',\\\n    setvar:'tx.inbound_anomaly_score_pl1=+%{tx.critical_anomaly_score}'\"\n",
        "description": "Found request header associated with security scanner",
        "paranoia_level": "1",
        "rule_id": "913",
        "sec_rule_id": "913110",
        "severity": "CRITICAL",
        "tags": [
            "application-multi",
            "language-multi",
            "platform-multi",
            "attack-reputation-scanner",
            "paranoia-level/1",
            "OWASP_CRS",
            "capec/1000/118/224/541/310",
            "PCI/6.5.10"
        ]
    },
    {
        "comment": "",
        "content": "SecRule REQUEST_FILENAME|ARGS \"@pmFromFile scanners-urls.data\" \\\n    \"id:913120,\\\n    phase:2,\\\n    block,\\\n    capture,\\\n    t:none,\\\n    msg:'Found request filename/argument associated with security scanner',\\\n    logdata:'Matched Data: %{TX.0} found within %{MATCHED_VAR_NAME}: %{MATCHED_VAR}',\\\n    tag:'application-multi',\\\n    tag:'language-multi',\\\n    tag:'platform-multi',\\\n    tag:'attack-reputation-scanner',\\\n    tag:'paranoia-level/1',\\\n    tag:'OWASP_CRS',\\\n    tag:'capec/1000/118/224/541/310',\\\n    tag:'PCI/6.5.10',\\\n    ver:'OWASP_CRS/3.4.0-dev',\\\n    severity:'CRITICAL',\\\n    setvar:'tx.inbound_anomaly_score_pl1=+%{tx.critical_anomaly_score}'\"\n",
        "description": "Found request filename/argument associated with security scanner",
        "paranoia_level": "1",
        "rule_id": "913",
        "sec_rule_id": "913120",
        "severity": "CRITICAL",
        "tags": [
            "application-multi",
            "language-multi",
            "platform-multi",
            "attack-reputation-scanner",
            "paranoia-level/1",
            "OWASP_CRS",
            "capec/1000/118/224/541/310",
            "PCI/6.5.10"
        ]
    },
    {
        "comment": "",
        "content": "SecRule TX:DETECTION_PARANOIA_LEVEL \"@lt 2\" \"id:913013,phase:1,pass,nolog,skipAfter:END-REQUEST-913-SCANNER-DETECTION\"\n",
        "rule_id": "913",
        "sec_rule_id": "913013"
    },
    {
        "comment": "",
        "content": "SecRule TX:DETECTION_PARANOIA_LEVEL \"@lt 2\" \"id:913014,phase:2,pass,nolog,skipAfter:END-REQUEST-913-SCANNER-DETECTION\"\n",
        "rule_id": "913",
        "sec_rule_id": "913014"
    },
    {
        "comment": "#\n# -=[ Scripting/Generic User-Agents ]=-\n#\n# This rule detects user-agents associated with various HTTP client libraries\n# and scripting languages. Detection suggests attempted access by some\n# automated tool.\n#\n# This rule is a sibling of rule 913100.\n#\n",
        "content": "SecRule REQUEST_HEADERS:User-Agent \"@pmFromFile scripting-user-agents.data\" \\\n    \"id:913101,\\\n    phase:1,\\\n    block,\\\n    capture,\\\n    t:none,\\\n    msg:'Found User-Agent associated with scripting/generic HTTP client',\\\n    logdata:'Matched Data: %{TX.0} found within %{MATCHED_VAR_NAME}: %{MATCHED_VAR}',\\\n    tag:'application-multi',\\\n    tag:'language-multi',\\\n    tag:'platform-multi',\\\n    tag:'attack-reputation-scripting',\\\n    tag:'OWASP_CRS',\\\n    tag:'capec/1000/118/224/541/310',\\\n    tag:'PCI/6.5.10',\\\n    tag:'paranoia-level/2',\\\n    ver:'OWASP_CRS/3.4.0-dev',\\\n    severity:'CRITICAL',\\\n    setvar:'tx.inbound_anomaly_score_pl2=+%{tx.critical_anomaly_score}'\"\n",
        "description": "Found User-Agent associated with scripting/generic HTTP client",
        "paranoia_level": "2",
        "rule_id": "913",
        "sec_rule_id": "913101",
        "severity": "CRITICAL",
        "tags": [
            "application-multi",
            "language-multi",
            "platform-multi",
            "attack-reputation-scripting",
            "OWASP_CRS",
            "capec/1000/118/224/541/310",
            "PCI/6.5.10",
            "paranoia-level/2"
        ]
    },
    {
        "comment": "#\n# -=[ Crawler User-Agents ]=-\n#\n# This rule detects user-agents associated with various crawlers, SEO tools,\n# and bots, which have been reported to potentially misbehave.\n# These crawlers can have legitimate uses when used with authorization.\n#\n# This rule is a sibling of rule 913100.\n#\n",
        "content": "SecRule REQUEST_HEADERS:User-Agent \"@pmFromFile crawlers-user-agents.data\" \\\n    \"id:913102,\\\n    phase:1,\\\n    block,\\\n    capture,\\\n    t:none,\\\n    msg:'Found User-Agent associated with web crawler/bot',\\\n    logdata:'Matched Data: %{TX.0} found within %{MATCHED_VAR_NAME}: %{MATCHED_VAR}',\\\n    tag:'application-multi',\\\n    tag:'language-multi',\\\n    tag:'platform-multi',\\\n    tag:'attack-reputation-crawler',\\\n    tag:'OWASP_CRS',\\\n    tag:'capec/1000/118/116/150',\\\n    tag:'PCI/6.5.10',\\\n    tag:'paranoia-level/2',\\\n    ver:'OWASP_CRS/3.4.0-dev',\\\n    severity:'CRITICAL',\\\n    setvar:'tx.inbound_anomaly_score_pl2=+%{tx.critical_anomaly_score}'\"\n",
        "description": "Found User-Agent associated with web crawler/bot",
        "paranoia_level": "2",
        "rule_id": "913",
        "sec_rule_id": "913102",
        "severity": "CRITICAL",
        "tags": [
            "application-multi",
            "language-multi",
            "platform-multi",
            "attack-reputation-crawler",
            "OWASP_CRS",
            "capec/1000/118/116/150",
            "PCI/6.5.10",
            "paranoia-level/2"
        ]
    },
    {
        "comment": "",
        "content": "SecRule TX:DETECTION_PARANOIA_LEVEL \"@lt 3\" \"id:913015,phase:1,pass,nolog,skipAfter:END-REQUEST-913-SCANNER-DETECTION\"\n",
        "rule_id": "913",
        "sec_rule_id": "913015"
    },
    {
        "comment": "",
        "content": "SecRule TX:DETECTION_PARANOIA_LEVEL \"@lt 3\" \"id:913016,phase:2,pass,nolog,skipAfter:END-REQUEST-913-SCANNER-DETECTION\"\n",
        "rule_id": "913",
        "sec_rule_id": "913016"
    },
    {
        "comment": "#\n# -= Paranoia Level 3 =- (apply only when tx.detection_paranoia_level is sufficiently high: 3 or higher)\n#\n",
        "content": "SecRule TX:DETECTION_PARANOIA_LEVEL \"@lt 4\" \"id:913017,phase:1,pass,nolog,skipAfter:END-REQUEST-913-SCANNER-DETECTION\"\n",
        "rule_id": "913",
        "sec_rule_id": "913017"
    },
    {
        "comment": "",
        "content": "SecRule TX:DETECTION_PARANOIA_LEVEL \"@lt 4\" \"id:913018,phase:2,pass,nolog,skipAfter:END-REQUEST-913-SCANNER-DETECTION\"\n",
        "rule_id": "913",
        "sec_rule_id": "913018"
    },
    {
        "comment": "#\n# -= Paranoia Level 0 (empty) =- (apply unconditionally)\n#\n",
        "content": "SecRule TX:DETECTION_PARANOIA_LEVEL \"@lt 1\" \"id:920011,phase:1,pass,nolog,skipAfter:END-REQUEST-920-PROTOCOL-ENFORCEMENT\"\n",
        "rule_id": "920",
        "sec_rule_id": "920011"
    },
    {
        "comment": "",
        "content": "SecRule TX:DETECTION_PARANOIA_LEVEL \"@lt 1\" \"id:920012,phase:2,pass,nolog,skipAfter:END-REQUEST-920-PROTOCOL-ENFORCEMENT\"\n",
        "rule_id": "920",
        "sec_rule_id": "920012"
    },
    {
        "comment": "#\n# Validate request line against the format specified in the HTTP RFC\n#\n# -=[ Rule Logic ]=-\n#\n# Uses rule negation against the regex for positive security.   The regex specifies the proper\n# construction of URI request lines such as:\n#\n#   \"http:\" \"//\" host [ \":\" port ] [ abs_path [ \"?\" query ]]\n#\n# It also outlines proper construction for CONNECT, OPTIONS and GET requests.\n#\n# Regular expression generated from util/regexp-assemble/data/920100.data.\n# To update the regular expression run the following shell script\n# (consult util/regexp-assemble/README.md for details):\n#   util/regexp-assemble/regexp-assemble.py update 920100\n#\n# -=[ References ]=-\n# https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.2.1\n# http://capec.mitre.org/data/definitions/272.html\n#\n",
        "content": "SecRule REQUEST_LINE \"!@rx (?i)^(?:(?:[a-z]{3,10}\\s+(?:\\w{3,7}?://[\\w\\-\\./]*(?::\\d+)?)?\\/[^?#]*(?:\\?[^#\\s]*)?(?:#[\\S]*)?|connect (?:(?:\\d{1,3}\\.){3}\\d{1,3}\\.?(?::\\d+)?|[\\w\\-\\./]+:\\d+)|options \\*)\\s+[\\w\\./]+|get \\/[^?#]*(?:\\?[^#\\s]*)?(?:#[\\S]*)?)$\" \\\n    \"id:920100,\\\n    phase:1,\\\n    block,\\\n    t:none,\\\n    msg:'Invalid HTTP Request Line',\\\n    logdata:'%{request_line}',\\\n    tag:'application-multi',\\\n    tag:'language-multi',\\\n    tag:'platform-multi',\\\n    tag:'attack-protocol',\\\n    tag:'paranoia-level/1',\\\n    tag:'OWASP_CRS',\\\n    tag:'capec/1000/210/272',\\\n    ver:'OWASP_CRS/3.4.0-dev',\\\n    severity:'WARNING',\\\n    setvar:'tx.inbound_anomaly_score_pl1=+%{tx.warning_anomaly_score}'\"\n",
        "description": "Invalid HTTP Request Line",
        "paranoia_level": "1",
        "rule_id": "920",
        "sec_rule_id": "920100",
        "severity": "WARNING",
        "tags": [
            "application-multi",
            "language-multi",
            "platform-multi",
            "attack-protocol",
            "paranoia-level/1",
            "OWASP_CRS",
            "capec/1000/210/272"
        ]
    },
    {
        "comment": "#\n# Identify multipart/form-data name evasion attempts\n#\n# There are possible impedance mismatches between how\n# ModSecurity interprets multipart file names and how\n# a destination app server such as PHP might parse the\n# Content-Disposition data:\n#\n#            filename-parm := \"filename\" \"=\" value\n#\n# -=[ Rule Logic ]=-\n# These rules check for the existence of the ' \" ; = meta-characters in\n# either the \"name\" (FILES) and \"filename\" (FILES_NAMES) variables.\n# HTML entities may lead to false positives, which is why\n# frequently used ones, such as \"&auml;\", are allowed at PL1.\n#\n# -=[ Targets, characters and html entities ]=-\n#\n# 920120 + 920122: PL1 : FILES_NAMES, FILES\n#    Disallow ['\\\";=], except for frequently used HTML entities (see 920120.data).\n#\n# 920121: PL2 : FILES_NAMES, FILES\n#    Disallow ['\\\";=]\n#\n# -=[ References ]=-\n# https://www.owasp.org/index.php/ModSecurity_CRS_RuleID-96000\n# http://www.ietf.org/rfc/rfc2183.txt\n#\n# This rule used to use negative look-behind.\n# See https://github.com/coreruleset/coreruleset/wiki/Technical-Decisions-and-Best-Practices#avoiding-negative-look-behind-in-regular-expressions\n# for an explanation of why it now uses `!@rx` instead to avoid look-around.\n#\n# Regular expression generated from util/regexp-assemble/data/920120.data.\n# To update the regular expression run the following shell script\n# (consult util/regexp-assemble/README.md for details):\n#   util/regexp-assemble/regexp-assemble.py update 920120\n#\n",
        "content": "SecRule FILES|FILES_NAMES \"!@rx (?i)^(?:&(?:(?:[aeiouclnrszg]acut|[aeiou]grav|[anoi]tild)e|(?:[cgklnrst]cedi|[aeiouy]um)l|[aeioucghjswy]circ|[cdelnrstz]caron|a(?:pos|mp)|[au]ring|oslash|nbsp);|[^'\\\";=])*$\" \\\n    \"id:920120,\\\n    phase:2,\\\n    block,\\\n    t:none,t:urlDecodeUni,\\\n    msg:'Attempted multipart/form-data bypass',\\\n    logdata:'%{MATCHED_VAR}',\\\n    tag:'application-multi',\\\n    tag:'language-multi',\\\n    tag:'platform-multi',\\\n    tag:'attack-protocol',\\\n    tag:'paranoia-level/1',\\\n    tag:'OWASP_CRS',\\\n    tag:'capec/1000/210/272',\\\n    ver:'OWASP_CRS/3.4.0-dev',\\\n    severity:'CRITICAL',\\\n    setvar:'tx.inbound_anomaly_score_pl1=+%{tx.critical_anomaly_score}'\"\n",
        "description": "Attempted multipart/form-data bypass",
        "paranoia_level": "1",
        "rule_id": "920",
        "sec_rule_id": "920120",
        "severity": "CRITICAL",
        "tags": [
            "application-multi",
            "language-multi",
            "platform-multi",
            "attack-protocol",
            "paranoia-level/1",
            "OWASP_CRS",
            "capec/1000/210/272"
        ]
    },
    {
        "comment": "#\n# Accept only digits in content length\n#\n# -=[ Rule Logic ]=-\n# This rule uses ModSecurity's rule negation against the regex meaning if the Content-Length header\n# is NOT all digits, then it will match.\n#\n# -=[ References ]=-\n# https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.13\n#\n",
        "content": "SecRule REQUEST_HEADERS:Content-Length \"!@rx ^\\d+$\" \\\n    \"id:920160,\\\n    phase:1,\\\n    block,\\\n    t:none,\\\n    msg:'Content-Length HTTP header is not numeric',\\\n    logdata:'%{MATCHED_VAR}',\\\n    tag:'application-multi',\\\n    tag:'language-multi',\\\n    tag:'platform-multi',\\\n    tag:'attack-protocol',\\\n    tag:'paranoia-level/1',\\\n    tag:'OWASP_CRS',\\\n    tag:'capec/1000/210/272',\\\n    ver:'OWASP_CRS/3.4.0-dev',\\\n    severity:'CRITICAL',\\\n    setvar:'tx.inbound_anomaly_score_pl1=+%{tx.critical_anomaly_score}'\"\n",
        "description": "Content-Length HTTP header is not numeric.",
        "paranoia_level": "1",
        "rule_id": "920",
        "sec_rule_id": "920160",
        "severity": "CRITICAL",
        "tags": [
            "application-multi",
            "language-multi",
            "platform-multi",
            "attack-protocol",
            "paranoia-level/1",
            "OWASP_CRS",
            "capec/1000/210/272"
        ]
    },
    {
        "comment": "#\n# Do not accept GET or HEAD requests with bodies\n# HTTP standard allows GET requests to have a body but this\n# feature is not used in real life. Attackers could try to force\n# a request body on an unsuspecting web applications.\n#\n# -=[ Rule Logic ]=-\n# This is a chained rule that first checks the Request Method.  If it is a\n# GET or HEAD method, then it checks for the existence of a Content-Length\n# header.  If the header exists and its payload is either not a 0 digit or not\n# empty, then it will match.\n#\n# -=[ References ]=-\n# https://www.w3.org/Protocols/rfc2616/rfc2616-sec4.html#sec4.3\n#\n",
        "content": "SecRule REQUEST_METHOD \"@rx ^(?:GET|HEAD)$\" \\\n    \"id:920170,\\\n    phase:1,\\\n    block,\\\n    t:none,\\\n    msg:'GET or HEAD Request with Body Content',\\\n    logdata:'%{MATCHED_VAR}',\\\n    tag:'application-multi',\\\n    tag:'language-multi',\\\n    tag:'platform-multi',\\\n    tag:'attack-protocol',\\\n    tag:'paranoia-level/1',\\\n    tag:'OWASP_CRS',\\\n    tag:'capec/1000/210/272',\\\n    ver:'OWASP_CRS/3.4.0-dev',\\\n    severity:'CRITICAL',\\\n    chain\"\n    SecRule REQUEST_HEADERS:Content-Length \"!@rx ^0?$\" \\\n        \"t:none,\\\n        setvar:'tx.inbound_anomaly_score_pl1=+%{tx.critical_anomaly_score}'\"\n",
        "description": "GET or HEAD Request with Body Content.",
        "paranoia_level": "1",
        "rule_id": "920",
        "sec_rule_id": "920170",
        "severity": "CRITICAL",
        "tags": [
            "application-multi",
            "language-multi",
            "platform-multi",
            "attack-protocol",
            "paranoia-level/1",
            "OWASP_CRS",
            "capec/1000/210/272"
        ]
    },
    {
        "comment": "#\n# This is a sibling of rule 920170\n#\n",
        "content": "SecRule REQUEST_METHOD \"@rx ^(?:GET|HEAD)$\" \\\n    \"id:920171,\\\n    phase:1,\\\n    block,\\\n    t:none,\\\n    msg:'GET or HEAD Request with Transfer-Encoding',\\\n    logdata:'%{MATCHED_VAR}',\\\n    tag:'application-multi',\\\n    tag:'language-multi',\\\n    tag:'platform-multi',\\\n    tag:'attack-protocol',\\\n    tag:'paranoia-level/1',\\\n    tag:'OWASP_CRS',\\\n    tag:'capec/1000/210/272',\\\n    ver:'OWASP_CRS/3.4.0-dev',\\\n    severity:'CRITICAL',\\\n    chain\"\n    SecRule &REQUEST_HEADERS:Transfer-Encoding \"!@eq 0\" \\\n        \"t:none,\\\n        setvar:'tx.inbound_anomaly_score_pl1=+%{tx.critical_anomaly_score}'\"\n",
        "paranoia_level": "1",
        "rule_id": "920",
        "sec_rule_id": "920171",
        "severity": "CRITICAL",
        "tags": [
            "application-multi",
            "language-multi",
            "platform-multi",
            "attack-protocol",
            "paranoia-level/1",
            "OWASP_CRS",
            "capec/1000/210/272"
        ]
    },
    {
        "comment": "#\n# Require Content-Length or Transfer-Encoding to be provided with\n# every POST request if the protocol version is not HTTP/2.\n#\n# In case of HTTP/2, see the RFC7540 8.1 p52:\n# HTTP/2 does not use the Transfer-Encoding: chunked anymore, because\n# the underlying transport protocol is already using data frames with\n# known length.\n#\n# -=[ Rule Logic ]=-\n# This chained rule checks if the protocol is not HTTP/2, then checks\n# request method is POST, if so, it checks that a Content-Length or\n# Transfer-Encoding headers are also present.\n#\n",
        "content": "SecRule REQUEST_PROTOCOL \"!@within HTTP/2 HTTP/2.0\" \\\n    \"id:920180,\\\n    phase:1,\\\n    block,\\\n    t:none,\\\n    msg:'POST without Content-Length or Transfer-Encoding headers',\\\n    logdata:'%{MATCHED_VAR}',\\\n    tag:'application-multi',\\\n    tag:'language-multi',\\\n    tag:'platform-multi',\\\n    tag:'attack-protocol',\\\n    tag:'paranoia-level/1',\\\n    tag:'OWASP_CRS',\\\n    tag:'capec/1000/210/272',\\\n    ver:'OWASP_CRS/3.4.0-dev',\\\n    severity:'WARNING',\\\n    chain\"\n    SecRule REQUEST_METHOD \"@streq POST\" \\\n        \"chain\"\n        SecRule &REQUEST_HEADERS:Content-Length \"@eq 0\" \\\n            \"chain\"\n            SecRule &REQUEST_HEADERS:Transfer-Encoding \"@eq 0\" \\\n                \"setvar:'tx.inbound_anomaly_score_pl1=+%{tx.warning_anomaly_score}'\"\n",
        "description": "POST request missing Content-Length Header.",
        "paranoia_level": "1",
        "rule_id": "920",
        "sec_rule_id": "920180",
        "severity": "WARNING",
        "tags": [
            "application-multi",
            "language-multi",
            "platform-multi",
            "attack-protocol",
            "paranoia-level/1",
            "OWASP_CRS",
            "capec/1000/210/272"
        ]
    },
    {
        "comment": "#\n# As per RFC7230 3.3.2: A sender MUST NOT send a Content-Length\n# header field in any message that contains a Transfer-Encoding header\n# field.\n#\n# Related to 920170, 920171 and 920180.\n#\n",
        "content": "SecRule &REQUEST_HEADERS:Transfer-Encoding \"!@eq 0\" \\\n    \"id:920181,\\\n    phase:1,\\\n    block,\\\n    t:none,\\\n    msg:'Content-Length and Transfer-Encoding headers present',\\\n    tag:'application-multi',\\\n    tag:'language-multi',\\\n    tag:'platform-multi',\\\n    tag:'attack-protocol',\\\n    tag:'paranoia-level/1',\\\n    tag:'OWASP_CRS',\\\n    tag:'capec/1000/210/272',\\\n    ver:'OWASP_CRS/3.4.0-dev',\\\n    severity:'WARNING',\\\n    chain\"\n    SecRule &REQUEST_HEADERS:Content-Length \"!@eq 0\" \\\n        \"t:none,\\\n        setvar:'tx.inbound_anomaly_score_pl1=+%{tx.warning_anomaly_score}'\"\n",
        "paranoia_level": "1",
        "rule_id": "920",
        "sec_rule_id": "920181",
        "severity": "WARNING",
        "tags": [
            "application-multi",
            "language-multi",
            "platform-multi",
            "attack-protocol",
            "paranoia-level/1",
            "OWASP_CRS",
            "capec/1000/210/272"
        ]
    },
    {
        "comment": "#\n# Range Header Check\n#\n# RFC7233 2.1 p6:\n# \"A byte-range-spec is invalid if the last-byte-pos value is present\n# and less than the first-byte-pos.\"\n#\n# -=[ Rule Logic ]=-\n# This rule compares the first and second byte ranges and flags\n# when the first value is greater than the second.\n#\n# -=[ References ]=-\n# https://tools.ietf.org/html/rfc7233\n# https://seclists.org/fulldisclosure/2011/Aug/175\n#\n",
        "content": "SecRule REQUEST_HEADERS:Range|REQUEST_HEADERS:Request-Range \"@rx (\\d+)-(\\d+)\" \\\n    \"id:920190,\\\n    phase:1,\\\n    block,\\\n    capture,\\\n    t:none,\\\n    msg:'Range: Invalid Last Byte Value',\\\n    logdata:'%{MATCHED_VAR}',\\\n    tag:'application-multi',\\\n    tag:'language-multi',\\\n    tag:'platform-multi',\\\n    tag:'attack-protocol',\\\n    tag:'paranoia-level/1',\\\n    tag:'OWASP_CRS',\\\n    tag:'capec/1000/210/272',\\\n    ver:'OWASP_CRS/3.4.0-dev',\\\n    severity:'WARNING',\\\n    chain\"\n    SecRule TX:2 \"@lt %{tx.1}\" \\\n        \"setvar:'tx.inbound_anomaly_score_pl1=+%{tx.warning_anomaly_score}'\"\n",
        "description": "Range: Invalid Last Byte Value.",
        "paranoia_level": "1",
        "rule_id": "920",
        "sec_rule_id": "920190",
        "severity": "WARNING",
        "tags": [
            "application-multi",
            "language-multi",
            "platform-multi",
            "attack-protocol",
            "paranoia-level/1",
            "OWASP_CRS",
            "capec/1000/210/272"
        ]
    },
    {
        "comment": "#\n# Broken/Malicious clients often have duplicate or conflicting headers\n# Automated programs and bots often do not obey the HTTP RFC\n#\n# -=[ Rule Logic ]=-\n# This rule inspects the Connection header and looks for duplicates of the\n# keep-alive and close options.\n#\n# -=[ References ]=-\n# http://www.bad-behavior.ioerror.us/about/\n# https://tools.ietf.org/html/rfc7233\n#\n",
        "content": "SecRule REQUEST_HEADERS:Connection \"@rx \\b(?:keep-alive|close),\\s?(?:keep-alive|close)\\b\" \\\n    \"id:920210,\\\n    phase:1,\\\n    block,\\\n    t:none,\\\n    msg:'Multiple/Conflicting Connection Header Data Found',\\\n    logdata:'%{MATCHED_VAR}',\\\n    tag:'application-multi',\\\n    tag:'language-multi',\\\n    tag:'platform-multi',\\\n    tag:'attack-protocol',\\\n    tag:'paranoia-level/1',\\\n    tag:'OWASP_CRS',\\\n    tag:'capec/1000/210/272',\\\n    ver:'OWASP_CRS/3.4.0-dev',\\\n    severity:'WARNING',\\\n    setvar:'tx.inbound_anomaly_score_pl1=+%{tx.warning_anomaly_score}'\"\n",
        "description": "Multiple/Conflicting Connection Header Data Found.",
        "paranoia_level": "1",
        "rule_id": "920",
        "sec_rule_id": "920210",
        "severity": "WARNING",
        "tags": [
            "application-multi",
            "language-multi",
            "platform-multi",
            "attack-protocol",
            "paranoia-level/1",
            "OWASP_CRS",
            "capec/1000/210/272"
        ]
    },
    {
        "comment": "#\n# Check URL encodings\n#\n# -=[ Rule Logic ]=-\n# There are two different chained rules.    We need to separate them as we are inspecting two\n# different variables - REQUEST_URI and REQUEST_BODY.   For REQUEST_BODY, we only want to\n# run the @validateUrlEncoding operator if the content-type is application/x-www-form-urlencoding.\n#\n# -=[ References ]=-\n# http://www.ietf.org/rfc/rfc1738.txt\n#\n# -=[ Example payload ]=-\n# http://localhost/?s=a%20b%20c%'/\n# reason: %'/ is not a valid url encoding\n#\n",
        "content": "SecRule REQUEST_URI \"@rx \\x25\" \\\n    \"id:920220,\\\n    phase:1,\\\n    block,\\\n    t:none,\\\n    msg:'URL Encoding Abuse Attack Attempt',\\\n    logdata:'%{MATCHED_VAR}',\\\n    tag:'application-multi',\\\n    tag:'language-multi',\\\n    tag:'platform-multi',\\\n    tag:'attack-protocol',\\\n    tag:'paranoia-level/1',\\\n    tag:'OWASP_CRS',\\\n    tag:'capec/1000/255/153/267/72',\\\n    ver:'OWASP_CRS/3.4.0-dev',\\\n    severity:'WARNING',\\\n    chain\"\n    SecRule REQUEST_URI \"@validateUrlEncoding\" \\\n        \"setvar:'tx.inbound_anomaly_score_pl1=+%{tx.warning_anomaly_score}'\"\n",
        "description": "URL Encoding Abuse Attack Attempt",
        "paranoia_level": "1",
        "rule_id": "920",
        "sec_rule_id": "920220",
        "severity": "WARNING",
        "tags": [
            "application-multi",
            "language-multi",
            "platform-multi",
            "attack-protocol",
            "paranoia-level/1",
            "OWASP_CRS",
            "capec/1000/255/153/267/72"
        ]
    },
    {
        "comment": "",
        "content": "SecRule REQUEST_HEADERS:Content-Type \"@rx ^(?i)application/x-www-form-urlencoded\" \\\n    \"id:920240,\\\n    phase:2,\\\n    block,\\\n    t:none,\\\n    msg:'URL Encoding Abuse Attack Attempt',\\\n    logdata:'%{MATCHED_VAR}',\\\n    tag:'application-multi',\\\n    tag:'language-multi',\\\n    tag:'platform-multi',\\\n    tag:'attack-protocol',\\\n    tag:'paranoia-level/1',\\\n    tag:'OWASP_CRS',\\\n    tag:'capec/1000/255/153/267/72',\\\n    ver:'OWASP_CRS/3.4.0-dev',\\\n    severity:'WARNING',\\\n    chain\"\n    SecRule REQUEST_BODY \"@rx \\x25\" \\\n        \"chain\"\n        SecRule REQUEST_BODY \"@validateUrlEncoding\" \\\n            \"setvar:'tx.inbound_anomaly_score_pl1=+%{tx.warning_anomaly_score}'\"\n",
        "description": "URL Encoding Abuse Attack Attempt",
        "paranoia_level": "1",
        "rule_id": "920",
        "sec_rule_id": "920240",
        "severity": "WARNING",
        "tags": [
            "application-multi",
            "language-multi",
            "platform-multi",
            "attack-protocol",
            "paranoia-level/1",
            "OWASP_CRS",
            "capec/1000/255/153/267/72"
        ]
    },
    {
        "comment": "#\n# Check UTF encoding\n# We only want to apply this check if UTF-8 encoding is actually used by the site, otherwise\n# it will result in false positives.\n#\n# -=[ Rule Logic ]=-\n# This chained rule first checks to see if the admin has set the TX:CRS_VALIDATE_UTF8_ENCODING\n# variable in the crs-setup.conf file.\n#\n",
        "content": "SecRule TX:CRS_VALIDATE_UTF8_ENCODING \"@eq 1\" \\\n    \"id:920250,\\\n    phase:2,\\\n    block,\\\n    t:none,\\\n    msg:'UTF8 Encoding Abuse Attack Attempt',\\\n    logdata:'%{MATCHED_VAR}',\\\n    tag:'application-multi',\\\n    tag:'language-multi',\\\n    tag:'platform-multi',\\\n    tag:'attack-protocol',\\\n    tag:'paranoia-level/1',\\\n    tag:'OWASP_CRS',\\\n    tag:'capec/1000/255/153/267',\\\n    ver:'OWASP_CRS/3.4.0-dev',\\\n    severity:'WARNING',\\\n    chain\"\n    SecRule REQUEST_FILENAME|ARGS|ARGS_NAMES \"@validateUtf8Encoding\" \\\n        \"setvar:'tx.inbound_anomaly_score_pl1=+%{tx.warning_anomaly_score}'\"\n",
        "description": "UTF8 Encoding Abuse Attack Attempt",
        "paranoia_level": "1",
        "rule_id": "920",
        "sec_rule_id": "920250",
        "severity": "WARNING",
        "tags": [
            "application-multi",
            "language-multi",
            "platform-multi",
            "attack-protocol",
            "paranoia-level/1",
            "OWASP_CRS",
            "capec/1000/255/153/267"
        ]
    },
    {
        "comment": "#\n# Disallow use of full-width unicode as decoding evasions may be possible.\n#\n# -=[ Rule Logic ]=-\n# This rule looks for full-width encoding by looking for %u followed by 2 'f'\n# characters and then 2 hex characters. It is a vulnerability that affected\n# IIS circa 2007.\n# The rule will trigger on %uXXXX formatted chars that are full or half\n# width, as explained above. This %uXXXX format is passed as a raw parameter\n# and is (seemingly only) accepted by IIS (5.0, 6.0, 7.0, and 8.0). Other\n# webservers will only process unicode chars presented as hex UTF-8 bytes.\n#\n# -=[ References ]=-\n# http://www.kb.cert.org/vuls/id/739224\n# https://www.checkpoint.com/defense/advisories/public/2007/cpai-2007-201.html\n# https://github.com/SpiderLabs/owasp-modsecurity-crs/issues/719\n#\n",
        "content": "SecRule REQUEST_URI|REQUEST_BODY \"@rx \\%u[fF]{2}[0-9a-fA-F]{2}\" \\\n    \"id:920260,\\\n    phase:2,\\\n    block,\\\n    t:none,\\\n    msg:'Unicode Full/Half Width Abuse Attack Attempt',\\\n    logdata:'%{MATCHED_VAR_NAME}=%{MATCHED_VAR}',\\\n    tag:'application-multi',\\\n    tag:'language-multi',\\\n    tag:'platform-iis',\\\n    tag:'platform-windows',\\\n    tag:'attack-protocol',\\\n    tag:'paranoia-level/1',\\\n    tag:'OWASP_CRS',\\\n    tag:'capec/1000/255/153/267/72',\\\n    ver:'OWASP_CRS/3.4.0-dev',\\\n    severity:'WARNING',\\\n    setvar:'tx.inbound_anomaly_score_pl1=+%{tx.warning_anomaly_score}'\"\n",
        "description": "Unicode Full/Half Width Abuse Attack Attempt",
        "paranoia_level": "1",
        "rule_id": "920",
        "sec_rule_id": "920260",
        "severity": "WARNING",
        "tags": [
            "application-multi",
            "language-multi",
            "platform-iis",
            "platform-windows",
            "attack-protocol",
            "paranoia-level/1",
            "OWASP_CRS",
            "capec/1000/255/153/267/72"
        ]
    },
    {
        "comment": "#\n# Restrict type of characters sent\n#\n# This is a rule with multiple stricter siblings that grows more\n# restrictive in higher paranoia levels.\n#\n# -=[ Rule Logic ]=-\n# This rule uses the @validateByteRange operator to restrict the request\n# payloads.\n#\n# -=[ Targets and ASCII Ranges ]=-\n#\n# 920270: PL1 : REQUEST_URI, REQUEST_HEADERS, ARGS and ARGS_NAMES\n#       ASCII 1-255 : Full ASCII range without null character\n#\n# 920271: PL2 : REQUEST_URI, REQUEST_HEADERS, ARGS and ARGS_NAMES\n#       ASCII 9,10,13,32-126,128-255 : Full visible ASCII range, tab, newline\n#\n# 920272: PL3 : REQUEST_URI, REQUEST_HEADERS, ARGS, ARGS_NAMES and REQUEST_BODY\n#       ASCII 32-36,38-126 : Visible lower ASCII range without percent symbol\n#\n# 920273: PL4 : ARGS, ARGS_NAMES and REQUEST_BODY\n#       ASCII 38,44-46,48-58,61,65-90,95,97-122\n#       A-Z a-z 0-9 = - _ . , : &\n#\n# 920274: PL4 : REQUEST_HEADERS without User-Agent, Referer, Cookie\n#               and Structured Header booleans\n#       ASCII 32,34,38,42-59,61,65-90,95,97-122\n#       A-Z a-z 0-9 = - _ . , : & \" * + / SPACE\n#\n# REQUEST_URI and REQUEST_HEADERS User-Agent, Referer and Cookie are very hard\n# to restrict beyond the limits in 920272. Structured Header booleans are\n# validated separately in 920275.\n#\n# 920274 generally has few positives. However, it would detect rare attacks\n# on Accept request headers and friends.\n",
        "content": "SecRule REQUEST_URI|REQUEST_HEADERS|ARGS|ARGS_NAMES \"@validateByteRange 1-255\" \\\n    \"id:920270,\\\n    phase:2,\\\n    block,\\\n    t:none,t:urlDecodeUni,\\\n    msg:'Invalid character in request (null character)',\\\n    logdata:'%{MATCHED_VAR_NAME}=%{MATCHED_VAR}',\\\n    tag:'application-multi',\\\n    tag:'language-multi',\\\n    tag:'platform-multi',\\\n    tag:'attack-protocol',\\\n    tag:'paranoia-level/1',\\\n    tag:'OWASP_CRS',\\\n    tag:'capec/1000/210/272',\\\n    ver:'OWASP_CRS/3.4.0-dev',\\\n    severity:'CRITICAL',\\\n    setvar:'tx.inbound_anomaly_score_pl1=+%{tx.critical_anomaly_score}'\"\n",
        "description": "Invalid character in request (null character)",
        "paranoia_level": "1",
        "rule_id": "920",
        "sec_rule_id": "920270",
        "severity": "CRITICAL",
        "tags": [
            "application-multi",
            "language-multi",
            "platform-multi",
            "attack-protocol",
            "paranoia-level/1",
            "OWASP_CRS",
            "capec/1000/210/272"
        ]
    },
    {
        "comment": "#\n# Missing/Empty Host Header\n#\n# -=[ Rule Logic ]=-\n# These rules will first check to see if a Host header is present.\n# The second check is to see if a Host header exists but is empty.\n#\n",
        "content": "SecRule &REQUEST_HEADERS:Host \"@eq 0\" \\\n    \"id:920280,\\\n    phase:1,\\\n    pass,\\\n    t:none,\\\n    msg:'Request Missing a Host Header',\\\n    tag:'application-multi',\\\n    tag:'language-multi',\\\n    tag:'platform-multi',\\\n    tag:'attack-protocol',\\\n    tag:'paranoia-level/1',\\\n    tag:'OWASP_CRS',\\\n    tag:'capec/1000/210/272',\\\n    tag:'PCI/6.5.10',\\\n    ver:'OWASP_CRS/3.4.0-dev',\\\n    severity:'WARNING',\\\n    setvar:'tx.inbound_anomaly_score_pl1=+%{tx.warning_anomaly_score}',\\\n    skipAfter:END-HOST-CHECK\"\n",
        "description": "Request Missing a Host Header",
        "paranoia_level": "1",
        "rule_id": "920",
        "sec_rule_id": "920280",
        "severity": "WARNING",
        "tags": [
            "application-multi",
            "language-multi",
            "platform-multi",
            "attack-protocol",
            "paranoia-level/1",
            "OWASP_CRS",
            "capec/1000/210/272",
            "PCI/6.5.10"
        ]
    },
    {
        "comment": "",
        "content": "SecRule REQUEST_HEADERS:Host \"@rx ^$\" \\\n    \"id:920290,\\\n    phase:1,\\\n    pass,\\\n    t:none,\\\n    msg:'Empty Host Header',\\\n    tag:'application-multi',\\\n    tag:'language-multi',\\\n    tag:'platform-multi',\\\n    tag:'attack-protocol',\\\n    tag:'paranoia-level/1',\\\n    tag:'OWASP_CRS',\\\n    tag:'capec/1000/210/272',\\\n    ver:'OWASP_CRS/3.4.0-dev',\\\n    severity:'WARNING',\\\n    setvar:'tx.inbound_anomaly_score_pl1=+%{tx.warning_anomaly_score}'\"\n",
        "description": "Empty Host Header",
        "paranoia_level": "1",
        "rule_id": "920",
        "sec_rule_id": "920290",
        "severity": "WARNING",
        "tags": [
            "application-multi",
            "language-multi",
            "platform-multi",
            "attack-protocol",
            "paranoia-level/1",
            "OWASP_CRS",
            "capec/1000/210/272"
        ]
    },
    {
        "comment": "#\n# Empty Accept Header\n#\n# -=[ Rule Logic ]=-\n# This rule checks if an Accept header exists, but has an empty value.\n# This is only allowed in combination with the OPTIONS method.\n# Additionally, there are some clients sending empty Accept headers.\n# They are covered in another chained rule checking the User-Agent.\n# This technique demands a separate rule to detect an empty\n# Accept header if there is no user agent. This is checked via\n# the separate rule 920311.\n#\n# Exclude some common broken clients sending empty Accept header:\n# \"Business/6.6.1.2 CFNetwork/758.5.3 Darwin/15.6.0\" (CRS issue #515)\n# \"Entreprise/6.5.0.177 CFNetwork/758.4.3 Darwin/15.5.0\" (CRS issue #366)\n#\n# -=[ References ]=-\n# https://github.com/SpiderLabs/owasp-modsecurity-crs/issues/366\n#\n",
        "content": "SecRule REQUEST_HEADERS:Accept \"@rx ^$\" \\\n    \"id:920310,\\\n    phase:1,\\\n    pass,\\\n    t:none,\\\n    msg:'Request Has an Empty Accept Header',\\\n    tag:'application-multi',\\\n    tag:'language-multi',\\\n    tag:'platform-multi',\\\n    tag:'attack-protocol',\\\n    tag:'paranoia-level/1',\\\n    tag:'OWASP_CRS',\\\n    tag:'capec/1000/210/272',\\\n    ver:'OWASP_CRS/3.4.0-dev',\\\n    severity:'NOTICE',\\\n    chain\"\n    SecRule REQUEST_METHOD \"!@rx ^OPTIONS$\" \\\n        \"chain\"\n        SecRule REQUEST_HEADERS:User-Agent \"!@pm AppleWebKit Android Business Enterprise Entreprise\" \\\n            \"t:none,\\\n            setvar:'tx.inbound_anomaly_score_pl1=+%{tx.notice_anomaly_score}'\"\n",
        "description": "Request Has an Empty Accept Header",
        "paranoia_level": "1",
        "rule_id": "920",
        "sec_rule_id": "920310",
        "severity": "NOTICE",
        "tags": [
            "application-multi",
            "language-multi",
            "platform-multi",
            "attack-protocol",
            "paranoia-level/1",
            "OWASP_CRS",
            "capec/1000/210/272"
        ]
    },
    {
        "comment": "#\n# This rule is a sibling of rule 920310.\n#\n",
        "content": "SecRule REQUEST_HEADERS:Accept \"@rx ^$\" \\\n    \"id:920311,\\\n    phase:1,\\\n    pass,\\\n    t:none,\\\n    msg:'Request Has an Empty Accept Header',\\\n    tag:'application-multi',\\\n    tag:'language-multi',\\\n    tag:'platform-multi',\\\n    tag:'attack-protocol',\\\n    tag:'paranoia-level/1',\\\n    tag:'OWASP_CRS',\\\n    tag:'capec/1000/210/272',\\\n    ver:'OWASP_CRS/3.4.0-dev',\\\n    severity:'NOTICE',\\\n    chain\"\n    SecRule REQUEST_METHOD \"!@rx ^OPTIONS$\" \\\n        \"chain\"\n        SecRule &REQUEST_HEADERS:User-Agent \"@eq 0\" \\\n            \"t:none,\\\n            setvar:'tx.inbound_anomaly_score_pl1=+%{tx.notice_anomaly_score}'\"\n",
        "description": "Request Has an Empty Accept Header",
        "paranoia_level": "1",
        "rule_id": "920",
        "sec_rule_id": "920311",
        "severity": "NOTICE",
        "tags": [
            "application-multi",
            "language-multi",
            "platform-multi",
            "attack-protocol",
            "paranoia-level/1",
            "OWASP_CRS",
            "capec/1000/210/272"
        ]
    },
    {
        "comment": "#\n# Empty User-Agent Header\n#\n# -=[ Rule Logic ]=-\n# This rules will check to see if the User-Agent header is empty.\n#\n# Note that there is a second rule, 920320, which will check for\n# the existence of the User-Agent header.\n#\n",
        "content": "SecRule REQUEST_HEADERS:User-Agent \"@rx ^$\" \\\n    \"id:920330,\\\n    phase:1,\\\n    pass,\\\n    t:none,\\\n    msg:'Empty User Agent Header',\\\n    tag:'application-multi',\\\n    tag:'language-multi',\\\n    tag:'platform-multi',\\\n    tag:'attack-protocol',\\\n    tag:'paranoia-level/1',\\\n    tag:'OWASP_CRS',\\\n    tag:'capec/1000/210/272',\\\n    ver:'OWASP_CRS/3.4.0-dev',\\\n    severity:'NOTICE',\\\n    setvar:'tx.inbound_anomaly_score_pl1=+%{tx.notice_anomaly_score}'\"\n",
        "description": "Empty User Agent Header",
        "paranoia_level": "1",
        "rule_id": "920",
        "sec_rule_id": "920330",
        "severity": "NOTICE",
        "tags": [
            "application-multi",
            "language-multi",
            "platform-multi",
            "attack-protocol",
            "paranoia-level/1",
            "OWASP_CRS",
            "capec/1000/210/272"
        ]
    },
    {
        "comment": "#\n# Missing Content-Type Header with Request Body\n#\n# -=[ Rule Logic]=-\n# This rule will first check to see if the value of the Content-Length header is\n# non-equal to 0. The chained rule is then checking the existence of the\n# Content-Type header. The RFCs do not state there must be a\n# Content-Type header. However, a request missing a Content-Header is a\n# strong indication of a non-compliant browser.\n#\n# Also, omitting the CT header allows to bypass the Request Body Processor\n# unless you set the optional tx.enforce_bodyproc_urlencoded variable.\n#\n# Note: in default settings, this behavior only provides a NOTICE and will\n# not cause a request to be blocked. However, in paranoia level 2 or\n# higher, we run sibling 920341, which DOES block these requests.\n#\n# -=[ References ]=-\n# http://httpwg.org/specs/rfc7231.html#header.content-type\n",
        "content": "SecRule REQUEST_HEADERS:Content-Length \"!@rx ^0$\" \\\n    \"id:920340,\\\n    phase:1,\\\n    pass,\\\n    t:none,\\\n    msg:'Request Containing Content, but Missing Content-Type header',\\\n    tag:'application-multi',\\\n    tag:'language-multi',\\\n    tag:'platform-multi',\\\n    tag:'attack-protocol',\\\n    tag:'paranoia-level/1',\\\n    tag:'OWASP_CRS',\\\n    tag:'capec/1000/210/272',\\\n    ver:'OWASP_CRS/3.4.0-dev',\\\n    severity:'NOTICE',\\\n    chain\"\n    SecRule &REQUEST_HEADERS:Content-Type \"@eq 0\" \\\n        \"t:none,\\\n        setvar:'tx.inbound_anomaly_score_pl1=+%{tx.notice_anomaly_score}'\"\n",
        "description": "Request Containing Content, but Missing Content-Type header",
        "paranoia_level": "1",
        "rule_id": "920",
        "sec_rule_id": "920340",
        "severity": "NOTICE",
        "tags": [
            "application-multi",
            "language-multi",
            "platform-multi",
            "attack-protocol",
            "paranoia-level/1",
            "OWASP_CRS",
            "capec/1000/210/272"
        ]
    },
    {
        "comment": "# Check that the host header is not an IP address\n# This is not an HTTP RFC violation but it is indicative of automated client access.\n# Many web-based worms propagate by scanning IP address blocks.\n#\n# -=[ Rule Logic ]=-\n# This rule triggers if the Host header contains an IPv4 or IPv6 address, optionally\n# extended with a port number. In the case of IPv6 we covering the address with square\n# brackets and the address without square brackets.\n#\n# The regex consists of three main parts and said optional group:\n#\n# * IPv4 address\n# * IPv6 address with square brackets\n# * IPv6 address without square brackets\n# * optional colon and port number\n#\n# Please note that the regex does not test the validity of the IP addresses.\n# It just tries to detect a potential IP address.\n#\n# -=[ References ]=-\n# https://technet.microsoft.com/en-us/magazine/2005.01.hackerbasher.aspx\n#\n",
        "content": "SecRule REQUEST_HEADERS:Host \"@rx (?:^([\\d.]+|\\[[\\da-f:]+\\]|[\\da-f:]+)(:[\\d]+)?$)\" \\\n    \"id:920350,\\\n    phase:1,\\\n    block,\\\n    t:none,\\\n    msg:'Host header is a numeric IP address',\\\n    logdata:'%{MATCHED_VAR}',\\\n    tag:'application-multi',\\\n    tag:'language-multi',\\\n    tag:'platform-multi',\\\n    tag:'attack-protocol',\\\n    tag:'paranoia-level/1',\\\n    tag:'OWASP_CRS',\\\n    tag:'capec/1000/210/272',\\\n    tag:'PCI/6.5.10',\\\n    ver:'OWASP_CRS/3.4.0-dev',\\\n    severity:'WARNING',\\\n    setvar:'tx.inbound_anomaly_score_pl1=+%{tx.warning_anomaly_score}'\"\n",
        "description": "Host header is a numeric IP address",
        "paranoia_level": "1",
        "rule_id": "920",
        "sec_rule_id": "920350",
        "severity": "WARNING",
        "tags": [
            "application-multi",
            "language-multi",
            "platform-multi",
            "attack-protocol",
            "paranoia-level/1",
            "OWASP_CRS",
            "capec/1000/210/272",
            "PCI/6.5.10"
        ]
    },
    {
        "comment": "#\n# Maximum number of arguments in request limited\n#\n",
        "content": "SecRule &TX:MAX_NUM_ARGS \"@eq 1\" \\\n    \"id:920380,\\\n    phase:2,\\\n    block,\\\n    t:none,\\\n    msg:'Too many arguments in request',\\\n    logdata:'%{MATCHED_VAR_NAME}=%{MATCHED_VAR}',\\\n    tag:'application-multi',\\\n    tag:'language-multi',\\\n    tag:'platform-multi',\\\n    tag:'attack-protocol',\\\n    tag:'paranoia-level/1',\\\n    tag:'OWASP_CRS',\\\n    tag:'capec/1000/210/272',\\\n    ver:'OWASP_CRS/3.4.0-dev',\\\n    severity:'CRITICAL',\\\n    chain\"\n    SecRule &ARGS \"@gt %{tx.max_num_args}\" \\\n        \"t:none,\\\n        setvar:'tx.inbound_anomaly_score_pl1=+%{tx.critical_anomaly_score}'\"\n",
        "description": "Too many arguments in request",
        "paranoia_level": "1",
        "rule_id": "920",
        "sec_rule_id": "920380",
        "severity": "CRITICAL",
        "tags": [
            "application-multi",
            "language-multi",
            "platform-multi",
            "attack-protocol",
            "paranoia-level/1",
            "OWASP_CRS",
            "capec/1000/210/272"
        ]
    },
    {
        "comment": "## -- Arguments limits --\n#\n# Limit argument name length\n#\n",
        "content": "SecRule &TX:ARG_NAME_LENGTH \"@eq 1\" \\\n    \"id:920360,\\\n    phase:2,\\\n    block,\\\n    t:none,\\\n    msg:'Argument name too long',\\\n    logdata:'%{MATCHED_VAR_NAME}=%{MATCHED_VAR}',\\\n    tag:'application-multi',\\\n    tag:'language-multi',\\\n    tag:'platform-multi',\\\n    tag:'attack-protocol',\\\n    tag:'paranoia-level/1',\\\n    tag:'OWASP_CRS',\\\n    tag:'capec/1000/210/272',\\\n    ver:'OWASP_CRS/3.4.0-dev',\\\n    severity:'CRITICAL',\\\n    chain\"\n    SecRule ARGS_NAMES \"@gt %{tx.arg_name_length}\" \\\n        \"t:none,t:length,\\\n        setvar:'tx.inbound_anomaly_score_pl1=+%{tx.critical_anomaly_score}'\"\n",
        "description": "Argument name too long",
        "paranoia_level": "1",
        "rule_id": "920",
        "sec_rule_id": "920360",
        "severity": "CRITICAL",
        "tags": [
            "application-multi",
            "language-multi",
            "platform-multi",
            "attack-protocol",
            "paranoia-level/1",
            "OWASP_CRS",
            "capec/1000/210/272"
        ]
    },
    {
        "comment": "#\n# Limit argument value length\n#\n# This rule is also triggered by an Apache Struts Remote Code Execution exploit:\n# [ Apache Struts vulnerability CVE-2017-9791 - Exploit tested: https://www.exploit-db.com/exploits/42324 ]\n#\n",
        "content": "SecRule &TX:ARG_LENGTH \"@eq 1\" \\\n    \"id:920370,\\\n    phase:2,\\\n    block,\\\n    t:none,\\\n    msg:'Argument value too long',\\\n    logdata:'%{MATCHED_VAR_NAME}=%{MATCHED_VAR}',\\\n    tag:'application-multi',\\\n    tag:'language-multi',\\\n    tag:'platform-multi',\\\n    tag:'attack-protocol',\\\n    tag:'paranoia-level/1',\\\n    tag:'OWASP_CRS',\\\n    tag:'capec/1000/210/272',\\\n    ver:'OWASP_CRS/3.4.0-dev',\\\n    severity:'CRITICAL',\\\n    chain\"\n    SecRule ARGS \"@gt %{tx.arg_length}\" \\\n        \"t:none,t:length,\\\n        setvar:'tx.inbound_anomaly_score_pl1=+%{tx.critical_anomaly_score}'\"\n",
        "description": "Argument value too long",
        "paranoia_level": "1",
        "rule_id": "920",
        "sec_rule_id": "920370",
        "severity": "CRITICAL",
        "tags": [
            "application-multi",
            "language-multi",
            "platform-multi",
            "attack-protocol",
            "paranoia-level/1",
            "OWASP_CRS",
            "capec/1000/210/272"
        ]
    },
    {
        "comment": "#\n# Limit arguments total length\n#\n",
        "content": "SecRule &TX:TOTAL_ARG_LENGTH \"@eq 1\" \\\n    \"id:920390,\\\n    phase:2,\\\n    block,\\\n    t:none,\\\n    msg:'Total arguments size exceeded',\\\n    logdata:'%{MATCHED_VAR_NAME}=%{MATCHED_VAR}',\\\n    tag:'application-multi',\\\n    tag:'language-multi',\\\n    tag:'platform-multi',\\\n    tag:'attack-protocol',\\\n    tag:'paranoia-level/1',\\\n    tag:'OWASP_CRS',\\\n    tag:'capec/1000/210/272',\\\n    ver:'OWASP_CRS/3.4.0-dev',\\\n    severity:'CRITICAL',\\\n    chain\"\n    SecRule ARGS_COMBINED_SIZE \"@gt %{tx.total_arg_length}\" \\\n        \"t:none,\\\n        setvar:'tx.inbound_anomaly_score_pl1=+%{tx.critical_anomaly_score}'\"\n",
        "description": "Total arguments size exceeded",
        "paranoia_level": "1",
        "rule_id": "920",
        "sec_rule_id": "920390",
        "severity": "CRITICAL",
        "tags": [
            "application-multi",
            "language-multi",
            "platform-multi",
            "attack-protocol",
            "paranoia-level/1",
            "OWASP_CRS",
            "capec/1000/210/272"
        ]
    },
    {
        "comment": "#\n# -- File upload limits --\n#\n# Individual file size is limited\n",
        "content": "SecRule &TX:MAX_FILE_SIZE \"@eq 1\" \\\n    \"id:920400,\\\n    phase:1,\\\n    block,\\\n    t:none,\\\n    msg:'Uploaded file size too large',\\\n    tag:'application-multi',\\\n    tag:'language-multi',\\\n    tag:'platform-multi',\\\n    tag:'attack-protocol',\\\n    tag:'paranoia-level/1',\\\n    tag:'OWASP_CRS',\\\n    tag:'capec/1000/210/272',\\\n    ver:'OWASP_CRS/3.4.0-dev',\\\n    severity:'CRITICAL',\\\n    chain\"\n    SecRule REQUEST_HEADERS:Content-Type \"@rx ^(?i)multipart/form-data\" \\\n        \"chain\"\n        SecRule REQUEST_HEADERS:Content-Length \"@gt %{tx.max_file_size}\" \\\n            \"t:none,\\\n            setvar:'tx.inbound_anomaly_score_pl1=+%{tx.critical_anomaly_score}'\"\n",
        "description": "Uploaded file size too large",
        "paranoia_level": "1",
        "rule_id": "920",
        "sec_rule_id": "920400",
        "severity": "CRITICAL",
        "tags": [
            "application-multi",
            "language-multi",
            "platform-multi",
            "attack-protocol",
            "paranoia-level/1",
            "OWASP_CRS",
            "capec/1000/210/272"
        ]
    },
    {
        "comment": "#\n# Combined file size is limited\n#\n",
        "content": "SecRule &TX:COMBINED_FILE_SIZES \"@eq 1\" \\\n    \"id:920410,\\\n    phase:2,\\\n    block,\\\n    t:none,\\\n    msg:'Total uploaded files size too large',\\\n    logdata:'%{MATCHED_VAR_NAME}=%{MATCHED_VAR}',\\\n    tag:'application-multi',\\\n    tag:'language-multi',\\\n    tag:'platform-multi',\\\n    tag:'attack-protocol',\\\n    tag:'paranoia-level/1',\\\n    tag:'OWASP_CRS',\\\n    tag:'capec/1000/210/272',\\\n    ver:'OWASP_CRS/3.4.0-dev',\\\n    severity:'CRITICAL',\\\n    chain\"\n    SecRule FILES_COMBINED_SIZE \"@gt %{tx.combined_file_sizes}\" \\\n        \"t:none,\\\n        setvar:'tx.inbound_anomaly_score_pl1=+%{tx.critical_anomaly_score}'\"\n",
        "description": "Total uploaded files size too large",
        "paranoia_level": "1",
        "rule_id": "920",
        "sec_rule_id": "920410",
        "severity": "CRITICAL",
        "tags": [
            "application-multi",
            "language-multi",
            "platform-multi",
            "attack-protocol",
            "paranoia-level/1",
            "OWASP_CRS",
            "capec/1000/210/272"
        ]
    },
    {
        "comment": "# Restrict Content-Type header to established patterns.\n#\n# This provides generic allow list protection against vulnerabilities like\n# Apache Struts Content-Type arbitrary command execution (CVE-2017-5638).\n#\n# Examples of allowed patterns:\n# - text/plain\n# - text/plain; charset=\"UTF-8\"\n# - multipart/form-data; boundary=----WebKitFormBoundary12345\n# - application/soap+xml; charset=utf-8; action=\"urn:localhost-hwh#getQuestions\"\n# - application/*+json\n",
        "content": "SecRule REQUEST_HEADERS:Content-Type \"!@rx ^[\\w/.+*-]+(?:\\s?;\\s?(?:action|boundary|charset|start(?:-info)?|type|version)\\s?=\\s?['\\\"\\w.()+,/:=?<>@#*-]+)*$\" \\\n    \"id:920470,\\\n    phase:1,\\\n    block,\\\n    t:none,t:lowercase,\\\n    msg:'Illegal Content-Type header',\\\n    logdata:'%{MATCHED_VAR}',\\\n    tag:'application-multi',\\\n    tag:'language-multi',\\\n    tag:'platform-multi',\\\n    tag:'attack-protocol',\\\n    tag:'paranoia-level/1',\\\n    tag:'OWASP_CRS',\\\n    tag:'capec/1000/255/153',\\\n    tag:'PCI/12.1',\\\n    ver:'OWASP_CRS/3.4.0-dev',\\\n    severity:'CRITICAL',\\\n    setvar:'tx.inbound_anomaly_score_pl1=+%{tx.critical_anomaly_score}'\"\n",
        "paranoia_level": "1",
        "rule_id": "920",
        "sec_rule_id": "920470",
        "severity": "CRITICAL",
        "tags": [
            "application-multi",
            "language-multi",
            "platform-multi",
            "attack-protocol",
            "paranoia-level/1",
            "OWASP_CRS",
            "capec/1000/255/153",
            "PCI/12.1"
        ]
    },
    {
        "comment": "# In case Content-Type header can be parsed, check the mime-type against\n# the policy defined in the 'allowed_request_content_type' variable.\n# To change your policy, edit crs-setup.conf and activate rule 900220.\n",
        "content": "SecRule REQUEST_HEADERS:Content-Type \"@rx ^[^;\\s]+\" \\\n    \"id:920420,\\\n    phase:1,\\\n    block,\\\n    capture,\\\n    t:none,\\\n    msg:'Request content type is not allowed by policy',\\\n    logdata:'%{MATCHED_VAR}',\\\n    tag:'application-multi',\\\n    tag:'language-multi',\\\n    tag:'platform-multi',\\\n    tag:'attack-protocol',\\\n    tag:'paranoia-level/1',\\\n    tag:'OWASP_CRS',\\\n    tag:'capec/1000/255/153',\\\n    tag:'PCI/12.1',\\\n    ver:'OWASP_CRS/3.4.0-dev',\\\n    severity:'CRITICAL',\\\n    setvar:'tx.content_type=|%{tx.0}|',\\\n    chain\"\n    SecRule TX:content_type \"!@within %{tx.allowed_request_content_type}\" \\\n        \"t:lowercase,\\\n        setvar:'tx.inbound_anomaly_score_pl1=+%{tx.critical_anomaly_score}'\"\n",
        "description": "Request content type is not allowed by policy",
        "paranoia_level": "1",
        "rule_id": "920",
        "sec_rule_id": "920420",
        "severity": "CRITICAL",
        "tags": [
            "application-multi",
            "language-multi",
            "platform-multi",
            "attack-protocol",
            "paranoia-level/1",
            "OWASP_CRS",
            "capec/1000/255/153",
            "PCI/12.1"
        ]
    },
    {
        "comment": "#\n# Restrict charset parameter within the content-type header\n#\n",
        "content": "SecRule REQUEST_HEADERS:Content-Type \"@rx charset\\s*=\\s*[\\\"']?([^;\\\"'\\s]+)\" \\\n    \"id:920480,\\\n    phase:1,\\\n    block,\\\n    capture,\\\n    t:none,\\\n    msg:'Request content type charset is not allowed by policy',\\\n    logdata:'%{MATCHED_VAR}',\\\n    tag:'application-multi',\\\n    tag:'language-multi',\\\n    tag:'platform-multi',\\\n    tag:'attack-protocol',\\\n    tag:'paranoia-level/1',\\\n    tag:'OWASP_CRS',\\\n    tag:'capec/1000/255/153',\\\n    tag:'PCI/12.1',\\\n    ver:'OWASP_CRS/3.4.0-dev',\\\n    severity:'CRITICAL',\\\n    setvar:'tx.content_type_charset=|%{tx.1}|',\\\n    chain\"\n    SecRule TX:content_type_charset \"!@within %{tx.allowed_request_content_type_charset}\" \\\n        \"t:lowercase,\\\n        ctl:forceRequestBodyVariable=On,\\\n        setvar:'tx.inbound_anomaly_score_pl1=+%{tx.critical_anomaly_score}'\"\n",
        "paranoia_level": "1",
        "rule_id": "920",
        "sec_rule_id": "920480",
        "severity": "CRITICAL",
        "tags": [
            "application-multi",
            "language-multi",
            "platform-multi",
            "attack-protocol",
            "paranoia-level/1",
            "OWASP_CRS",
            "capec/1000/255/153",
            "PCI/12.1"
        ]
    },
    {
        "comment": "#\n# Restrict protocol versions.\n#\n",
        "content": "SecRule REQUEST_PROTOCOL \"!@within %{tx.allowed_http_versions}\" \\\n    \"id:920430,\\\n    phase:1,\\\n    block,\\\n    t:none,\\\n    msg:'HTTP protocol version is not allowed by policy',\\\n    logdata:'%{MATCHED_VAR}',\\\n    tag:'application-multi',\\\n    tag:'language-multi',\\\n    tag:'platform-multi',\\\n    tag:'attack-protocol',\\\n    tag:'paranoia-level/1',\\\n    tag:'OWASP_CRS',\\\n    tag:'capec/1000/210/272',\\\n    tag:'PCI/6.5.10',\\\n    ver:'OWASP_CRS/3.4.0-dev',\\\n    severity:'CRITICAL',\\\n    setvar:'tx.inbound_anomaly_score_pl1=+%{tx.critical_anomaly_score}'\"\n",
        "description": "HTTP protocol version is not allowed by policy",
        "paranoia_level": "1",
        "rule_id": "920",
        "sec_rule_id": "920430",
        "severity": "CRITICAL",
        "tags": [
            "application-multi",
            "language-multi",
            "platform-multi",
            "attack-protocol",
            "paranoia-level/1",
            "OWASP_CRS",
            "capec/1000/210/272",
            "PCI/6.5.10"
        ]
    },
    {
        "comment": "#\n# Restrict file extension\n#\n",
        "content": "SecRule REQUEST_BASENAME \"@rx \\.([^.]+)$\" \\\n    \"id:920440,\\\n    phase:1,\\\n    block,\\\n    capture,\\\n    t:none,\\\n    msg:'URL file extension is restricted by policy',\\\n    logdata:'%{TX.0}',\\\n    tag:'application-multi',\\\n    tag:'language-multi',\\\n    tag:'platform-multi',\\\n    tag:'attack-protocol',\\\n    tag:'paranoia-level/1',\\\n    tag:'OWASP_CRS',\\\n    tag:'capec/1000/210/272',\\\n    tag:'PCI/6.5.10',\\\n    ver:'OWASP_CRS/3.4.0-dev',\\\n    severity:'CRITICAL',\\\n    setvar:'tx.extension=.%{tx.1}/',\\\n    chain\"\n    SecRule TX:EXTENSION \"@within %{tx.restricted_extensions}\" \\\n        \"t:none,t:urlDecodeUni,t:lowercase,\\\n        setvar:'tx.inbound_anomaly_score_pl1=+%{tx.critical_anomaly_score}'\"\n",
        "description": "URL file extension is restricted by policy",
        "paranoia_level": "1",
        "rule_id": "920",
        "sec_rule_id": "920440",
        "severity": "CRITICAL",
        "tags": [
            "application-multi",
            "language-multi",
            "platform-multi",
            "attack-protocol",
            "paranoia-level/1",
            "OWASP_CRS",
            "capec/1000/210/272",
            "PCI/6.5.10"
        ]
    },
    {
        "comment": "#\n# Backup or \"working\" file extension\n# example: index.php~, /index.php~/foo/\n#\n",
        "content": "SecRule REQUEST_FILENAME \"@rx \\.[^.~]+~(?:/.*|)$\" \\\n    \"id:920500,\\\n    phase:1,\\\n    block,\\\n    t:none,t:urlDecodeUni,\\\n    msg:'Attempt to access a backup or working file',\\\n    logdata:'%{TX.0}',\\\n    tag:'application-multi',\\\n    tag:'language-multi',\\\n    tag:'platform-multi',\\\n    tag:'attack-protocol',\\\n    tag:'paranoia-level/1',\\\n    tag:'OWASP_CRS',\\\n    tag:'capec/1000/210/272',\\\n    tag:'PCI/6.5.10',\\\n    ver:'OWASP_CRS/3.4.0-dev',\\\n    severity:'CRITICAL',\\\n    setvar:'tx.inbound_anomaly_score_pl1=+%{tx.critical_anomaly_score}'\"\n",
        "paranoia_level": "1",
        "rule_id": "920",
        "sec_rule_id": "920500",
        "severity": "CRITICAL",
        "tags": [
            "application-multi",
            "language-multi",
            "platform-multi",
            "attack-protocol",
            "paranoia-level/1",
            "OWASP_CRS",
            "capec/1000/210/272",
            "PCI/6.5.10"
        ]
    },
    {
        "comment": "#\n# Restricted HTTP headers\n#\n# -=[ Rule Logic ]=-\n# The use of certain headers is restricted. They are listed in the variable\n# TX.restricted_headers.\n#\n# The headers are transformed into lowercase before the match.  In order to\n# make sure that only complete header names are matching, the names in\n# TX.restricted_headers are wrapped in slashes. This guarantees that the\n# header Range (-> /range/) is not matching the restricted header\n# /content-range/ for example.\n#\n# This is a chained rule, where the first rule fills a set of variables of the\n# form TX.header_name_<HEADER_NAME>. The second rule is then executed for all\n# variables of the form TX.header_name_<HEADER_NAME>.\n#\n# As a consequence of the construction of the rule, the alert message and the\n# alert data will not display the original header name Content-Range, but\n# /content-range/ instead.\n#\n#\n# -=[ References ]=-\n# https://access.redhat.com/security/vulnerabilities/httpoxy (Header Proxy)\n#\n",
        "content": "SecRule REQUEST_HEADERS_NAMES \"@rx ^.*$\" \\\n    \"id:920450,\\\n    phase:1,\\\n    block,\\\n    capture,\\\n    t:none,t:lowercase,\\\n    msg:'HTTP header is restricted by policy (%{MATCHED_VAR})',\\\n    logdata:'Restricted header detected: %{MATCHED_VAR}',\\\n    tag:'application-multi',\\\n    tag:'language-multi',\\\n    tag:'platform-multi',\\\n    tag:'attack-protocol',\\\n    tag:'paranoia-level/1',\\\n    tag:'OWASP_CRS',\\\n    tag:'capec/1000/210/272',\\\n    tag:'PCI/12.1',\\\n    ver:'OWASP_CRS/3.4.0-dev',\\\n    severity:'CRITICAL',\\\n    setvar:'tx.header_name_%{tx.0}=/%{tx.0}/',\\\n    chain\"\n    SecRule TX:/^header_name_/ \"@within %{tx.restricted_headers}\" \\\n        \"setvar:'tx.inbound_anomaly_score_pl1=+%{tx.critical_anomaly_score}'\"\n",
        "description": "HTTP header is restricted by policy (%{MATCHED_VAR})",
        "paranoia_level": "1",
        "rule_id": "920",
        "sec_rule_id": "920450",
        "severity": "CRITICAL",
        "tags": [
            "application-multi",
            "language-multi",
            "platform-multi",
            "attack-protocol",
            "paranoia-level/1",
            "OWASP_CRS",
            "capec/1000/210/272",
            "PCI/12.1"
        ]
    },
    {
        "comment": "#\n# Rule against CVE-2022-21907\n# This rule blocks Accept-Encoding headers longer than 50 characters.\n# The length of 50 is a heuristic based on the length of values from\n# the RFC (https://datatracker.ietf.org/doc/draft-ietf-httpbis-semantics/)\n# and the respective values assigned by IANA\n# (https://www.iana.org/assignments/http-parameters/http-parameters.xml#content-coding).\n#\n# This rule has a stricter sibling: 920521\n#\n",
        "content": "SecRule REQUEST_HEADERS:Accept-Encoding \"@gt 50\" \\\n    \"id:920520,\\\n    phase:1,\\\n    block,\\\n    t:none,t:lowercase,t:length,\\\n    msg:'Accept-Encoding header exceeded sensible length',\\\n    logdata:'%{MATCHED_VAR}',\\\n    tag:'application-multi',\\\n    tag:'language-multi',\\\n    tag:'platform-multi',\\\n    tag:'attack-protocol',\\\n    tag:'paranoia-level/1',\\\n    tag:'OWASP_CRS',\\\n    tag:'capec/1000/255/153',\\\n    tag:'PCI/12.1',\\\n    ver:'OWASP_CRS/3.4.0-dev',\\\n    severity:'CRITICAL',\\\n    setvar:'tx.inbound_anomaly_score_pl1=+%{tx.critical_anomaly_score}'\"\n",
        "paranoia_level": "1",
        "rule_id": "920",
        "sec_rule_id": "920520",
        "severity": "CRITICAL",
        "tags": [
            "application-multi",
            "language-multi",
            "platform-multi",
            "attack-protocol",
            "paranoia-level/1",
            "OWASP_CRS",
            "capec/1000/255/153",
            "PCI/12.1"
        ]
    },
    {
        "comment": "",
        "content": "SecRule TX:DETECTION_PARANOIA_LEVEL \"@lt 2\" \"id:920013,phase:1,pass,nolog,skipAfter:END-REQUEST-920-PROTOCOL-ENFORCEMENT\"\n",
        "rule_id": "920",
        "sec_rule_id": "920013"
    },
    {
        "comment": "",
        "content": "SecRule TX:DETECTION_PARANOIA_LEVEL \"@lt 2\" \"id:920014,phase:2,pass,nolog,skipAfter:END-REQUEST-920-PROTOCOL-ENFORCEMENT\"\n",
        "rule_id": "920",
        "sec_rule_id": "920014"
    },
    {
        "comment": "#\n# -=[ Rule Logic ]=-\n#\n# Check the number of range fields in the Range request header.\n#\n# An excessive number of Range request headers can be used to DoS a server.\n# The original CVE proposed an arbitrary upper limit of 5 range fields.\n#\n# Several clients are known to request PDF fields with up to 62 range\n# fields. Therefore the standard rule does not cover PDF files. This is\n# performed in two separate (stricter) siblings of this rule.\n#\n# 920200: PL2: Limit of 5 range header fields for all filenames outside of PDFs\n# 920201: PL2: Limit of 62 range header fields for PDFs\n# 920202: PL4: Limit of 5 range header fields for PDFs\n#\n# -=[ References ]=-\n# https://httpd.apache.org/security/CVE-2011-3192.txt\n",
        "content": "SecRule REQUEST_HEADERS:Range|REQUEST_HEADERS:Request-Range \"@rx ^bytes=(?:(?:\\d+)?-(?:\\d+)?\\s*,?\\s*){6}\" \\\n    \"id:920200,\\\n    phase:1,\\\n    block,\\\n    t:none,\\\n    msg:'Range: Too many fields (6 or more)',\\\n    logdata:'%{MATCHED_VAR}',\\\n    tag:'application-multi',\\\n    tag:'language-multi',\\\n    tag:'platform-multi',\\\n    tag:'attack-protocol',\\\n    tag:'OWASP_CRS',\\\n    tag:'capec/1000/210/272',\\\n    tag:'paranoia-level/2',\\\n    ver:'OWASP_CRS/3.4.0-dev',\\\n    severity:'WARNING',\\\n    chain\"\n    SecRule REQUEST_BASENAME \"!@endsWith .pdf\" \\\n        \"setvar:'tx.inbound_anomaly_score_pl2=+%{tx.warning_anomaly_score}'\"\n",
        "description": "Range: Too many fields (6 or more)",
        "paranoia_level": "2",
        "rule_id": "920",
        "sec_rule_id": "920200",
        "severity": "WARNING",
        "tags": [
            "application-multi",
            "language-multi",
            "platform-multi",
            "attack-protocol",
            "OWASP_CRS",
            "capec/1000/210/272",
            "paranoia-level/2"
        ]
    },
    {
        "comment": "#\n# This is a sibling of rule 920200\n#\n",
        "content": "SecRule REQUEST_BASENAME \"@endsWith .pdf\" \\\n    \"id:920201,\\\n    phase:1,\\\n    block,\\\n    t:none,\\\n    msg:'Range: Too many fields for pdf request (63 or more)',\\\n    logdata:'%{MATCHED_VAR}',\\\n    tag:'application-multi',\\\n    tag:'language-multi',\\\n    tag:'platform-multi',\\\n    tag:'attack-protocol',\\\n    tag:'OWASP_CRS',\\\n    tag:'capec/1000/210/272',\\\n    tag:'paranoia-level/2',\\\n    ver:'OWASP_CRS/3.4.0-dev',\\\n    severity:'WARNING',\\\n    chain\"\n    SecRule REQUEST_HEADERS:Range|REQUEST_HEADERS:Request-Range \"@rx ^bytes=(?:(?:\\d+)?-(?:\\d+)?\\s*,?\\s*){63}\" \\\n        \"setvar:'tx.inbound_anomaly_score_pl2=+%{tx.warning_anomaly_score}'\"\n",
        "description": "Range: Too many fields for pdf request (35 or more)",
        "paranoia_level": "2",
        "rule_id": "920",
        "sec_rule_id": "920201",
        "severity": "WARNING",
        "tags": [
            "application-multi",
            "language-multi",
            "platform-multi",
            "attack-protocol",
            "OWASP_CRS",
            "capec/1000/210/272",
            "paranoia-level/2"
        ]
    },
    {
        "comment": "",
        "content": "SecRule ARGS \"@rx %[0-9a-fA-F]{2}\" \\\n    \"id:920230,\\\n    phase:2,\\\n    block,\\\n    t:none,\\\n    msg:'Multiple URL Encoding Detected',\\\n    logdata:'%{MATCHED_VAR}',\\\n    tag:'application-multi',\\\n    tag:'language-multi',\\\n    tag:'platform-multi',\\\n    tag:'attack-protocol',\\\n    tag:'OWASP_CRS',\\\n    tag:'capec/1000/255/153/267/120',\\\n    tag:'paranoia-level/2',\\\n    ver:'OWASP_CRS/3.4.0-dev',\\\n    severity:'WARNING',\\\n    setvar:'tx.inbound_anomaly_score_pl2=+%{tx.warning_anomaly_score}'\"\n",
        "description": "Multiple URL Encoding Detected",
        "paranoia_level": "2",
        "rule_id": "920",
        "sec_rule_id": "920230",
        "severity": "WARNING",
        "tags": [
            "application-multi",
            "language-multi",
            "platform-multi",
            "attack-protocol",
            "OWASP_CRS",
            "capec/1000/255/153/267/120",
            "paranoia-level/2"
        ]
    },
    {
        "comment": "#\n# PL2: This is a stricter sibling of 920270.\n#\n",
        "content": "SecRule REQUEST_URI|REQUEST_HEADERS|ARGS|ARGS_NAMES \"@validateByteRange 9,10,13,32-126,128-255\" \\\n    \"id:920271,\\\n    phase:2,\\\n    block,\\\n    t:none,t:urlDecodeUni,\\\n    msg:'Invalid character in request (non printable characters)',\\\n    logdata:'%{MATCHED_VAR_NAME}=%{MATCHED_VAR}',\\\n    tag:'application-multi',\\\n    tag:'language-multi',\\\n    tag:'platform-multi',\\\n    tag:'attack-protocol',\\\n    tag:'OWASP_CRS',\\\n    tag:'capec/1000/210/272',\\\n    tag:'paranoia-level/2',\\\n    ver:'OWASP_CRS/3.4.0-dev',\\\n    severity:'CRITICAL',\\\n    setvar:'tx.inbound_anomaly_score_pl2=+%{tx.critical_anomaly_score}'\"\n",
        "description": "Invalid character in request (non printable characters)",
        "paranoia_level": "2",
        "rule_id": "920",
        "sec_rule_id": "920271",
        "severity": "CRITICAL",
        "tags": [
            "application-multi",
            "language-multi",
            "platform-multi",
            "attack-protocol",
            "OWASP_CRS",
            "capec/1000/210/272",
            "paranoia-level/2"
        ]
    },
    {
        "comment": "#\n# Missing User-Agent Header\n#\n# -=[ Rule Logic ]=-\n# This rules will check to see if there is a User-Agent header or not.\n#\n",
        "content": "SecRule &REQUEST_HEADERS:User-Agent \"@eq 0\" \\\n    \"id:920320,\\\n    phase:1,\\\n    pass,\\\n    t:none,\\\n    msg:'Missing User Agent Header',\\\n    tag:'application-multi',\\\n    tag:'language-multi',\\\n    tag:'platform-multi',\\\n    tag:'attack-protocol',\\\n    tag:'OWASP_CRS',\\\n    tag:'capec/1000/210/272',\\\n    tag:'PCI/6.5.10',\\\n    tag:'paranoia-level/2',\\\n    ver:'OWASP_CRS/3.4.0-dev',\\\n    severity:'NOTICE',\\\n    setvar:'tx.inbound_anomaly_score_pl2=+%{tx.notice_anomaly_score}'\"\n",
        "description": "Missing User Agent Header",
        "paranoia_level": "2",
        "rule_id": "920",
        "sec_rule_id": "920320",
        "severity": "NOTICE",
        "tags": [
            "application-multi",
            "language-multi",
            "platform-multi",
            "attack-protocol",
            "OWASP_CRS",
            "capec/1000/210/272",
            "PCI/6.5.10",
            "paranoia-level/2"
        ]
    },
    {
        "comment": "#\n# PL2: This is a stricter sibling of 920120.\n#\n",
        "content": "SecRule FILES_NAMES|FILES \"@rx ['\\\";=]\" \\\n    \"id:920121,\\\n    phase:2,\\\n    block,\\\n    t:none,t:urlDecodeUni,\\\n    msg:'Attempted multipart/form-data bypass',\\\n    logdata:'%{MATCHED_VAR}',\\\n    tag:'application-multi',\\\n    tag:'language-multi',\\\n    tag:'platform-multi',\\\n    tag:'attack-protocol',\\\n    tag:'OWASP_CRS',\\\n    tag:'capec/1000/210/272',\\\n    tag:'paranoia-level/2',\\\n    ver:'OWASP_CRS/3.4.0-dev',\\\n    severity:'CRITICAL',\\\n    setvar:'tx.inbound_anomaly_score_pl2=+%{tx.critical_anomaly_score}'\"\n",
        "paranoia_level": "2",
        "rule_id": "920",
        "sec_rule_id": "920121",
        "severity": "CRITICAL",
        "tags": [
            "application-multi",
            "language-multi",
            "platform-multi",
            "attack-protocol",
            "OWASP_CRS",
            "capec/1000/210/272",
            "paranoia-level/2"
        ]
    },
    {
        "comment": "#\n# PL2: Block on Missing Content-Type Header with Request Body\n# This is a stricter sibling of rule 920340.\n#\n# -=[ References ]=-\n# http://httpwg.org/specs/rfc7231.html#header.content-type\n",
        "content": "SecRule REQUEST_HEADERS:Content-Length \"!@rx ^0$\" \\\n    \"id:920341,\\\n    phase:1,\\\n    block,\\\n    t:none,\\\n    msg:'Request Containing Content Requires Content-Type header',\\\n    tag:'application-multi',\\\n    tag:'language-multi',\\\n    tag:'platform-multi',\\\n    tag:'attack-protocol',\\\n    tag:'paranoia-level/2',\\\n    tag:'OWASP_CRS',\\\n    tag:'capec/1000/210/272',\\\n    ver:'OWASP_CRS/3.4.0-dev',\\\n    severity:'CRITICAL',\\\n    chain\"\n    SecRule &REQUEST_HEADERS:Content-Type \"@eq 0\" \\\n        \"t:none,\\\n        setvar:'tx.inbound_anomaly_score_pl2=+%{tx.critical_anomaly_score}'\"\n",
        "paranoia_level": "2",
        "rule_id": "920",
        "sec_rule_id": "920341",
        "severity": "CRITICAL",
        "tags": [
            "application-multi",
            "language-multi",
            "platform-multi",
            "attack-protocol",
            "paranoia-level/2",
            "OWASP_CRS",
            "capec/1000/210/272"
        ]
    },
    {
        "comment": "",
        "content": "SecRule TX:DETECTION_PARANOIA_LEVEL \"@lt 3\" \"id:920015,phase:1,pass,nolog,skipAfter:END-REQUEST-920-PROTOCOL-ENFORCEMENT\"\n",
        "rule_id": "920",
        "sec_rule_id": "920015"
    },
    {
        "comment": "",
        "content": "SecRule TX:DETECTION_PARANOIA_LEVEL \"@lt 3\" \"id:920016,phase:2,pass,nolog,skipAfter:END-REQUEST-920-PROTOCOL-ENFORCEMENT\"\n",
        "rule_id": "920",
        "sec_rule_id": "920016"
    },
    {
        "comment": "#\n# PL 3: This is a stricter sibling of 920270. Ascii range: Printable characters in the low range\n#\n# This rule is also triggered by the following exploit(s):\n# [ SAP CRM Java vulnerability CVE-2018-2380 - Exploit tested: https://www.exploit-db.com/exploits/44292 ]\n#\n",
        "content": "SecRule REQUEST_URI|REQUEST_HEADERS|ARGS|ARGS_NAMES|REQUEST_BODY \"@validateByteRange 32-36,38-126\" \\\n    \"id:920272,\\\n    phase:2,\\\n    block,\\\n    t:none,t:urlDecodeUni,\\\n    msg:'Invalid character in request (outside of printable chars below ascii 127)',\\\n    logdata:'%{MATCHED_VAR_NAME}=%{MATCHED_VAR}',\\\n    tag:'application-multi',\\\n    tag:'language-multi',\\\n    tag:'platform-multi',\\\n    tag:'attack-protocol',\\\n    tag:'OWASP_CRS',\\\n    tag:'capec/1000/210/272',\\\n    tag:'paranoia-level/3',\\\n    ver:'OWASP_CRS/3.4.0-dev',\\\n    severity:'CRITICAL',\\\n    setvar:'tx.inbound_anomaly_score_pl3=+%{tx.critical_anomaly_score}'\"\n",
        "description": "Invalid character in request (outside of printable chars below ascii 127)",
        "paranoia_level": "3",
        "rule_id": "920",
        "sec_rule_id": "920272",
        "severity": "CRITICAL",
        "tags": [
            "application-multi",
            "language-multi",
            "platform-multi",
            "attack-protocol",
            "OWASP_CRS",
            "capec/1000/210/272",
            "paranoia-level/3"
        ]
    },
    {
        "comment": "#\n# Missing Accept Header\n#\n# This rule has been moved to PL3\n#\n# -=[ Rule Logic ]=-\n# This rule generates a notice if the Accept header is missing.\n# RFC 7231 does not enforce the use of the Accept header.\n# It is just typical browser behavior to send and it can indicate a malicious client.\n#\n# Notice: The rule tries to avoid known false positives by ignoring\n# OPTIONS requests, CONNECT requests, and requests coming from known\n# offending User-Agents via two chained rules.\n# As ModSecurity only reports the match of the last matching rule,\n# the alert is misleading.\n#\n",
        "content": "SecRule &REQUEST_HEADERS:Accept \"@eq 0\" \\\n    \"id:920300,\\\n    phase:1,\\\n    pass,\\\n    t:none,\\\n    msg:'Request Missing an Accept Header',\\\n    tag:'application-multi',\\\n    tag:'language-multi',\\\n    tag:'platform-multi',\\\n    tag:'attack-protocol',\\\n    tag:'OWASP_CRS',\\\n    tag:'capec/1000/210/272',\\\n    tag:'PCI/6.5.10',\\\n    tag:'paranoia-level/3',\\\n    ver:'OWASP_CRS/3.4.0-dev',\\\n    severity:'NOTICE',\\\n    chain\"\n    SecRule REQUEST_METHOD \"!@rx ^(?:OPTIONS|CONNECT)$\" \\\n        \"chain\"\n        SecRule REQUEST_HEADERS:User-Agent \"!@pm AppleWebKit Android\" \\\n            \"t:none,\\\n            setvar:'tx.inbound_anomaly_score_pl3=+%{tx.notice_anomaly_score}'\"\n",
        "description": "Request Missing an Accept Header",
        "paranoia_level": "3",
        "rule_id": "920",
        "sec_rule_id": "920300",
        "severity": "NOTICE",
        "tags": [
            "application-multi",
            "language-multi",
            "platform-multi",
            "attack-protocol",
            "OWASP_CRS",
            "capec/1000/210/272",
            "PCI/6.5.10",
            "paranoia-level/3"
        ]
    },
    {
        "comment": "#\n# PL3: The little known x-up-devcap-post-charset request header can be used to submit\n# a request with a different encoding as an alternative to the charset parameter in\n# the Content-Type header. This can be used to circumvent charset restrictions on\n# the Content-Type header in ASP.NET.\n# Note that this only works in combination with a User-Agent prefix.\n#\n# This rule is based on a blog post by Soroush Dalili at\n# https://soroush.secproject.com/blog/2019/05/x-up-devcap-post-charset-header-in-aspnet-to-bypass-wafs-again/\n#\n",
        "content": "SecRule &REQUEST_HEADERS:x-up-devcap-post-charset \"@ge 1\" \\\n    \"id:920490,\\\n    phase:1,\\\n    block,\\\n    t:none,\\\n    msg:'Request header x-up-devcap-post-charset detected in combination with prefix \\'UP\\' to User-Agent',\\\n    logdata:'%{MATCHED_VAR_NAME}=%{MATCHED_VAR}',\\\n    tag:'language-aspnet',\\\n    tag:'platform-windows',\\\n    tag:'attack-protocol',\\\n    tag:'OWASP_CRS',\\\n    tag:'capec/1000/210/272',\\\n    tag:'paranoia-level/3',\\\n    ver:'OWASP_CRS/3.4.0-dev',\\\n    severity:'CRITICAL',\\\n    chain\"\n    SecRule REQUEST_HEADERS:User-Agent \"@rx ^(?i)up\" \\\n        \"t:none,\\\n        setvar:'tx.inbound_anomaly_score_pl3=+%{tx.critical_anomaly_score}'\"\n",
        "paranoia_level": "3",
        "rule_id": "920",
        "sec_rule_id": "920490",
        "severity": "CRITICAL",
        "tags": [
            "language-aspnet",
            "platform-windows",
            "attack-protocol",
            "OWASP_CRS",
            "capec/1000/210/272",
            "paranoia-level/3"
        ]
    },
    {
        "comment": "#\n# Cache-Control Request Header allow list\n#\n# -=[ Rule Logic ]=-\n# This rule aims to strictly allow list the Cache-Control request header\n# values and to blocks all violations. This should be useful to intercept\n# \"bad bot\" and tools that impersonate a real browser but with wrong request\n# header setup.\n#\n# The regular expression used on this rule tries to match multiple directives\n# in a single value, for example: \"max-stale=1, max-age=2\". This leads us to\n# use a regular expression that accepts a trailing comma to keep compatibility\n# with all regex engines and not PCRE only. For example: \"max-stale=1, max-age=2, \"\n#\n# Moreover, this regular expression allows duplicate directives sequence like:\n# \"max-stale, max-stale=1, no-cache, no-cache\".\n#\n# Standard Cache-Control directives that can be used by the client:\n#   - max-age=<seconds>\n#   - max-stale[=<seconds>]\n#   - min-fresh=<seconds>\n#   - no-cache\n#   - no-store\n#   - no-transform\n#   - only-if-cached\n#\n# References:\n# - https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Cache-Control\n# - https://regex101.com/r/CZ0Hxu/22\n#\n",
        "content": "SecRule &REQUEST_HEADERS:Cache-Control \"@gt 0\" \\\n    \"id:920510,\\\n    phase:1,\\\n    block,\\\n    t:none,\\\n    msg:'Invalid Cache-Control request header',\\\n    logdata:'Invalid Cache-Control value in request found within %{MATCHED_VAR_NAME}: %{MATCHED_VAR}',\\\n    tag:'application-multi',\\\n    tag:'language-multi',\\\n    tag:'platform-multi',\\\n    tag:'attack-protocol',\\\n    tag:'header-allowlist',\\\n    tag:'paranoia-level/3',\\\n    tag:'OWASP_CRS',\\\n    tag:'capec/1000/210/272',\\\n    ver:'OWASP_CRS/3.4.0-dev',\\\n    severity:'CRITICAL',\\\n    chain\"\n    SecRule REQUEST_HEADERS:Cache-Control \"!@rx ^(?:(?:max-age=[0-9]+|min-fresh=[0-9]+|no-cache|no-store|no-transform|only-if-cached|max-stale(?:=[0-9]+)?)(?:\\s*\\,\\s*|$)){1,7}$\" \\\n        \"setvar:'tx.inbound_anomaly_score_pl3=+%{tx.critical_anomaly_score}'\"\n",
        "paranoia_level": "3",
        "rule_id": "920",
        "sec_rule_id": "920510",
        "severity": "CRITICAL",
        "tags": [
            "application-multi",
            "language-multi",
            "platform-multi",
            "attack-protocol",
            "header-allowlist",
            "paranoia-level/3",
            "OWASP_CRS",
            "capec/1000/210/272"
        ]
    },
    {
        "comment": "#\n# This rule checks for valid Accept-Encoding headers\n#\n# This rule has a less strict sibling: 920520\n#\n# Regular expression generated from util/regexp-assemble/data/920521.data.\n# To update the regular expression run the following shell script\n# (consult util/regexp-assemble/README.md for details):\n#   util/regexp-assemble/regexp-assemble.py update 920521\n#\n",
        "content": "SecRule REQUEST_HEADERS:Accept-Encoding \"!@rx (?:x-(?:compress|gzip)|(?:pack200-)?gzip|aes128gcm|compress|identity|deflate|zstd|exi|^$|br|\\*)\" \\\n    \"id:920521,\\\n    phase:1,\\\n    block,\\\n    t:none,t:lowercase,\\\n    msg:'Illegal Accept-Encoding header',\\\n    logdata:'%{MATCHED_VAR}',\\\n    tag:'application-multi',\\\n    tag:'language-multi',\\\n    tag:'platform-multi',\\\n    tag:'attack-protocol',\\\n    tag:'paranoia-level/3',\\\n    tag:'OWASP_CRS',\\\n    tag:'capec/1000/255/153',\\\n    tag:'PCI/12.1',\\\n    ver:'OWASP_CRS/3.4.0-dev',\\\n    severity:'CRITICAL',\\\n    setvar:'tx.inbound_anomaly_score_pl3=+%{tx.critical_anomaly_score}'\"\n",
        "paranoia_level": "3",
        "rule_id": "920",
        "sec_rule_id": "920521",
        "severity": "CRITICAL",
        "tags": [
            "application-multi",
            "language-multi",
            "platform-multi",
            "attack-protocol",
            "paranoia-level/3",
            "OWASP_CRS",
            "capec/1000/255/153",
            "PCI/12.1"
        ]
    },
    {
        "comment": "",
        "content": "SecRule TX:DETECTION_PARANOIA_LEVEL \"@lt 4\" \"id:920017,phase:1,pass,nolog,skipAfter:END-REQUEST-920-PROTOCOL-ENFORCEMENT\"\n",
        "rule_id": "920",
        "sec_rule_id": "920017"
    },
    {
        "comment": "",
        "content": "SecRule TX:DETECTION_PARANOIA_LEVEL \"@lt 4\" \"id:920018,phase:2,pass,nolog,skipAfter:END-REQUEST-920-PROTOCOL-ENFORCEMENT\"\n",
        "rule_id": "920",
        "sec_rule_id": "920018"
    },
    {
        "comment": "#\n# This is a stricter sibling of rule 920200\n#\n",
        "content": "SecRule REQUEST_BASENAME \"@endsWith .pdf\" \\\n    \"id:920202,\\\n    phase:1,\\\n    block,\\\n    t:none,\\\n    msg:'Range: Too many fields for pdf request (6 or more)',\\\n    logdata:'%{MATCHED_VAR}',\\\n    tag:'application-multi',\\\n    tag:'language-multi',\\\n    tag:'platform-multi',\\\n    tag:'attack-protocol',\\\n    tag:'OWASP_CRS',\\\n    tag:'capec/1000/210/272',\\\n    tag:'paranoia-level/4',\\\n    ver:'OWASP_CRS/3.4.0-dev',\\\n    severity:'WARNING',\\\n    chain\"\n    SecRule REQUEST_HEADERS:Range|REQUEST_HEADERS:Request-Range \"@rx ^bytes=(?:(?:\\d+)?-(?:\\d+)?\\s*,?\\s*){6}\" \\\n        \"setvar:'tx.inbound_anomaly_score_pl4=+%{tx.warning_anomaly_score}'\"\n",
        "description": "Range: Too many fields for pdf request (6 or more)",
        "paranoia_level": "4",
        "rule_id": "920",
        "sec_rule_id": "920202",
        "severity": "WARNING",
        "tags": [
            "application-multi",
            "language-multi",
            "platform-multi",
            "attack-protocol",
            "OWASP_CRS",
            "capec/1000/210/272",
            "paranoia-level/4"
        ]
    },
    {
        "comment": "#\n# This is a stricter sibling of 920270.\n#\n# This rule is also triggered by the following exploit(s):\n# [ SAP CRM Java vulnerability CVE-2018-2380 - Exploit tested: https://www.exploit-db.com/exploits/44292 ]\n#\n",
        "content": "SecRule ARGS|ARGS_NAMES|REQUEST_BODY \"@validateByteRange 38,44-46,48-58,61,65-90,95,97-122\" \\\n    \"id:920273,\\\n    phase:2,\\\n    block,\\\n    t:none,t:urlDecodeUni,\\\n    msg:'Invalid character in request (outside of very strict set)',\\\n    logdata:'%{MATCHED_VAR_NAME}=%{MATCHED_VAR}',\\\n    tag:'application-multi',\\\n    tag:'language-multi',\\\n    tag:'platform-multi',\\\n    tag:'attack-protocol',\\\n    tag:'OWASP_CRS',\\\n    tag:'capec/1000/210/272',\\\n    tag:'paranoia-level/4',\\\n    ver:'OWASP_CRS/3.4.0-dev',\\\n    severity:'CRITICAL',\\\n    setvar:'tx.inbound_anomaly_score_pl4=+%{tx.critical_anomaly_score}'\"\n",
        "description": "Invalid character in request (outside of very strict set)",
        "paranoia_level": "4",
        "rule_id": "920",
        "sec_rule_id": "920273",
        "severity": "CRITICAL",
        "tags": [
            "application-multi",
            "language-multi",
            "platform-multi",
            "attack-protocol",
            "OWASP_CRS",
            "capec/1000/210/272",
            "paranoia-level/4"
        ]
    },
    {
        "comment": "#\n# This is a stricter sibling of 920270.\n#\n",
        "content": "SecRule REQUEST_HEADERS|!REQUEST_HEADERS:User-Agent|!REQUEST_HEADERS:Referer|!REQUEST_HEADERS:Cookie|!REQUEST_HEADERS:Sec-Fetch-User|!REQUEST_HEADERS:Sec-CH-UA|!REQUEST_HEADERS:Sec-CH-UA-Mobile \"@validateByteRange 32,34,38,42-59,61,65-90,95,97-122\" \\\n    \"id:920274,\\\n    phase:1,\\\n    block,\\\n    t:none,t:urlDecodeUni,\\\n    msg:'Invalid character in request headers (outside of very strict set)',\\\n    logdata:'%{MATCHED_VAR_NAME}=%{MATCHED_VAR}',\\\n    tag:'application-multi',\\\n    tag:'language-multi',\\\n    tag:'platform-multi',\\\n    tag:'attack-protocol',\\\n    tag:'OWASP_CRS',\\\n    tag:'capec/1000/210/272',\\\n    tag:'paranoia-level/4',\\\n    ver:'OWASP_CRS/3.4.0-dev',\\\n    severity:'CRITICAL',\\\n    setvar:'tx.inbound_anomaly_score_pl4=+%{tx.critical_anomaly_score}'\"\n",
        "description": "Invalid character in request headers (outside of very strict set)",
        "paranoia_level": "4",
        "rule_id": "920",
        "sec_rule_id": "920274",
        "severity": "CRITICAL",
        "tags": [
            "application-multi",
            "language-multi",
            "platform-multi",
            "attack-protocol",
            "OWASP_CRS",
            "capec/1000/210/272",
            "paranoia-level/4"
        ]
    },
    {
        "comment": "#\n# This is a stricter sibling of 920270.\n# The headers of this rule are Structured Header booleans, for which only `?0`,\n# and `?1` are inconspicuous.\n# Structured Header boolean: https://tools.ietf.org/html/draft-ietf-httpbis-header-structure-19#section-3.3.6\n# Sec-Fetch-User: https://www.w3.org/TR/fetch-metadata/#http-headerdef-sec-fetch-user\n# Sec-CH-UA-Mobile: https://wicg.github.io/ua-client-hints/#sec-ch-ua-mobile\n#\n",
        "content": "SecRule REQUEST_HEADERS:Sec-Fetch-User|REQUEST_HEADERS:Sec-CH-UA-Mobile \"!@rx ^(?:\\?[01])?$\" \\\n    \"id:920275,\\\n    phase:1,\\\n    block,\\\n    t:none,t:urlDecodeUni,\\\n    msg:'Invalid character in request headers (outside of very strict set)',\\\n    logdata:'%{MATCHED_VAR_NAME}=%{MATCHED_VAR}',\\\n    tag:'application-multi',\\\n    tag:'language-multi',\\\n    tag:'platform-multi',\\\n    tag:'attack-protocol',\\\n    tag:'OWASP_CRS',\\\n    tag:'capec/1000/210/272',\\\n    tag:'paranoia-level/4',\\\n    ver:'OWASP_CRS/3.4.0-dev',\\\n    severity:'CRITICAL',\\\n    setvar:'tx.inbound_anomaly_score_pl4=+%{tx.critical_anomaly_score}'\"\n",
        "paranoia_level": "4",
        "rule_id": "920",
        "sec_rule_id": "920275",
        "severity": "CRITICAL",
        "tags": [
            "application-multi",
            "language-multi",
            "platform-multi",
            "attack-protocol",
            "OWASP_CRS",
            "capec/1000/210/272",
            "paranoia-level/4"
        ]
    },
    {
        "comment": "# -=[ Abnormal Character Escapes ]=-\n#\n# [ Rule Logic ]\n# Consider the following payload: arg=cat+/e\\tc/pa\\ssw\\d\n# Here, \\s and \\d were only used to obfuscate the string passwd and a lot of\n# parsers will silently ignore the non-necessary escapes. The case with \\t is\n# a bit different though, as \\t is a natural escape for the TAB character,\n# so we will avoid this (and \\n, \\r, etc.).\n#\n# This rule aims to detect non-necessary, abnormal escapes. You could say it is\n# a nice way to forbid the backslash character where it is not needed.\n#\n# This is a new rule at paranoia level 4. We expect quite a few false positives\n# for this rule and we will later evaluate if the rule makes any sense at all.\n# The rule is redundant with 920273 and 920274 in PL4. But if the rule proofs\n# to be useful and false positives remain at a reasonable level, then it might\n# be shifted to PL3 in a future release, where it would be the only rule\n# covering the backslash escape.\n#\n# We forbid backslashes followed by a list of basic ascii characters - unless\n# the backslash is preceded by another backslash.\n#\n# This rule is also triggered by the following exploit(s):\n# [ SAP CRM Java vulnerability CVE-2018-2380 - Exploit tested: https://www.exploit-db.com/exploits/44292 ]\n#\n",
        "content": "SecRule REQUEST_URI|REQUEST_HEADERS|ARGS|ARGS_NAMES \"@rx (?:^|[^\\x5c])\\x5c[cdeghijklmpqwxyz123456789]\" \\\n    \"id:920460,\\\n    phase:2,\\\n    block,\\\n    capture,\\\n    t:none,t:htmlEntityDecode,t:lowercase,\\\n    msg:'Abnormal character escapes in request',\\\n    logdata:'Matched Data: %{TX.0} found within %{MATCHED_VAR_NAME}: %{MATCHED_VAR}',\\\n    tag:'application-multi',\\\n    tag:'language-multi',\\\n    tag:'platform-multi',\\\n    tag:'attack-protocol',\\\n    tag:'paranoia-level/4',\\\n    tag:'OWASP_CRS',\\\n    tag:'capec/1000/153/267',\\\n    ctl:auditLogParts=+E,\\\n    ver:'OWASP_CRS/3.4.0-dev',\\\n    severity:'CRITICAL',\\\n    setvar:'tx.http_violation_score=+%{tx.critical_anomaly_score}',\\\n    setvar:'tx.inbound_anomaly_score_pl4=+%{tx.critical_anomaly_score}'\"\n",
        "description": "Abnormal character escape detected",
        "paranoia_level": "4",
        "rule_id": "920",
        "sec_rule_id": "920460",
        "severity": "CRITICAL",
        "tags": [
            "application-multi",
            "language-multi",
            "platform-multi",
            "attack-protocol",
            "paranoia-level/4",
            "OWASP_CRS",
            "capec/1000/153/267"
        ]
    },
    {
        "comment": "#\n# -= Paranoia Level 0 (empty) =- (apply unconditionally)\n#\n",
        "content": "SecRule TX:DETECTION_PARANOIA_LEVEL \"@lt 1\" \"id:921011,phase:1,pass,nolog,skipAfter:END-REQUEST-921-PROTOCOL-ATTACK\"\n",
        "rule_id": "921",
        "sec_rule_id": "921011"
    },
    {
        "comment": "",
        "content": "SecRule TX:DETECTION_PARANOIA_LEVEL \"@lt 1\" \"id:921012,phase:2,pass,nolog,skipAfter:END-REQUEST-921-PROTOCOL-ATTACK\"\n",
        "rule_id": "921",
        "sec_rule_id": "921012"
    },
    {
        "comment": "#\n# -=[ HTTP Request Smuggling ]=-\n#\n# [ Rule Logic ]\n# This rule looks for a HTTP / WEBDAV method name in combination with the word http/\\d or a CR/LF character.\n# This would point to an attempt to inject a 2nd request into the request, thus bypassing\n# tests carried out on the primary request.\n#\n# [ References ]\n# http://projects.webappsec.org/HTTP-Request-Smuggling\n#\n",
        "content": "SecRule ARGS_NAMES|ARGS|REQUEST_BODY|XML:/* \"@rx (?:get|post|head|options|connect|put|delete|trace|track|patch|propfind|propatch|mkcol|copy|move|lock|unlock)\\s+[^\\s]+\\s+http/\\d\" \\\n    \"id:921110,\\\n    phase:2,\\\n    block,\\\n    capture,\\\n    t:none,t:htmlEntityDecode,t:lowercase,\\\n    msg:'HTTP Request Smuggling Attack',\\\n    logdata:'Matched Data: %{TX.0} found within %{MATCHED_VAR_NAME}: %{MATCHED_VAR}',\\\n    tag:'application-multi',\\\n    tag:'language-multi',\\\n    tag:'platform-multi',\\\n    tag:'attack-protocol',\\\n    tag:'paranoia-level/1',\\\n    tag:'OWASP_CRS',\\\n    tag:'capec/1000/210/272/220/33',\\\n    ctl:auditLogParts=+E,\\\n    ver:'OWASP_CRS/3.4.0-dev',\\\n    severity:'CRITICAL',\\\n    setvar:'tx.http_violation_score=+%{tx.critical_anomaly_score}',\\\n    setvar:'tx.inbound_anomaly_score_pl1=+%{tx.critical_anomaly_score}'\"\n",
        "description": "HTTP Request Smuggling Attack",
        "paranoia_level": "1",
        "rule_id": "921",
        "sec_rule_id": "921110",
        "severity": "CRITICAL",
        "tags": [
            "application-multi",
            "language-multi",
            "platform-multi",
            "attack-protocol",
            "paranoia-level/1",
            "OWASP_CRS",
            "capec/1000/210/272/220/33"
        ]
    },
    {
        "comment": "#\n# -=[ HTTP Response Splitting ]=-\n#\n# [ Rule Logic ]\n# These rules look for Carriage Return (CR) %0d and Linefeed (LF) %0a characters.\n# These characters may cause problems if the data is returned in a respones header and\n# may be interpreted by an intermediary proxy server and treated as two separate\n# responses.\n#\n# [ References ]\n# http://projects.webappsec.org/HTTP-Response-Splitting\n#\n",
        "content": "SecRule REQUEST_COOKIES|!REQUEST_COOKIES:/__utm/|REQUEST_COOKIES_NAMES|ARGS_NAMES|ARGS|XML:/* \"@rx [\\r\\n]\\W*?(?:content-(?:type|length)|set-cookie|location):\\s*\\w\" \\\n    \"id:921120,\\\n    phase:2,\\\n    block,\\\n    capture,\\\n    t:none,t:lowercase,\\\n    msg:'HTTP Response Splitting Attack',\\\n    logdata:'Matched Data: %{TX.0} found within %{MATCHED_VAR_NAME}: %{MATCHED_VAR}',\\\n    tag:'application-multi',\\\n    tag:'language-multi',\\\n    tag:'platform-multi',\\\n    tag:'attack-protocol',\\\n    tag:'paranoia-level/1',\\\n    tag:'OWASP_CRS',\\\n    tag:'capec/1000/210/272/220/34',\\\n    ctl:auditLogParts=+E,\\\n    ver:'OWASP_CRS/3.4.0-dev',\\\n    severity:'CRITICAL',\\\n    setvar:'tx.http_violation_score=+%{tx.critical_anomaly_score}',\\\n    setvar:'tx.inbound_anomaly_score_pl1=+%{tx.critical_anomaly_score}'\"\n",
        "description": "HTTP Response Splitting Attack",
        "paranoia_level": "1",
        "rule_id": "921",
        "sec_rule_id": "921120",
        "severity": "CRITICAL",
        "tags": [
            "application-multi",
            "language-multi",
            "platform-multi",
            "attack-protocol",
            "paranoia-level/1",
            "OWASP_CRS",
            "capec/1000/210/272/220/34"
        ]
    },
    {
        "comment": "",
        "content": "SecRule REQUEST_COOKIES|!REQUEST_COOKIES:/__utm/|REQUEST_COOKIES_NAMES|ARGS_NAMES|ARGS|XML:/* \"@rx (?:\\bhttp/\\d|<(?:html|meta)\\b)\" \\\n    \"id:921130,\\\n    phase:2,\\\n    block,\\\n    capture,\\\n    t:none,t:htmlEntityDecode,t:lowercase,\\\n    msg:'HTTP Response Splitting Attack',\\\n    logdata:'Matched Data: %{TX.0} found within %{MATCHED_VAR_NAME}: %{MATCHED_VAR}',\\\n    tag:'application-multi',\\\n    tag:'language-multi',\\\n    tag:'platform-multi',\\\n    tag:'attack-protocol',\\\n    tag:'paranoia-level/1',\\\n    tag:'OWASP_CRS',\\\n    tag:'capec/1000/210/272/220/34',\\\n    ctl:auditLogParts=+E,\\\n    ver:'OWASP_CRS/3.4.0-dev',\\\n    severity:'CRITICAL',\\\n    setvar:'tx.http_violation_score=+%{tx.critical_anomaly_score}',\\\n    setvar:'tx.inbound_anomaly_score_pl1=+%{tx.critical_anomaly_score}'\"\n",
        "description": "HTTP Response Splitting Attack",
        "paranoia_level": "1",
        "rule_id": "921",
        "sec_rule_id": "921130",
        "severity": "CRITICAL",
        "tags": [
            "application-multi",
            "language-multi",
            "platform-multi",
            "attack-protocol",
            "paranoia-level/1",
            "OWASP_CRS",
            "capec/1000/210/272/220/34"
        ]
    },
    {
        "comment": "#\n# -=[ HTTP Header Injection ]=-\n#\n# [ Rule Logic ]\n# These rules look for Carriage Return (CR) %0d and Linefeed (LF) %0a characters,\n# on their own or in combination with header field names.\n# These characters may cause problems if the data is returned in a response header\n# and interpreted by the client.\n# The rules are similar to rules defending against the HTTP Request Splitting and\n# Request Smuggling rules.\n#\n# [ References ]\n# https://en.wikipedia.org/wiki/HTTP_header_injection\n#\n",
        "content": "SecRule REQUEST_HEADERS_NAMES|REQUEST_HEADERS \"@rx [\\n\\r]\" \\\n    \"id:921140,\\\n    phase:1,\\\n    block,\\\n    capture,\\\n    t:none,t:htmlEntityDecode,\\\n    msg:'HTTP Header Injection Attack via headers',\\\n    logdata:'Matched Data: %{TX.0} found within %{MATCHED_VAR_NAME}: %{MATCHED_VAR}',\\\n    tag:'application-multi',\\\n    tag:'language-multi',\\\n    tag:'platform-multi',\\\n    tag:'attack-protocol',\\\n    tag:'paranoia-level/1',\\\n    tag:'OWASP_CRS',\\\n    tag:'capec/1000/210/272/220/273',\\\n    ctl:auditLogParts=+E,\\\n    ver:'OWASP_CRS/3.4.0-dev',\\\n    severity:'CRITICAL',\\\n    setvar:'tx.http_violation_score=+%{tx.critical_anomaly_score}',\\\n    setvar:'tx.inbound_anomaly_score_pl1=+%{tx.critical_anomaly_score}'\"\n",
        "description": "HTTP Header Injection Attack via headers",
        "paranoia_level": "1",
        "rule_id": "921",
        "sec_rule_id": "921140",
        "severity": "CRITICAL",
        "tags": [
            "application-multi",
            "language-multi",
            "platform-multi",
            "attack-protocol",
            "paranoia-level/1",
            "OWASP_CRS",
            "capec/1000/210/272/220/273"
        ]
    },
    {
        "comment": "# Detect newlines in argument names.\n# Checking for GET arguments has been moved to paranoia level 2 (921151)\n# in order to mitigate possible false positives.\n#\n# This rule is also triggered by the following exploit(s):\n# [ SAP CRM Java vulnerability CVE-2018-2380 - Exploit tested: https://www.exploit-db.com/exploits/44292 ]\n#\n",
        "content": "SecRule ARGS_NAMES \"@rx [\\n\\r]\" \\\n    \"id:921150,\\\n    phase:2,\\\n    block,\\\n    capture,\\\n    t:none,t:htmlEntityDecode,\\\n    msg:'HTTP Header Injection Attack via payload (CR/LF detected)',\\\n    logdata:'Matched Data: %{TX.0} found within %{MATCHED_VAR_NAME}: %{MATCHED_VAR}',\\\n    tag:'application-multi',\\\n    tag:'language-multi',\\\n    tag:'platform-multi',\\\n    tag:'attack-protocol',\\\n    tag:'paranoia-level/1',\\\n    tag:'OWASP_CRS',\\\n    tag:'capec/1000/210/272/220/33',\\\n    ctl:auditLogParts=+E,\\\n    ver:'OWASP_CRS/3.4.0-dev',\\\n    severity:'CRITICAL',\\\n    setvar:'tx.http_violation_score=+%{tx.critical_anomaly_score}',\\\n    setvar:'tx.inbound_anomaly_score_pl1=+%{tx.critical_anomaly_score}'\"\n",
        "description": "HTTP Header Injection Attack via payload (CR/LF detected)",
        "paranoia_level": "1",
        "rule_id": "921",
        "sec_rule_id": "921150",
        "severity": "CRITICAL",
        "tags": [
            "application-multi",
            "language-multi",
            "platform-multi",
            "attack-protocol",
            "paranoia-level/1",
            "OWASP_CRS",
            "capec/1000/210/272/220/33"
        ]
    },
    {
        "comment": "",
        "content": "SecRule ARGS_GET_NAMES|ARGS_GET \"@rx [\\n\\r]+(?:\\s|location|refresh|(?:set-)?cookie|(?:x-)?(?:forwarded-(?:for|host|server)|host|via|remote-ip|remote-addr|originating-IP))\\s*:\" \\\n    \"id:921160,\\\n    phase:1,\\\n    block,\\\n    capture,\\\n    t:none,t:htmlEntityDecode,t:lowercase,\\\n    msg:'HTTP Header Injection Attack via payload (CR/LF and header-name detected)',\\\n    logdata:'Matched Data: %{TX.0} found within %{MATCHED_VAR_NAME}: %{MATCHED_VAR}',\\\n    tag:'application-multi',\\\n    tag:'language-multi',\\\n    tag:'platform-multi',\\\n    tag:'attack-protocol',\\\n    tag:'paranoia-level/1',\\\n    tag:'OWASP_CRS',\\\n    tag:'capec/1000/210/272/220/33',\\\n    ctl:auditLogParts=+E,\\\n    ver:'OWASP_CRS/3.4.0-dev',\\\n    severity:'CRITICAL',\\\n    setvar:'tx.http_violation_score=+%{tx.critical_anomaly_score}',\\\n    setvar:'tx.inbound_anomaly_score_pl1=+%{tx.critical_anomaly_score}'\"\n",
        "description": "HTTP Header Injection Attack via payload (CR/LF and header-name detected)",
        "paranoia_level": "1",
        "rule_id": "921",
        "sec_rule_id": "921160",
        "severity": "CRITICAL",
        "tags": [
            "application-multi",
            "language-multi",
            "platform-multi",
            "attack-protocol",
            "paranoia-level/1",
            "OWASP_CRS",
            "capec/1000/210/272/220/33"
        ]
    },
    {
        "comment": "# -=[ HTTP Splitting ]=-\n#\n# This rule detect \\n or \\r in the REQUEST FILENAME\n# Reference: https://www.owasp.org/index.php/Testing_for_HTTP_Splitting/Smuggling_(OTG-INPVAL-016)\n#\n",
        "content": "SecRule REQUEST_FILENAME \"@rx [\\n\\r]\" \\\n    \"id:921190,\\\n    phase:1,\\\n    block,\\\n    t:none,t:urlDecodeUni,\\\n    msg:'HTTP Splitting (CR/LF in request filename detected)',\\\n    logdata:'Matched Data: %{TX.0} found within %{MATCHED_VAR_NAME}: %{MATCHED_VAR}',\\\n    tag:'application-multi',\\\n    tag:'language-multi',\\\n    tag:'platform-multi',\\\n    tag:'attack-protocol',\\\n    tag:'paranoia-level/1',\\\n    tag:'OWASP_CRS',\\\n    tag:'capec/1000/210/272/220/34',\\\n    ctl:auditLogParts=+E,\\\n    ver:'OWASP_CRS/3.4.0-dev',\\\n    severity:'CRITICAL',\\\n    setvar:'tx.http_violation_score=+%{tx.critical_anomaly_score}',\\\n    setvar:'tx.inbound_anomaly_score_pl1=+%{tx.critical_anomaly_score}'\"\n",
        "paranoia_level": "1",
        "rule_id": "921",
        "sec_rule_id": "921190",
        "severity": "CRITICAL",
        "tags": [
            "application-multi",
            "language-multi",
            "platform-multi",
            "attack-protocol",
            "paranoia-level/1",
            "OWASP_CRS",
            "capec/1000/210/272/220/34"
        ]
    },
    {
        "comment": "#\n# -=[ LDAP Injection ]=-\n#\n# [ Rule Logic ]\n#\n# This is a rule trying to prevent LDAP injection. It is based on a BlackHat presentation by Alonso Parada\n# and regex writing by Denis Kolegov.\n#\n# [ References ]\n# * https://www.blackhat.com/presentations/bh-europe-08/Alonso-Parada/Whitepaper/bh-eu-08-alonso-parada-WP.pdf\n# * https://blog.ripstech.com/2017/joomla-takeover-in-20-seconds-with-ldap-injection-cve-2017-14596/\n# * https://github.com/SpiderLabs/owasp-modsecurity-crs/issues/276#issue-126581660\n",
        "content": "SecRule REQUEST_COOKIES|!REQUEST_COOKIES:/__utm/|REQUEST_COOKIES_NAMES|ARGS_NAMES|ARGS|XML:/* \"@rx ^[^:\\(\\)\\&\\|\\!\\<\\>\\~]*\\)\\s*(?:\\((?:[^,\\(\\)\\=\\&\\|\\!\\<\\>\\~]+[><~]?=|\\s*[&!|]\\s*(?:\\)|\\()?\\s*)|\\)\\s*\\(\\s*[\\&\\|\\!]\\s*|[&!|]\\s*\\([^\\(\\)\\=\\&\\|\\!\\<\\>\\~]+[><~]?=[^:\\(\\)\\&\\|\\!\\<\\>\\~]*)\" \\\n    \"id:921200,\\\n    phase:2,\\\n    block,\\\n    capture,\\\n    t:none,t:htmlEntityDecode,\\\n    msg:'LDAP Injection Attack',\\\n    logdata:'Matched Data: %{TX.0} found within %{MATCHED_VAR_NAME}: %{MATCHED_VAR}',\\\n    tag:'application-multi',\\\n    tag:'language-ldap',\\\n    tag:'platform-multi',\\\n    tag:'paranoia-level/1',\\\n    tag:'OWASP_CRS',\\\n    tag:'capec/1000/152/248/136',\\\n    ctl:auditLogParts=+E,\\\n    ver:'OWASP_CRS/3.4.0-dev',\\\n    severity:'CRITICAL',\\\n    setvar:'tx.inbound_anomaly_score_pl1=+%{tx.critical_anomaly_score}'\"\n",
        "paranoia_level": "1",
        "rule_id": "921",
        "sec_rule_id": "921200",
        "severity": "CRITICAL",
        "tags": [
            "application-multi",
            "language-ldap",
            "platform-multi",
            "paranoia-level/1",
            "OWASP_CRS",
            "capec/1000/152/248/136"
        ]
    },
    {
        "comment": "",
        "content": "SecRule TX:DETECTION_PARANOIA_LEVEL \"@lt 2\" \"id:921013,phase:1,pass,nolog,skipAfter:END-REQUEST-921-PROTOCOL-ATTACK\"\n",
        "rule_id": "921",
        "sec_rule_id": "921013"
    },
    {
        "comment": "",
        "content": "SecRule TX:DETECTION_PARANOIA_LEVEL \"@lt 2\" \"id:921014,phase:2,pass,nolog,skipAfter:END-REQUEST-921-PROTOCOL-ATTACK\"\n",
        "rule_id": "921",
        "sec_rule_id": "921014"
    },
    {
        "comment": "# Detect newlines in GET argument values.\n# These may point to a HTTP header injection attack, but can also sometimes\n# occur in benign query parameters.\n#\n# See also: rule 921140, 921150\n#\n",
        "content": "SecRule ARGS_GET \"@rx [\\n\\r]\" \\\n    \"id:921151,\\\n    phase:1,\\\n    block,\\\n    capture,\\\n    t:none,t:urlDecodeUni,t:htmlEntityDecode,\\\n    msg:'HTTP Header Injection Attack via payload (CR/LF detected)',\\\n    logdata:'Matched Data: %{TX.0} found within %{MATCHED_VAR_NAME}: %{MATCHED_VAR}',\\\n    tag:'application-multi',\\\n    tag:'language-multi',\\\n    tag:'platform-multi',\\\n    tag:'attack-protocol',\\\n    tag:'paranoia-level/2',\\\n    tag:'OWASP_CRS',\\\n    tag:'capec/1000/210/272/220/33',\\\n    ctl:auditLogParts=+E,\\\n    ver:'OWASP_CRS/3.4.0-dev',\\\n    severity:'CRITICAL',\\\n    setvar:'tx.http_violation_score=+%{tx.critical_anomaly_score}',\\\n    setvar:'tx.inbound_anomaly_score_pl2=+%{tx.critical_anomaly_score}'\"\n",
        "description": "HTTP Header Injection Attack via payload (CR/LF detected)",
        "paranoia_level": "2",
        "rule_id": "921",
        "sec_rule_id": "921151",
        "severity": "CRITICAL",
        "tags": [
            "application-multi",
            "language-multi",
            "platform-multi",
            "attack-protocol",
            "paranoia-level/2",
            "OWASP_CRS",
            "capec/1000/210/272/220/33"
        ]
    },
    {
        "comment": "",
        "content": "SecRule TX:DETECTION_PARANOIA_LEVEL \"@lt 3\" \"id:921015,phase:1,pass,nolog,skipAfter:END-REQUEST-921-PROTOCOL-ATTACK\"\n",
        "rule_id": "921",
        "sec_rule_id": "921015"
    },
    {
        "comment": "",
        "content": "SecRule TX:DETECTION_PARANOIA_LEVEL \"@lt 3\" \"id:921016,phase:2,pass,nolog,skipAfter:END-REQUEST-921-PROTOCOL-ATTACK\"\n",
        "rule_id": "921",
        "sec_rule_id": "921016"
    },
    {
        "comment": "# -=[ HTTP Parameter Pollution ]=-\n#\n# [ Rule Logic ]\n# These rules look for multiple parameters with the same name.\n# 921170 counts the occurrences of the individual parameters.\n# 921180 checks if any counter is > 1.\n#\n# One HPP attack vector is to try evade signature filters by distributing the\n# attack payload across multiple parameters with the same name.\n# This works as many security devices only apply signatures to individual\n# parameter payloads, however the back-end web application may (in the case\n# of ASP.NET) consolidate all of the payloads into one thus making the\n# attack payload active.\n#\n# [ References ]\n# http://tacticalwebappsec.blogspot.com/2009/05/http-parameter-pollution.html\n# https://capec.mitre.org/data/definitions/460.html\n#\n",
        "content": "SecRule ARGS_NAMES \"@rx .\" \\\n    \"id:921170,\\\n    phase:2,\\\n    pass,\\\n    nolog,\\\n    tag:'application-multi',\\\n    tag:'language-multi',\\\n    tag:'platform-multi',\\\n    tag:'attack-protocol',\\\n    tag:'paranoia-level/3',\\\n    tag:'OWASP_CRS',\\\n    tag:'capec/1000/152/137/15/460',\\\n    ver:'OWASP_CRS/3.4.0-dev',\\\n    setvar:'TX.paramcounter_%{MATCHED_VAR_NAME}=+1'\"\n",
        "paranoia_level": "3",
        "rule_id": "921",
        "sec_rule_id": "921170",
        "tags": [
            "application-multi",
            "language-multi",
            "platform-multi",
            "attack-protocol",
            "paranoia-level/3",
            "OWASP_CRS",
            "capec/1000/152/137/15/460"
        ]
    },
    {
        "comment": "",
        "content": "SecRule TX:/paramcounter_.*/ \"@gt 1\" \\\n    \"id:921180,\\\n    phase:2,\\\n    pass,\\\n    msg:'HTTP Parameter Pollution (%{TX.1})',\\\n    logdata:'Matched Data: %{TX.0} found within %{MATCHED_VAR_NAME}: %{MATCHED_VAR}',\\\n    tag:'application-multi',\\\n    tag:'language-multi',\\\n    tag:'platform-multi',\\\n    tag:'attack-protocol',\\\n    tag:'OWASP_CRS',\\\n    tag:'capec/1000/152/137/15/460',\\\n    tag:'paranoia-level/3',\\\n    ver:'OWASP_CRS/3.4.0-dev',\\\n    severity:'CRITICAL',\\\n    chain\"\n    SecRule MATCHED_VARS_NAMES \"@rx TX:paramcounter_(.*)\" \\\n        \"capture,\\\n        setvar:'tx.http_violation_score=+%{tx.critical_anomaly_score}',\\\n        setvar:'tx.inbound_anomaly_score_pl3=+%{tx.critical_anomaly_score}'\"\n",
        "description": "HTTP Parameter Pollution (%{TX.1})",
        "paranoia_level": "3",
        "rule_id": "921",
        "sec_rule_id": "921180",
        "severity": "CRITICAL",
        "tags": [
            "application-multi",
            "language-multi",
            "platform-multi",
            "attack-protocol",
            "OWASP_CRS",
            "capec/1000/152/137/15/460",
            "paranoia-level/3"
        ]
    },
    {
        "comment": "",
        "content": "SecRule TX:DETECTION_PARANOIA_LEVEL \"@lt 4\" \"id:921017,phase:1,pass,nolog,skipAfter:END-REQUEST-921-PROTOCOL-ATTACK\"\n",
        "rule_id": "921",
        "sec_rule_id": "921017"
    },
    {
        "comment": "",
        "content": "SecRule TX:DETECTION_PARANOIA_LEVEL \"@lt 4\" \"id:921018,phase:2,pass,nolog,skipAfter:END-REQUEST-921-PROTOCOL-ATTACK\"\n",
        "rule_id": "921",
        "sec_rule_id": "921018"
    },
    {
        "comment": "#\n# -= Paranoia Level 0 (empty) =- (apply unconditionally)\n#\n",
        "content": "SecRule TX:DETECTION_PARANOIA_LEVEL \"@lt 1\" \"id:930011,phase:1,pass,nolog,skipAfter:END-REQUEST-930-APPLICATION-ATTACK-LFI\"\n",
        "rule_id": "930",
        "sec_rule_id": "930011"
    },
    {
        "comment": "",
        "content": "SecRule TX:DETECTION_PARANOIA_LEVEL \"@lt 1\" \"id:930012,phase:2,pass,nolog,skipAfter:END-REQUEST-930-APPLICATION-ATTACK-LFI\"\n",
        "rule_id": "930",
        "sec_rule_id": "930012"
    },
    {
        "comment": "#\n# -=[ Directory Traversal Attacks ]=-\n#\n# Ref: https://github.com/wireghoul/dotdotpwn\n#\n# [ Encoded /../ Payloads ]\n#\n# Regular expression generated from util/regexp-assemble/data/930100-slashes.data and\n# util/regexp-assemble/data/930100-dots.data.\n# To update the regular expression run the following shell script\n# (consult util/regexp-assemble/README.md for details):\n#   cd util/regexp-assemble\n#   ./regexp-assemble.py generate 930100-slashes # SLASHES PATTERN\n#   ./regexp-assemble.py generate 930100-dots # DOTS PATTERN\n# Prepend `(?i)` to the two patterns above to produce the following sequence\n# SLASHES PATTERN before *and* after DOTS PATTERN):\n#   (?i)[SLASHES PATTERN][DOTS PATTERN][SLASHES PATTERN]\n#\n",
        "content": "SecRule REQUEST_URI_RAW|ARGS|REQUEST_HEADERS|!REQUEST_HEADERS:Referer|FILES|XML:/* \"@rx (?i)(?:%(?:c(?:0%(?:[2aq]f|5c|9v)|1%(?:[19p]c|8s|af))|2(?:5(?:c(?:0%25af|1%259c)|2f|5c)|%46|f)|(?:(?:f(?:8%8)?0%8|e)0%80%a|bg%q)f|%3(?:2(?:%(?:%6|4)6|F)|5%%63)|u(?:221[56]|002f|EFC8|F025)|1u|5c)|0x(?:2f|5c)|\\/|\\x5c)(?:%(?:(?:f(?:(?:c%80|8)%8)?0%8|e)0%80%ae|2(?:(?:5(?:c0%25a|2))?e|%45)|u(?:(?:002|ff0)e|2024)|%32(?:%(?:%6|4)5|E)|c0(?:%[256aef]e|\\.))|\\.(?:%0[01]|\\?)?|\\?\\.?|0x2e){2,3}(?:%(?:c(?:0%(?:[2aq]f|5c|9v)|1%(?:[19p]c|8s|af))|2(?:5(?:c(?:0%25af|1%259c)|2f|5c)|%46|f)|(?:(?:f(?:8%8)?0%8|e)0%80%a|bg%q)f|%3(?:2(?:%(?:%6|4)6|F)|5%%63)|u(?:221[56]|002f|EFC8|F025)|1u|5c)|0x(?:2f|5c)|\\/|\\x5c)\" \\\n    \"id:930100,\\\n    phase:2,\\\n    block,\\\n    capture,\\\n    t:none,\\\n    msg:'Path Traversal Attack (/../) or (/.../)',\\\n    logdata:'Matched Data: %{TX.0} found within %{MATCHED_VAR_NAME}: %{MATCHED_VAR}',\\\n    tag:'application-multi',\\\n    tag:'language-multi',\\\n    tag:'platform-multi',\\\n    tag:'attack-lfi',\\\n    tag:'paranoia-level/1',\\\n    tag:'OWASP_CRS',\\\n    tag:'capec/1000/255/153/126',\\\n    ver:'OWASP_CRS/3.4.0-dev',\\\n    severity:'CRITICAL',\\\n    setvar:'tx.inbound_anomaly_score_pl1=+%{tx.critical_anomaly_score}',\\\n    setvar:'tx.lfi_score=+%{tx.critical_anomaly_score}'\"\n",
        "description": "Path Traversal Attack (/../)",
        "paranoia_level": "1",
        "rule_id": "930",
        "sec_rule_id": "930100",
        "severity": "CRITICAL",
        "tags": [
            "application-multi",
            "language-multi",
            "platform-multi",
            "attack-lfi",
            "paranoia-level/1",
            "OWASP_CRS",
            "capec/1000/255/153/126"
        ]
    },
    {
        "comment": "#\n# [ Decoded /../ Payloads ]\n#\n# To prevent '..' from triggering, the regexp is split into two parts:\n# - ../\n# - /..\n# OR\n# - .../\n# - /...\n",
        "content": "SecRule REQUEST_URI|ARGS|REQUEST_HEADERS|!REQUEST_HEADERS:Referer|FILES|XML:/* \"@rx (?:(?:^|[\\x5c/])\\.{2,3}[\\x5c/]|[\\x5c/]\\.{2,3}(?:[\\x5c/]|$))\" \\\n    \"id:930110,\\\n    phase:2,\\\n    block,\\\n    capture,\\\n    t:none,t:utf8toUnicode,t:urlDecodeUni,t:removeNulls,t:cmdLine,\\\n    msg:'Path Traversal Attack (/../) or (/.../)',\\\n    logdata:'Matched Data: %{TX.0} found within %{MATCHED_VAR_NAME}: %{MATCHED_VAR}',\\\n    tag:'application-multi',\\\n    tag:'language-multi',\\\n    tag:'platform-multi',\\\n    tag:'attack-lfi',\\\n    tag:'paranoia-level/1',\\\n    tag:'OWASP_CRS',\\\n    tag:'capec/1000/255/153/126',\\\n    ver:'OWASP_CRS/3.4.0-dev',\\\n    severity:'CRITICAL',\\\n    multiMatch,\\\n    setvar:'tx.inbound_anomaly_score_pl1=+%{tx.critical_anomaly_score}',\\\n    setvar:'tx.lfi_score=+%{tx.critical_anomaly_score}'\"\n",
        "description": "Path Traversal Attack (/../)",
        "paranoia_level": "1",
        "rule_id": "930",
        "sec_rule_id": "930110",
        "severity": "CRITICAL",
        "tags": [
            "application-multi",
            "language-multi",
            "platform-multi",
            "attack-lfi",
            "paranoia-level/1",
            "OWASP_CRS",
            "capec/1000/255/153/126"
        ]
    },
    {
        "comment": "#\n# -=[ OS File Access ]=-\n#\n# We check for OS file access with the help of a local file with OS files data.\n#\n# Ref: https://github.com/lightos/Panoptic/blob/master/cases.xml\n#\n# If you wonder where support for Google OAuth2 has gone, see:\n# https://github.com/coreruleset/google-oauth2-plugin\n",
        "content": "SecRule REQUEST_COOKIES|!REQUEST_COOKIES:/__utm/|REQUEST_COOKIES_NAMES|ARGS_NAMES|ARGS|XML:/* \"@pmFromFile lfi-os-files.data\" \\\n    \"id:930120,\\\n    phase:2,\\\n    block,\\\n    capture,\\\n    t:none,t:utf8toUnicode,t:urlDecodeUni,t:normalizePathWin,\\\n    msg:'OS File Access Attempt',\\\n    logdata:'Matched Data: %{TX.0} found within %{MATCHED_VAR_NAME}: %{MATCHED_VAR}',\\\n    tag:'application-multi',\\\n    tag:'language-multi',\\\n    tag:'platform-multi',\\\n    tag:'attack-lfi',\\\n    tag:'paranoia-level/1',\\\n    tag:'OWASP_CRS',\\\n    tag:'capec/1000/255/153/126',\\\n    tag:'PCI/6.5.4',\\\n    ver:'OWASP_CRS/3.4.0-dev',\\\n    severity:'CRITICAL',\\\n    setvar:'tx.lfi_score=+%{tx.critical_anomaly_score}',\\\n    setvar:'tx.inbound_anomaly_score_pl1=+%{tx.critical_anomaly_score}'\"\n",
        "description": "OS File Access Attempt",
        "paranoia_level": "1",
        "rule_id": "930",
        "sec_rule_id": "930120",
        "severity": "CRITICAL",
        "tags": [
            "application-multi",
            "language-multi",
            "platform-multi",
            "attack-lfi",
            "paranoia-level/1",
            "OWASP_CRS",
            "capec/1000/255/153/126",
            "PCI/6.5.4"
        ]
    },
    {
        "comment": "#\n# -=[ Restricted File Access ]=-\n#\n# Detects attempts to retrieve application source code, metadata,\n# credentials and version control history possibly reachable in a web root.\n#\n",
        "content": "SecRule REQUEST_FILENAME \"@pmFromFile restricted-files.data\" \\\n    \"id:930130,\\\n    phase:1,\\\n    block,\\\n    capture,\\\n    t:none,t:utf8toUnicode,t:urlDecodeUni,t:normalizePathWin,\\\n    msg:'Restricted File Access Attempt',\\\n    logdata:'Matched Data: %{TX.0} found within %{MATCHED_VAR_NAME}: %{MATCHED_VAR}',\\\n    tag:'application-multi',\\\n    tag:'language-multi',\\\n    tag:'platform-multi',\\\n    tag:'attack-lfi',\\\n    tag:'paranoia-level/1',\\\n    tag:'OWASP_CRS',\\\n    tag:'capec/1000/255/153/126',\\\n    tag:'PCI/6.5.4',\\\n    ver:'OWASP_CRS/3.4.0-dev',\\\n    severity:'CRITICAL',\\\n    setvar:'tx.lfi_score=+%{tx.critical_anomaly_score}',\\\n    setvar:'tx.inbound_anomaly_score_pl1=+%{tx.critical_anomaly_score}'\"\n",
        "description": "Restricted File Access Attempt",
        "paranoia_level": "1",
        "rule_id": "930",
        "sec_rule_id": "930130",
        "severity": "CRITICAL",
        "tags": [
            "application-multi",
            "language-multi",
            "platform-multi",
            "attack-lfi",
            "paranoia-level/1",
            "OWASP_CRS",
            "capec/1000/255/153/126",
            "PCI/6.5.4"
        ]
    },
    {
        "comment": "",
        "content": "SecRule TX:DETECTION_PARANOIA_LEVEL \"@lt 2\" \"id:930013,phase:1,pass,nolog,skipAfter:END-REQUEST-930-APPLICATION-ATTACK-LFI\"\n",
        "rule_id": "930",
        "sec_rule_id": "930013"
    },
    {
        "comment": "",
        "content": "SecRule TX:DETECTION_PARANOIA_LEVEL \"@lt 2\" \"id:930014,phase:2,pass,nolog,skipAfter:END-REQUEST-930-APPLICATION-ATTACK-LFI\"\n",
        "rule_id": "930",
        "sec_rule_id": "930014"
    },
    {
        "comment": "#\n# -= Paranoia Level 2 =- (apply only when tx.detection_paranoia_level is sufficiently high: 2 or higher)\n#\n",
        "content": "SecRule TX:DETECTION_PARANOIA_LEVEL \"@lt 3\" \"id:930015,phase:1,pass,nolog,skipAfter:END-REQUEST-930-APPLICATION-ATTACK-LFI\"\n",
        "rule_id": "930",
        "sec_rule_id": "930015"
    },
    {
        "comment": "",
        "content": "SecRule TX:DETECTION_PARANOIA_LEVEL \"@lt 3\" \"id:930016,phase:2,pass,nolog,skipAfter:END-REQUEST-930-APPLICATION-ATTACK-LFI\"\n",
        "rule_id": "930",
        "sec_rule_id": "930016"
    },
    {
        "comment": "#\n# -= Paranoia Level 3 =- (apply only when tx.detection_paranoia_level is sufficiently high: 3 or higher)\n#\n",
        "content": "SecRule TX:DETECTION_PARANOIA_LEVEL \"@lt 4\" \"id:930017,phase:1,pass,nolog,skipAfter:END-REQUEST-930-APPLICATION-ATTACK-LFI\"\n",
        "rule_id": "930",
        "sec_rule_id": "930017"
    },
    {
        "comment": "",
        "content": "SecRule TX:DETECTION_PARANOIA_LEVEL \"@lt 4\" \"id:930018,phase:2,pass,nolog,skipAfter:END-REQUEST-930-APPLICATION-ATTACK-LFI\"\n",
        "rule_id": "930",
        "sec_rule_id": "930018"
    },
    {
        "comment": "#\n# -= Paranoia Level 0 (empty) =- (apply unconditionally)\n#\n",
        "content": "SecRule TX:DETECTION_PARANOIA_LEVEL \"@lt 1\" \"id:931011,phase:1,pass,nolog,skipAfter:END-REQUEST-931-APPLICATION-ATTACK-RFI\"\n",
        "rule_id": "931",
        "sec_rule_id": "931011"
    },
    {
        "comment": "",
        "content": "SecRule TX:DETECTION_PARANOIA_LEVEL \"@lt 1\" \"id:931012,phase:2,pass,nolog,skipAfter:END-REQUEST-931-APPLICATION-ATTACK-RFI\"\n",
        "rule_id": "931",
        "sec_rule_id": "931012"
    },
    {
        "comment": "# -=[ Rule Logic ]=-\n# These rules look for common types of Remote File Inclusion (RFI) attack methods.\n#\t- URL Contains an IP Address\n#\t- The PHP \"include()\" Function\n#\t- RFI Data Ends with Question Mark(s) (?)\n#\t- RFI Host Doesn't Match Local Host\n#\n# -=[ References ]=-\n# http://projects.webappsec.org/Remote-File-Inclusion\n# http://tacticalwebappsec.blogspot.com/2009/06/generic-remote-file-inclusion-attack.html\n#\n",
        "content": "SecRule ARGS \"@rx ^(?i:file|ftps?|https?)://(?:\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3})\" \\\n    \"id:931100,\\\n    phase:2,\\\n    block,\\\n    capture,\\\n    t:none,\\\n    msg:'Possible Remote File Inclusion (RFI) Attack: URL Parameter using IP Address',\\\n    logdata:'Matched Data: %{TX.0} found within %{MATCHED_VAR_NAME}: %{MATCHED_VAR}',\\\n    tag:'application-multi',\\\n    tag:'language-multi',\\\n    tag:'platform-multi',\\\n    tag:'attack-rfi',\\\n    tag:'paranoia-level/1',\\\n    tag:'OWASP_CRS',\\\n    tag:'capec/1000/152/175/253',\\\n    ctl:auditLogParts=+E,\\\n    ver:'OWASP_CRS/3.4.0-dev',\\\n    severity:'CRITICAL',\\\n    setvar:'tx.rfi_score=+%{tx.critical_anomaly_score}',\\\n    setvar:'tx.inbound_anomaly_score_pl1=+%{tx.critical_anomaly_score}'\"\n",
        "description": "Possible Remote File Inclusion (RFI) Attack: URL Parameter using IP Address",
        "paranoia_level": "1",
        "rule_id": "931",
        "sec_rule_id": "931100",
        "severity": "CRITICAL",
        "tags": [
            "application-multi",
            "language-multi",
            "platform-multi",
            "attack-rfi",
            "paranoia-level/1",
            "OWASP_CRS",
            "capec/1000/152/175/253"
        ]
    },
    {
        "comment": "",
        "content": "SecRule QUERY_STRING|REQUEST_BODY \"@rx (?i)(?:\\binclude\\s*\\([^)]*|mosConfig_absolute_path|_CONF\\[path\\]|_SERVER\\[DOCUMENT_ROOT\\]|GALLERY_BASEDIR|path\\[docroot\\]|appserv_root|config\\[root_dir\\])=(?:file|ftps?|https?)://\" \\\n    \"id:931110,\\\n    phase:2,\\\n    block,\\\n    capture,\\\n    t:none,t:urlDecodeUni,\\\n    msg:'Possible Remote File Inclusion (RFI) Attack: Common RFI Vulnerable Parameter Name used w/URL Payload',\\\n    logdata:'Matched Data: %{TX.0} found within %{MATCHED_VAR_NAME}: %{MATCHED_VAR}',\\\n    tag:'application-multi',\\\n    tag:'language-multi',\\\n    tag:'platform-multi',\\\n    tag:'attack-rfi',\\\n    tag:'paranoia-level/1',\\\n    tag:'OWASP_CRS',\\\n    tag:'capec/1000/152/175/253',\\\n    ctl:auditLogParts=+E,\\\n    ver:'OWASP_CRS/3.4.0-dev',\\\n    severity:'CRITICAL',\\\n    setvar:'tx.rfi_score=+%{tx.critical_anomaly_score}',\\\n    setvar:'tx.inbound_anomaly_score_pl1=+%{tx.critical_anomaly_score}'\"\n",
        "description": "Possible Remote File Inclusion (RFI) Attack: Common RFI Vulnerable Parameter Name used w/URL Payload",
        "paranoia_level": "1",
        "rule_id": "931",
        "sec_rule_id": "931110",
        "severity": "CRITICAL",
        "tags": [
            "application-multi",
            "language-multi",
            "platform-multi",
            "attack-rfi",
            "paranoia-level/1",
            "OWASP_CRS",
            "capec/1000/152/175/253"
        ]
    },
    {
        "comment": "",
        "content": "SecRule ARGS \"@rx ^(?i:file|ftps?|https?).*?\\?+$\" \\\n    \"id:931120,\\\n    phase:2,\\\n    block,\\\n    capture,\\\n    t:none,\\\n    msg:'Possible Remote File Inclusion (RFI) Attack: URL Payload Used w/Trailing Question Mark Character (?)',\\\n    logdata:'Matched Data: %{TX.0} found within %{MATCHED_VAR_NAME}: %{MATCHED_VAR}',\\\n    tag:'application-multi',\\\n    tag:'language-multi',\\\n    tag:'platform-multi',\\\n    tag:'attack-rfi',\\\n    tag:'paranoia-level/1',\\\n    tag:'OWASP_CRS',\\\n    tag:'capec/1000/152/175/253',\\\n    ctl:auditLogParts=+E,\\\n    ver:'OWASP_CRS/3.4.0-dev',\\\n    severity:'CRITICAL',\\\n    setvar:'tx.rfi_score=+%{tx.critical_anomaly_score}',\\\n    setvar:'tx.inbound_anomaly_score_pl1=+%{tx.critical_anomaly_score}'\"\n",
        "description": "Possible Remote File Inclusion (RFI) Attack: URL Payload Used w/Trailing Question Mark Character (?)",
        "paranoia_level": "1",
        "rule_id": "931",
        "sec_rule_id": "931120",
        "severity": "CRITICAL",
        "tags": [
            "application-multi",
            "language-multi",
            "platform-multi",
            "attack-rfi",
            "paranoia-level/1",
            "OWASP_CRS",
            "capec/1000/152/175/253"
        ]
    },
    {
        "comment": "",
        "content": "SecRule TX:DETECTION_PARANOIA_LEVEL \"@lt 2\" \"id:931013,phase:1,pass,nolog,skipAfter:END-REQUEST-931-APPLICATION-ATTACK-RFI\"\n",
        "rule_id": "931",
        "sec_rule_id": "931013"
    },
    {
        "comment": "",
        "content": "SecRule TX:DETECTION_PARANOIA_LEVEL \"@lt 2\" \"id:931014,phase:2,pass,nolog,skipAfter:END-REQUEST-931-APPLICATION-ATTACK-RFI\"\n",
        "rule_id": "931",
        "sec_rule_id": "931014"
    },
    {
        "comment": "#\n# -= Paranoia Level 2 =- (apply only when tx.detection_paranoia_level is sufficiently high: 2 or higher)\n#\n",
        "content": "SecRule ARGS \"@rx ^(?i:file|ftps?|https?)://(?:[^@]+@)?([^/]+)\" \\\n    \"id:931130,\\\n    phase:2,\\\n    block,\\\n    capture,\\\n    t:none,\\\n    msg:'Possible Remote File Inclusion (RFI) Attack: Off-Domain Reference/Link',\\\n    logdata:'Matched Data: %{TX.0} found within %{MATCHED_VAR_NAME}: %{MATCHED_VAR}',\\\n    tag:'application-multi',\\\n    tag:'language-multi',\\\n    tag:'platform-multi',\\\n    tag:'attack-rfi',\\\n    tag:'OWASP_CRS',\\\n    tag:'capec/1000/152/175/253',\\\n    tag:'paranoia-level/2',\\\n    ctl:auditLogParts=+E,\\\n    ver:'OWASP_CRS/3.4.0-dev',\\\n    severity:'CRITICAL',\\\n    setvar:'tx.rfi_parameter_%{MATCHED_VAR_NAME}=.%{tx.1}',\\\n    chain\"\n    SecRule TX:/rfi_parameter_.*/ \"!@endsWith .%{request_headers.host}\" \\\n        \"setvar:'tx.rfi_score=+%{tx.critical_anomaly_score}',\\\n        setvar:'tx.inbound_anomaly_score_pl2=+%{tx.critical_anomaly_score}'\"\n",
        "description": "Possible Remote File Inclusion (RFI) Attack: Off-Domain Reference/Link",
        "paranoia_level": "2",
        "rule_id": "931",
        "sec_rule_id": "931130",
        "severity": "CRITICAL",
        "tags": [
            "application-multi",
            "language-multi",
            "platform-multi",
            "attack-rfi",
            "OWASP_CRS",
            "capec/1000/152/175/253",
            "paranoia-level/2"
        ]
    },
    {
        "comment": "",
        "content": "SecRule TX:DETECTION_PARANOIA_LEVEL \"@lt 3\" \"id:931015,phase:1,pass,nolog,skipAfter:END-REQUEST-931-APPLICATION-ATTACK-RFI\"\n",
        "rule_id": "931",
        "sec_rule_id": "931015"
    },
    {
        "comment": "",
        "content": "SecRule TX:DETECTION_PARANOIA_LEVEL \"@lt 3\" \"id:931016,phase:2,pass,nolog,skipAfter:END-REQUEST-931-APPLICATION-ATTACK-RFI\"\n",
        "rule_id": "931",
        "sec_rule_id": "931016"
    },
    {
        "comment": "#\n# -= Paranoia Level 3 =- (apply only when tx.detection_paranoia_level is sufficiently high: 3 or higher)\n#\n",
        "content": "SecRule TX:DETECTION_PARANOIA_LEVEL \"@lt 4\" \"id:931017,phase:1,pass,nolog,skipAfter:END-REQUEST-931-APPLICATION-ATTACK-RFI\"\n",
        "rule_id": "931",
        "sec_rule_id": "931017"
    },
    {
        "comment": "",
        "content": "SecRule TX:DETECTION_PARANOIA_LEVEL \"@lt 4\" \"id:931018,phase:2,pass,nolog,skipAfter:END-REQUEST-931-APPLICATION-ATTACK-RFI\"\n",
        "rule_id": "931",
        "sec_rule_id": "931018"
    },
    {
        "comment": "#\n# -= Paranoia Level 0 (empty) =- (apply unconditionally)\n#\n",
        "content": "SecRule TX:DETECTION_PARANOIA_LEVEL \"@lt 1\" \"id:932011,phase:1,pass,nolog,skipAfter:END-REQUEST-932-APPLICATION-ATTACK-RCE\"\n",
        "rule_id": "932",
        "sec_rule_id": "932011"
    },
    {
        "comment": "",
        "content": "SecRule TX:DETECTION_PARANOIA_LEVEL \"@lt 1\" \"id:932012,phase:2,pass,nolog,skipAfter:END-REQUEST-932-APPLICATION-ATTACK-RCE\"\n",
        "rule_id": "932",
        "sec_rule_id": "932012"
    },
    {
        "comment": "# [ Unix command injection ]\n#\n# This rule detects Unix command injections.\n# A command injection takes a form such as:\n#\n#   foo.jpg;uname -a\n#   foo.jpg||uname -a\n#\n# The vulnerability exists when an application executes a shell command\n# without proper input escaping/validation.\n#\n# This rule is also triggered by an Oracle WebLogic Remote Command Execution exploit:\n# [ Oracle WebLogic vulnerability CVE-2017-10271 - Exploit tested: https://www.exploit-db.com/exploits/43458 ]\n#\n# To prevent false positives, we look for a 'starting sequence' that\n# precedes a command in shell syntax, such as: ; | & $( ` <( >(\n# Anatomy of the regexp with examples of patterns caught:\n#\n# 1. Starting tokens\n#\n# ;        ;ifconfig\n# \\{       {ifconfig}\n# \\|       |ifconfig\n# \\|\\|     ||ifconfig\n# &        &ifconfig\n# &&       &&ifconfig\n# \\n       ;\\nifconfig\n# \\r       ;\\rifconfig\n# \\$\\(     $(ifconfig)\n# $\\(\\(    $((ifconfig))\n# `        `ifconfig`\n# \\${      ${ifconfig}\n# <\\(      <( ifconfig )\n# >\\(      >( ifconfig )\n# \\(\\s*\\)  a() ( ifconfig; ); a\n#\n# 2. Command prefixes\n#\n# {        { ifconfig }\n# \\s*\\(\\s* ( ifconfig )\n# \\w+=(?:[^\\s]*|\\$.*|\\$.*|<.*|>.*|\\'.*\\'|\\\".*\\\")\\s+   VARNAME=xyz ifconfig\n# !\\s*     ! ifconfig\n# \\$       $ifconfig\n#\n# 3. Quoting\n#\n# '        'ifconfig'\n# \\\"       \"ifconfig\"\n#\n# 4. Paths\n#\n# [\\?\\*\\[\\]\\(\\)\\-\\|+\\w'\\\"\\./\\x5c]+/   /sbin/ifconfig, /s?in/./ifconfig, /s[a-b]in/ifconfig etc.\n#\n# This rule is case-sensitive to prevent FP (\"Cat\" vs. \"cat\").\n#\n# An effort was made to combat evasions by shell quoting (e.g. 'ls',\n# 'l'\"s\", \\l\\s are all valid). ModSecurity has a t:cmdLine\n# transformation built-in to deal with this, but unfortunately, it\n# replaces ';' characters and lowercases the payload, which is less\n# useful for this case. However, emulating the transformation makes\n# the regexp more complex.\n#\n# Regular expression generated from util/regexp-assemble/data/932100.data.\n# To update the regular expression run the following shell script\n# (consult util/regexp-assemble/README.md for details):\n#   util/regexp-assemble/regexp-assemble.py update 932100\n#\n# This is the base Rule to prevent Unix Command Injection\n# Please refer other rules 932105,932106,932101 to know more.\n#\n#  .932100 (base rule, PL1)\n#  \u00e2\u201d\u0153\u00e2\u201d\u20ac\u00e2\u201d\u20ac 932101 (stricter sibling of base rule containing the source-shortcut \".\", PL2)\n#  \u00e2\u201d\u0153\u00e2\u201d\u20ac\u00e2\u201d\u20ac 932105 (2nd part of base rule, PL1)\n#  \u00e2\u201d\u0153\u00e2\u201d\u20ac\u00e2\u201d\u20ac 932106 (stricter sibling of base rule, PL3\n#\n",
        "content": "SecRule REQUEST_COOKIES|!REQUEST_COOKIES:/__utm/|REQUEST_COOKIES_NAMES|ARGS_NAMES|ARGS|XML:/* \"@rx (?:;|\\{|\\||\\|\\||&|&&|\\n|\\r|\\$\\(|\\$\\(\\(|`|\\${|<\\(|>\\(|\\(\\s*\\))\\s*(?:{|\\s*\\(\\s*|\\w+=(?:[^\\s]*|\\$.*|\\$.*|<.*|>.*|\\'.*\\'|\\\".*\\\")\\s+|!\\s*|\\$)*\\s*(?:'|\\\")*(?:[\\?\\*\\[\\]\\(\\)\\-\\|+\\w'\\\"\\./\\x5c]+/)?[\\x5c'\\\"]*(?:l[\\x5c'\\\"]*(?:w[\\x5c'\\\"]*p[\\x5c'\\\"]*-[\\x5c'\\\"]*(?:d[\\x5c'\\\"]*(?:o[\\x5c'\\\"]*w[\\x5c'\\\"]*n[\\x5c'\\\"]*l[\\x5c'\\\"]*o[\\x5c'\\\"]*a[\\x5c'\\\"]*d|u[\\x5c'\\\"]*m[\\x5c'\\\"]*p)|r[\\x5c'\\\"]*e[\\x5c'\\\"]*q[\\x5c'\\\"]*u[\\x5c'\\\"]*e[\\x5c'\\\"]*s[\\x5c'\\\"]*t|m[\\x5c'\\\"]*i[\\x5c'\\\"]*r[\\x5c'\\\"]*r[\\x5c'\\\"]*o[\\x5c'\\\"]*r)|s(?:[\\x5c'\\\"]*(?:b[\\x5c'\\\"]*_[\\x5c'\\\"]*r[\\x5c'\\\"]*e[\\x5c'\\\"]*l[\\x5c'\\\"]*e[\\x5c'\\\"]*a[\\x5c'\\\"]*s[\\x5c'\\\"]*e|c[\\x5c'\\\"]*p[\\x5c'\\\"]*u|m[\\x5c'\\\"]*o[\\x5c'\\\"]*d|p[\\x5c'\\\"]*c[\\x5c'\\\"]*i|u[\\x5c'\\\"]*s[\\x5c'\\\"]*b|-[\\x5c'\\\"]*F|h[\\x5c'\\\"]*w|o[\\x5c'\\\"]*f))?|z[\\x5c'\\\"]*(?:(?:[ef][\\x5c'\\\"]*)?g[\\x5c'\\\"]*r[\\x5c'\\\"]*e[\\x5c'\\\"]*p|c[\\x5c'\\\"]*(?:a[\\x5c'\\\"]*t|m[\\x5c'\\\"]*p)|m[\\x5c'\\\"]*(?:o[\\x5c'\\\"]*r[\\x5c'\\\"]*e|a)|d[\\x5c'\\\"]*i[\\x5c'\\\"]*f[\\x5c'\\\"]*f|l[\\x5c'\\\"]*e[\\x5c'\\\"]*s[\\x5c'\\\"]*s)|e[\\x5c'\\\"]*s[\\x5c'\\\"]*s[\\x5c'\\\"]*(?:(?:f[\\x5c'\\\"]*i[\\x5c'\\\"]*l|p[\\x5c'\\\"]*i[\\x5c'\\\"]*p)[\\x5c'\\\"]*e|e[\\x5c'\\\"]*c[\\x5c'\\\"]*h[\\x5c'\\\"]*o|(?:\\s|<|>).*)|a[\\x5c'\\\"]*s[\\x5c'\\\"]*t[\\x5c'\\\"]*(?:l[\\x5c'\\\"]*o[\\x5c'\\\"]*g(?:[\\x5c'\\\"]*i[\\x5c'\\\"]*n)?|c[\\x5c'\\\"]*o[\\x5c'\\\"]*m[\\x5c'\\\"]*m|(?:\\s|<|>).*)|o[\\x5c'\\\"]*(?:c[\\x5c'\\\"]*a[\\x5c'\\\"]*(?:t[\\x5c'\\\"]*e|l)[\\x5c'\\\"]*(?:\\s|<|>).*|g[\\x5c'\\\"]*n[\\x5c'\\\"]*a[\\x5c'\\\"]*m[\\x5c'\\\"]*e)|d[\\x5c'\\\"]*(?:c[\\x5c'\\\"]*o[\\x5c'\\\"]*n[\\x5c'\\\"]*f[\\x5c'\\\"]*i[\\x5c'\\\"]*g|d[\\x5c'\\\"]*(?:\\s|<|>).*)|(?:[np]|i[\\x5c'\\\"]*n[\\x5c'\\\"]*k[\\x5c'\\\"]*s|y[\\x5c'\\\"]*n[\\x5c'\\\"]*x)[\\x5c'\\\"]*(?:\\s|<|>).*|u[\\x5c'\\\"]*a[\\x5c'\\\"]*(?:5[\\x5c'\\\"]*\\.[\\x5c'\\\"]*[1234]|(?:\\s|<|>).*)|f[\\x5c'\\\"]*t[\\x5c'\\\"]*p(?:[\\x5c'\\\"]*g[\\x5c'\\\"]*e[\\x5c'\\\"]*t)?)|b[\\x5c'\\\"]*(?:z[\\x5c'\\\"]*(?:(?:[ef][\\x5c'\\\"]*)?g[\\x5c'\\\"]*r[\\x5c'\\\"]*e[\\x5c'\\\"]*p|d[\\x5c'\\\"]*i[\\x5c'\\\"]*f[\\x5c'\\\"]*f|l[\\x5c'\\\"]*e[\\x5c'\\\"]*s[\\x5c'\\\"]*s|m[\\x5c'\\\"]*o[\\x5c'\\\"]*r[\\x5c'\\\"]*e|c[\\x5c'\\\"]*a[\\x5c'\\\"]*t|i[\\x5c'\\\"]*p[\\x5c'\\\"]*2)|s[\\x5c'\\\"]*d[\\x5c'\\\"]*(?:c[\\x5c'\\\"]*a[\\x5c'\\\"]*t|i[\\x5c'\\\"]*f[\\x5c'\\\"]*f|t[\\x5c'\\\"]*a[\\x5c'\\\"]*r)|a[\\x5c'\\\"]*(?:t[\\x5c'\\\"]*c[\\x5c'\\\"]*h[\\x5c'\\\"]*(?:\\s|<|>).*|s[\\x5c'\\\"]*h)|r[\\x5c'\\\"]*e[\\x5c'\\\"]*a[\\x5c'\\\"]*k[\\x5c'\\\"]*s[\\x5c'\\\"]*w|u[\\x5c'\\\"]*i[\\x5c'\\\"]*l[\\x5c'\\\"]*t[\\x5c'\\\"]*i[\\x5c'\\\"]*n)|f[\\x5c'\\\"]*(?:i(?:[\\x5c'\\\"]*(?:l[\\x5c'\\\"]*e[\\x5c'\\\"]*(?:t[\\x5c'\\\"]*e[\\x5c'\\\"]*s[\\x5c'\\\"]*t|(?:\\s|<|>).*)|n[\\x5c'\\\"]*d[\\x5c'\\\"]*(?:\\s|<|>).*|s[\\x5c'\\\"]*h))?|t[\\x5c'\\\"]*p[\\x5c'\\\"]*(?:s[\\x5c'\\\"]*t[\\x5c'\\\"]*a[\\x5c'\\\"]*t[\\x5c'\\\"]*s|w[\\x5c'\\\"]*h[\\x5c'\\\"]*o|(?:\\s|<|>).*)|u[\\x5c'\\\"]*n[\\x5c'\\\"]*c[\\x5c'\\\"]*t[\\x5c'\\\"]*i[\\x5c'\\\"]*o[\\x5c'\\\"]*n|(?:e[\\x5c'\\\"]*t[\\x5c'\\\"]*c[\\x5c'\\\"]*h|c)[\\x5c'\\\"]*(?:\\s|<|>).*|o[\\x5c'\\\"]*r[\\x5c'\\\"]*e[\\x5c'\\\"]*a[\\x5c'\\\"]*c[\\x5c'\\\"]*h|g[\\x5c'\\\"]*r[\\x5c'\\\"]*e[\\x5c'\\\"]*p)|c[\\x5c'\\\"]*(?:o[\\x5c'\\\"]*(?:m[\\x5c'\\\"]*(?:p[\\x5c'\\\"]*r[\\x5c'\\\"]*e[\\x5c'\\\"]*s[\\x5c'\\\"]*s|m[\\x5c'\\\"]*a[\\x5c'\\\"]*n[\\x5c'\\\"]*d)[\\x5c'\\\"]*(?:\\s|<|>).*|p[\\x5c'\\\"]*r[\\x5c'\\\"]*o[\\x5c'\\\"]*c)|h[\\x5c'\\\"]*(?:d[\\x5c'\\\"]*i[\\x5c'\\\"]*r[\\x5c'\\\"]*(?:\\s|<|>).*|f[\\x5c'\\\"]*l[\\x5c'\\\"]*a[\\x5c'\\\"]*g[\\x5c'\\\"]*s|a[\\x5c'\\\"]*t[\\x5c'\\\"]*t[\\x5c'\\\"]*r|m[\\x5c'\\\"]*o[\\x5c'\\\"]*d)|r[\\x5c'\\\"]*o[\\x5c'\\\"]*n[\\x5c'\\\"]*t[\\x5c'\\\"]*a[\\x5c'\\\"]*b|(?:[cp]|a[\\x5c'\\\"]*t)[\\x5c'\\\"]*(?:\\s|<|>).*|u[\\x5c'\\\"]*r[\\x5c'\\\"]*l|s[\\x5c'\\\"]*h)|e[\\x5c'\\\"]*(?:n[\\x5c'\\\"]*(?:v(?:[\\x5c'\\\"]*-[\\x5c'\\\"]*u[\\x5c'\\\"]*p[\\x5c'\\\"]*d[\\x5c'\\\"]*a[\\x5c'\\\"]*t[\\x5c'\\\"]*e)?|d[\\x5c'\\\"]*(?:i[\\x5c'\\\"]*f|s[\\x5c'\\\"]*w))|x[\\x5c'\\\"]*(?:p[\\x5c'\\\"]*(?:a[\\x5c'\\\"]*n[\\x5c'\\\"]*d|o[\\x5c'\\\"]*r[\\x5c'\\\"]*t|r)|e[\\x5c'\\\"]*c[\\x5c'\\\"]*(?:\\s|<|>).*)|c[\\x5c'\\\"]*h[\\x5c'\\\"]*o[\\x5c'\\\"]*(?:\\s|<|>).*|g[\\x5c'\\\"]*r[\\x5c'\\\"]*e[\\x5c'\\\"]*p|s[\\x5c'\\\"]*a[\\x5c'\\\"]*c|v[\\x5c'\\\"]*a[\\x5c'\\\"]*l)|h[\\x5c'\\\"]*(?:t[\\x5c'\\\"]*(?:d[\\x5c'\\\"]*i[\\x5c'\\\"]*g[\\x5c'\\\"]*e[\\x5c'\\\"]*s[\\x5c'\\\"]*t|p[\\x5c'\\\"]*a[\\x5c'\\\"]*s[\\x5c'\\\"]*s[\\x5c'\\\"]*w[\\x5c'\\\"]*d)|o[\\x5c'\\\"]*s[\\x5c'\\\"]*t[\\x5c'\\\"]*(?:n[\\x5c'\\\"]*a[\\x5c'\\\"]*m[\\x5c'\\\"]*e|i[\\x5c'\\\"]*d)|(?:e[\\x5c'\\\"]*a[\\x5c'\\\"]*d|u[\\x5c'\\\"]*p)[\\x5c'\\\"]*(?:\\s|<|>).*|i[\\x5c'\\\"]*s[\\x5c'\\\"]*t[\\x5c'\\\"]*o[\\x5c'\\\"]*r[\\x5c'\\\"]*y)|i[\\x5c'\\\"]*(?:p[\\x5c'\\\"]*(?:(?:6[\\x5c'\\\"]*)?t[\\x5c'\\\"]*a[\\x5c'\\\"]*b[\\x5c'\\\"]*l[\\x5c'\\\"]*e[\\x5c'\\\"]*s|c[\\x5c'\\\"]*o[\\x5c'\\\"]*n[\\x5c'\\\"]*f[\\x5c'\\\"]*i[\\x5c'\\\"]*g)|r[\\x5c'\\\"]*b(?:[\\x5c'\\\"]*(?:2[\\x5c'\\\"]*[01234567]|1(?:[\\x5c'\\\"]*[89])?|3[\\x5c'\\\"]*0))?|f[\\x5c'\\\"]*c[\\x5c'\\\"]*o[\\x5c'\\\"]*n[\\x5c'\\\"]*f[\\x5c'\\\"]*i[\\x5c'\\\"]*g|d[\\x5c'\\\"]*(?:\\s|<|>).*)|a[\\x5c'\\\"]*(?:l[\\x5c'\\\"]*(?:i[\\x5c'\\\"]*a[\\x5c'\\\"]*s[\\x5c'\\\"]*(?:\\s|<|>).*|p[\\x5c'\\\"]*i[\\x5c'\\\"]*n[\\x5c'\\\"]*e)|d[\\x5c'\\\"]*d[\\x5c'\\\"]*u[\\x5c'\\\"]*s[\\x5c'\\\"]*e[\\x5c'\\\"]*r|p[\\x5c'\\\"]*t[\\x5c'\\\"]*-[\\x5c'\\\"]*g[\\x5c'\\\"]*e[\\x5c'\\\"]*t|r[\\x5c'\\\"]*(?:c[\\x5c'\\\"]*h[\\x5c'\\\"]*(?:\\s|<|>).*|p)|w[\\x5c'\\\"]*[ks][\\x5c'\\\"]*(?:\\s|<|>).*)|g[\\x5c'\\\"]*(?:(?:e[\\x5c'\\\"]*t[\\x5c'\\\"]*f[\\x5c'\\\"]*a[\\x5c'\\\"]*c[\\x5c'\\\"]*l|r[\\x5c'\\\"]*e[\\x5c'\\\"]*p|c[\\x5c'\\\"]*c|i[\\x5c'\\\"]*t|o)[\\x5c'\\\"]*(?:\\s|<|>).*|z[\\x5c'\\\"]*(?:c[\\x5c'\\\"]*a[\\x5c'\\\"]*t|i[\\x5c'\\\"]*p)|u[\\x5c'\\\"]*n[\\x5c'\\\"]*z[\\x5c'\\\"]*i[\\x5c'\\\"]*p|d[\\x5c'\\\"]*b)|d[\\x5c'\\\"]*(?:h[\\x5c'\\\"]*c[\\x5c'\\\"]*l[\\x5c'\\\"]*i[\\x5c'\\\"]*e[\\x5c'\\\"]*n[\\x5c'\\\"]*t|(?:i[\\x5c'\\\"]*f[\\x5c'\\\"]*f|u)[\\x5c'\\\"]*(?:\\s|<|>).*|(?:m[\\x5c'\\\"]*e[\\x5c'\\\"]*s|p[\\x5c'\\\"]*k)[\\x5c'\\\"]*g|o[\\x5c'\\\"]*(?:a[\\x5c'\\\"]*s|n[\\x5c'\\\"]*e)|a[\\x5c'\\\"]*s[\\x5c'\\\"]*h)|m[\\x5c'\\\"]*(?:(?:k[\\x5c'\\\"]*d[\\x5c'\\\"]*i[\\x5c'\\\"]*r|o[\\x5c'\\\"]*r[\\x5c'\\\"]*e)[\\x5c'\\\"]*(?:\\s|<|>).*|a[\\x5c'\\\"]*i[\\x5c'\\\"]*l[\\x5c'\\\"]*(?:x[\\x5c'\\\"]*(?:\\s|<|>).*|q)|l[\\x5c'\\\"]*o[\\x5c'\\\"]*c[\\x5c'\\\"]*a[\\x5c'\\\"]*t[\\x5c'\\\"]*e)|j[\\x5c'\\\"]*(?:(?:a[\\x5c'\\\"]*v[\\x5c'\\\"]*a|o[\\x5c'\\\"]*b[\\x5c'\\\"]*s)[\\x5c'\\\"]*(?:\\s|<|>).*|e[\\x5c'\\\"]*x[\\x5c'\\\"]*e[\\x5c'\\\"]*c)|k[\\x5c'\\\"]*(?:i[\\x5c'\\\"]*l[\\x5c'\\\"]*l[\\x5c'\\\"]*(?:a[\\x5c'\\\"]*l[\\x5c'\\\"]*l|(?:\\s|<|>).*)|s[\\x5c'\\\"]*h)|G[\\x5c'\\\"]*E[\\x5c'\\\"]*T[\\x5c'\\\"]*(?:\\s|<|>).*|7[\\x5c'\\\"]*z(?:[\\x5c'\\\"]*[ar])?)\\b\" \\\n    \"id:932100,\\\n    phase:2,\\\n    block,\\\n    capture,\\\n    t:none,\\\n    msg:'Remote Command Execution: Unix Command Injection',\\\n    logdata:'Matched Data: %{TX.0} found within %{MATCHED_VAR_NAME}: %{MATCHED_VAR}',\\\n    tag:'application-multi',\\\n    tag:'language-shell',\\\n    tag:'platform-unix',\\\n    tag:'attack-rce',\\\n    tag:'paranoia-level/1',\\\n    tag:'OWASP_CRS',\\\n    tag:'capec/1000/152/248/88',\\\n    tag:'PCI/6.5.2',\\\n    ctl:auditLogParts=+E,\\\n    ver:'OWASP_CRS/3.4.0-dev',\\\n    severity:'CRITICAL',\\\n    setvar:'tx.rce_score=+%{tx.critical_anomaly_score}',\\\n    setvar:'tx.inbound_anomaly_score_pl1=+%{tx.critical_anomaly_score}'\"\n",
        "description": "Remote Command Execution: Unix Command Injection",
        "paranoia_level": "1",
        "rule_id": "932",
        "sec_rule_id": "932100",
        "severity": "CRITICAL",
        "tags": [
            "application-multi",
            "language-shell",
            "platform-unix",
            "attack-rce",
            "paranoia-level/1",
            "OWASP_CRS",
            "capec/1000/152/248/88",
            "PCI/6.5.2"
        ]
    },
    {
        "comment": "# Apache 2.2 requires configuration file lines to be under 8kB.\n# Therefore, some remaining commands have been split off to a separate rule.\n# For explanation of this rule, see rule 932100.\n#\n# Regular expression generated from util/regexp-assemble/data/932105.data.\n# To update the regular expression run the following shell script\n# (consult util/regexp-assemble/README.md for details):\n#   util/regexp-assemble/regexp-assemble.py update 932105\n#\n",
        "content": "SecRule REQUEST_COOKIES|!REQUEST_COOKIES:/__utm/|REQUEST_COOKIES_NAMES|ARGS_NAMES|ARGS|XML:/* \"@rx (?:;|\\{|\\||\\|\\||&|&&|\\n|\\r|\\$\\(|\\$\\(\\(|`|\\${|<\\(|>\\(|\\(\\s*\\))\\s*(?:{|\\s*\\(\\s*|\\w+=(?:[^\\s]*|\\$.*|\\$.*|<.*|>.*|\\'.*\\'|\\\".*\\\")\\s+|!\\s*|\\$)*\\s*(?:'|\\\")*(?:[\\?\\*\\[\\]\\(\\)\\-\\|+\\w'\\\"\\./\\x5c]+/)?[\\x5c'\\\"]*(?:s[\\x5c'\\\"]*(?:e[\\x5c'\\\"]*(?:t[\\x5c'\\\"]*(?:(?:f[\\x5c'\\\"]*a[\\x5c'\\\"]*c[\\x5c'\\\"]*l[\\x5c'\\\"]*)?(?:\\s|<|>).*|e[\\x5c'\\\"]*n[\\x5c'\\\"]*v|s[\\x5c'\\\"]*i[\\x5c'\\\"]*d)|n[\\x5c'\\\"]*d[\\x5c'\\\"]*m[\\x5c'\\\"]*a[\\x5c'\\\"]*i[\\x5c'\\\"]*l|d[\\x5c'\\\"]*(?:\\s|<|>).*)|h[\\x5c'\\\"]*(?:\\.[\\x5c'\\\"]*d[\\x5c'\\\"]*i[\\x5c'\\\"]*s[\\x5c'\\\"]*t[\\x5c'\\\"]*r[\\x5c'\\\"]*i[\\x5c'\\\"]*b|u[\\x5c'\\\"]*t[\\x5c'\\\"]*d[\\x5c'\\\"]*o[\\x5c'\\\"]*w[\\x5c'\\\"]*n|(?:\\s|<|>).*)|o[\\x5c'\\\"]*(?:(?:u[\\x5c'\\\"]*r[\\x5c'\\\"]*c[\\x5c'\\\"]*e|r[\\x5c'\\\"]*t)[\\x5c'\\\"]*(?:\\s|<|>).*|c[\\x5c'\\\"]*a[\\x5c'\\\"]*t)|c[\\x5c'\\\"]*(?:h[\\x5c'\\\"]*e[\\x5c'\\\"]*d|p[\\x5c'\\\"]*(?:\\s|<|>).*)|t[\\x5c'\\\"]*r[\\x5c'\\\"]*i[\\x5c'\\\"]*n[\\x5c'\\\"]*g[\\x5c'\\\"]*s|(?:l[\\x5c'\\\"]*e[\\x5c'\\\"]*e|f[\\x5c'\\\"]*t)[\\x5c'\\\"]*p|y[\\x5c'\\\"]*s[\\x5c'\\\"]*c[\\x5c'\\\"]*t[\\x5c'\\\"]*l|u[\\x5c'\\\"]*(?:(?:\\s|<|>).*|d[\\x5c'\\\"]*o)|d[\\x5c'\\\"]*i[\\x5c'\\\"]*f[\\x5c'\\\"]*f|s[\\x5c'\\\"]*h|v[\\x5c'\\\"]*n)|p[\\x5c'\\\"]*(?:k[\\x5c'\\\"]*(?:g(?:(?:[\\x5c'\\\"]*_)?[\\x5c'\\\"]*i[\\x5c'\\\"]*n[\\x5c'\\\"]*f[\\x5c'\\\"]*o)?|e[\\x5c'\\\"]*x[\\x5c'\\\"]*e[\\x5c'\\\"]*c|i[\\x5c'\\\"]*l[\\x5c'\\\"]*l)|t[\\x5c'\\\"]*a[\\x5c'\\\"]*r(?:[\\x5c'\\\"]*(?:d[\\x5c'\\\"]*i[\\x5c'\\\"]*f[\\x5c'\\\"]*f|g[\\x5c'\\\"]*r[\\x5c'\\\"]*e[\\x5c'\\\"]*p))?|a[\\x5c'\\\"]*(?:t[\\x5c'\\\"]*c[\\x5c'\\\"]*h[\\x5c'\\\"]*(?:\\s|<|>).*|s[\\x5c'\\\"]*s[\\x5c'\\\"]*w[\\x5c'\\\"]*d)|r[\\x5c'\\\"]*i[\\x5c'\\\"]*n[\\x5c'\\\"]*t[\\x5c'\\\"]*(?:e[\\x5c'\\\"]*n[\\x5c'\\\"]*v|f[\\x5c'\\\"]*(?:\\s|<|>).*)|y[\\x5c'\\\"]*t[\\x5c'\\\"]*h[\\x5c'\\\"]*o[\\x5c'\\\"]*n(?:[\\x5c'\\\"]*(?:3(?:[\\x5c'\\\"]*m)?|2))?|e[\\x5c'\\\"]*r[\\x5c'\\\"]*(?:l(?:[\\x5c'\\\"]*(?:s[\\x5c'\\\"]*h|5))?|m[\\x5c'\\\"]*s)|(?:u[\\x5c'\\\"]*s[\\x5c'\\\"]*h|o[\\x5c'\\\"]*p)[\\x5c'\\\"]*d|f[\\x5c'\\\"]*(?:(?:\\s|<|>).*|t[\\x5c'\\\"]*p)|g[\\x5c'\\\"]*r[\\x5c'\\\"]*e[\\x5c'\\\"]*p|h[\\x5c'\\\"]*p(?:[\\x5c'\\\"]*[57])?|i[\\x5c'\\\"]*n[\\x5c'\\\"]*g|s[\\x5c'\\\"]*(?:\\s|<|>).*)|n[\\x5c'\\\"]*(?:c[\\x5c'\\\"]*(?:\\.[\\x5c'\\\"]*(?:t[\\x5c'\\\"]*r[\\x5c'\\\"]*a[\\x5c'\\\"]*d[\\x5c'\\\"]*i[\\x5c'\\\"]*t[\\x5c'\\\"]*i[\\x5c'\\\"]*o[\\x5c'\\\"]*n[\\x5c'\\\"]*a[\\x5c'\\\"]*l|o[\\x5c'\\\"]*p[\\x5c'\\\"]*e[\\x5c'\\\"]*n[\\x5c'\\\"]*b[\\x5c'\\\"]*s[\\x5c'\\\"]*d)|(?:\\s|<|>).*|a[\\x5c'\\\"]*t)|e[\\x5c'\\\"]*t[\\x5c'\\\"]*(?:k[\\x5c'\\\"]*i[\\x5c'\\\"]*t[\\x5c'\\\"]*-[\\x5c'\\\"]*f[\\x5c'\\\"]*t[\\x5c'\\\"]*p|(?:s[\\x5c'\\\"]*t|c)[\\x5c'\\\"]*a[\\x5c'\\\"]*t|(?:\\s|<|>).*)|s[\\x5c'\\\"]*(?:l[\\x5c'\\\"]*o[\\x5c'\\\"]*o[\\x5c'\\\"]*k[\\x5c'\\\"]*u[\\x5c'\\\"]*p|t[\\x5c'\\\"]*a[\\x5c'\\\"]*t)|(?:a[\\x5c'\\\"]*n[\\x5c'\\\"]*o|i[\\x5c'\\\"]*c[\\x5c'\\\"]*e)[\\x5c'\\\"]*(?:\\s|<|>).*|(?:o[\\x5c'\\\"]*h[\\x5c'\\\"]*u|m[\\x5c'\\\"]*a)[\\x5c'\\\"]*p|p[\\x5c'\\\"]*i[\\x5c'\\\"]*n[\\x5c'\\\"]*g)|r[\\x5c'\\\"]*(?:e[\\x5c'\\\"]*(?:(?:p[\\x5c'\\\"]*(?:l[\\x5c'\\\"]*a[\\x5c'\\\"]*c[\\x5c'\\\"]*e|e[\\x5c'\\\"]*a[\\x5c'\\\"]*t)|n[\\x5c'\\\"]*a[\\x5c'\\\"]*m[\\x5c'\\\"]*e)[\\x5c'\\\"]*(?:\\s|<|>).*|a[\\x5c'\\\"]*l[\\x5c'\\\"]*p[\\x5c'\\\"]*a[\\x5c'\\\"]*t[\\x5c'\\\"]*h)|m[\\x5c'\\\"]*(?:(?:d[\\x5c'\\\"]*i[\\x5c'\\\"]*r[\\x5c'\\\"]*)?(?:\\s|<|>).*|u[\\x5c'\\\"]*s[\\x5c'\\\"]*e[\\x5c'\\\"]*r)|u[\\x5c'\\\"]*b[\\x5c'\\\"]*y(?:[\\x5c'\\\"]*(?:1(?:[\\x5c'\\\"]*[89])?|2[\\x5c'\\\"]*[012]))?|(?:c[\\x5c'\\\"]*p|p[\\x5c'\\\"]*m)[\\x5c'\\\"]*(?:\\s|<|>).*|a[\\x5c'\\\"]*(?:r[\\x5c'\\\"]*(?:\\s|<|>).*|k[\\x5c'\\\"]*u)|n[\\x5c'\\\"]*a[\\x5c'\\\"]*n[\\x5c'\\\"]*o|o[\\x5c'\\\"]*u[\\x5c'\\\"]*t[\\x5c'\\\"]*e|s[\\x5c'\\\"]*y[\\x5c'\\\"]*n[\\x5c'\\\"]*c)|t[\\x5c'\\\"]*(?:c[\\x5c'\\\"]*(?:p[\\x5c'\\\"]*(?:t[\\x5c'\\\"]*r[\\x5c'\\\"]*a[\\x5c'\\\"]*c[\\x5c'\\\"]*e[\\x5c'\\\"]*r[\\x5c'\\\"]*o[\\x5c'\\\"]*u[\\x5c'\\\"]*t[\\x5c'\\\"]*e|i[\\x5c'\\\"]*n[\\x5c'\\\"]*g)|s[\\x5c'\\\"]*h)|r[\\x5c'\\\"]*a[\\x5c'\\\"]*c[\\x5c'\\\"]*e[\\x5c'\\\"]*r[\\x5c'\\\"]*o[\\x5c'\\\"]*u[\\x5c'\\\"]*t[\\x5c'\\\"]*e(?:[\\x5c'\\\"]*6)?|e[\\x5c'\\\"]*(?:l[\\x5c'\\\"]*n[\\x5c'\\\"]*e[\\x5c'\\\"]*t|e[\\x5c'\\\"]*(?:\\s|<|>).*)|i[\\x5c'\\\"]*m[\\x5c'\\\"]*e[\\x5c'\\\"]*(?:o[\\x5c'\\\"]*u[\\x5c'\\\"]*t|(?:\\s|<|>).*)|a[\\x5c'\\\"]*(?:i[\\x5c'\\\"]*l(?:[\\x5c'\\\"]*f)?|r[\\x5c'\\\"]*(?:\\s|<|>).*)|o[\\x5c'\\\"]*(?:u[\\x5c'\\\"]*c[\\x5c'\\\"]*h[\\x5c'\\\"]*(?:\\s|<|>).*|p))|u[\\x5c'\\\"]*(?:n[\\x5c'\\\"]*(?:l[\\x5c'\\\"]*(?:i[\\x5c'\\\"]*n[\\x5c'\\\"]*k[\\x5c'\\\"]*(?:\\s|<|>).*|z[\\x5c'\\\"]*m[\\x5c'\\\"]*a)|c[\\x5c'\\\"]*o[\\x5c'\\\"]*m[\\x5c'\\\"]*p[\\x5c'\\\"]*r[\\x5c'\\\"]*e[\\x5c'\\\"]*s[\\x5c'\\\"]*s|a[\\x5c'\\\"]*m[\\x5c'\\\"]*e|r[\\x5c'\\\"]*a[\\x5c'\\\"]*r|s[\\x5c'\\\"]*e[\\x5c'\\\"]*t|z[\\x5c'\\\"]*i[\\x5c'\\\"]*p|x[\\x5c'\\\"]*z)|s[\\x5c'\\\"]*e[\\x5c'\\\"]*r[\\x5c'\\\"]*(?:(?:a[\\x5c'\\\"]*d|m[\\x5c'\\\"]*o)[\\x5c'\\\"]*d|d[\\x5c'\\\"]*e[\\x5c'\\\"]*l)|l[\\x5c'\\\"]*i[\\x5c'\\\"]*m[\\x5c'\\\"]*i[\\x5c'\\\"]*t[\\x5c'\\\"]*(?:\\s|<|>).*)|m[\\x5c'\\\"]*(?:y[\\x5c'\\\"]*s[\\x5c'\\\"]*q[\\x5c'\\\"]*l(?:[\\x5c'\\\"]*(?:d[\\x5c'\\\"]*u[\\x5c'\\\"]*m[\\x5c'\\\"]*p(?:[\\x5c'\\\"]*s[\\x5c'\\\"]*l[\\x5c'\\\"]*o[\\x5c'\\\"]*w)?|h[\\x5c'\\\"]*o[\\x5c'\\\"]*t[\\x5c'\\\"]*c[\\x5c'\\\"]*o[\\x5c'\\\"]*p[\\x5c'\\\"]*y|a[\\x5c'\\\"]*d[\\x5c'\\\"]*m[\\x5c'\\\"]*i[\\x5c'\\\"]*n|s[\\x5c'\\\"]*h[\\x5c'\\\"]*o[\\x5c'\\\"]*w))?|(?:(?:o[\\x5c'\\\"]*u[\\x5c'\\\"]*n|u[\\x5c'\\\"]*t)[\\x5c'\\\"]*t|v)[\\x5c'\\\"]*(?:\\s|<|>).*)|x[\\x5c'\\\"]*(?:z[\\x5c'\\\"]*(?:(?:[ef][\\x5c'\\\"]*)?g[\\x5c'\\\"]*r[\\x5c'\\\"]*e[\\x5c'\\\"]*p|d[\\x5c'\\\"]*(?:i[\\x5c'\\\"]*f[\\x5c'\\\"]*f|e[\\x5c'\\\"]*c)|c[\\x5c'\\\"]*(?:a[\\x5c'\\\"]*t|m[\\x5c'\\\"]*p)|l[\\x5c'\\\"]*e[\\x5c'\\\"]*s[\\x5c'\\\"]*s|m[\\x5c'\\\"]*o[\\x5c'\\\"]*r[\\x5c'\\\"]*e|(?:\\s|<|>).*)|a[\\x5c'\\\"]*r[\\x5c'\\\"]*g[\\x5c'\\\"]*s|t[\\x5c'\\\"]*e[\\x5c'\\\"]*r[\\x5c'\\\"]*m|x[\\x5c'\\\"]*d[\\x5c'\\\"]*(?:\\s|<|>).*)|z[\\x5c'\\\"]*(?:(?:[ef][\\x5c'\\\"]*)?g[\\x5c'\\\"]*r[\\x5c'\\\"]*e[\\x5c'\\\"]*p|c[\\x5c'\\\"]*(?:a[\\x5c'\\\"]*t|m[\\x5c'\\\"]*p)|d[\\x5c'\\\"]*i[\\x5c'\\\"]*f[\\x5c'\\\"]*f|i[\\x5c'\\\"]*p[\\x5c'\\\"]*(?:\\s|<|>).*|l[\\x5c'\\\"]*e[\\x5c'\\\"]*s[\\x5c'\\\"]*s|m[\\x5c'\\\"]*o[\\x5c'\\\"]*r[\\x5c'\\\"]*e|r[\\x5c'\\\"]*u[\\x5c'\\\"]*n|s[\\x5c'\\\"]*h)|o[\\x5c'\\\"]*(?:p[\\x5c'\\\"]*e[\\x5c'\\\"]*n[\\x5c'\\\"]*s[\\x5c'\\\"]*s[\\x5c'\\\"]*l|n[\\x5c'\\\"]*i[\\x5c'\\\"]*n[\\x5c'\\\"]*t[\\x5c'\\\"]*r)|w[\\x5c'\\\"]*(?:h[\\x5c'\\\"]*o[\\x5c'\\\"]*(?:a[\\x5c'\\\"]*m[\\x5c'\\\"]*i|(?:\\s|<|>).*)|g[\\x5c'\\\"]*e[\\x5c'\\\"]*t|3[\\x5c'\\\"]*m)|v[\\x5c'\\\"]*i[\\x5c'\\\"]*(?:m[\\x5c'\\\"]*(?:\\s|<|>).*|g[\\x5c'\\\"]*r|p[\\x5c'\\\"]*w)|y[\\x5c'\\\"]*u[\\x5c'\\\"]*m)\\b\" \\\n    \"id:932105,\\\n    phase:2,\\\n    block,\\\n    capture,\\\n    t:none,\\\n    msg:'Remote Command Execution: Unix Command Injection',\\\n    logdata:'Matched Data: %{TX.0} found within %{MATCHED_VAR_NAME}: %{MATCHED_VAR}',\\\n    tag:'application-multi',\\\n    tag:'language-shell',\\\n    tag:'platform-unix',\\\n    tag:'attack-rce',\\\n    tag:'paranoia-level/1',\\\n    tag:'OWASP_CRS',\\\n    tag:'capec/1000/152/248/88',\\\n    tag:'PCI/6.5.2',\\\n    ctl:auditLogParts=+E,\\\n    ver:'OWASP_CRS/3.4.0-dev',\\\n    severity:'CRITICAL',\\\n    setvar:'tx.rce_score=+%{tx.critical_anomaly_score}',\\\n    setvar:'tx.inbound_anomaly_score_pl1=+%{tx.critical_anomaly_score}'\"\n",
        "description": "Remote Command Execution: Unix Command Injection",
        "paranoia_level": "1",
        "rule_id": "932",
        "sec_rule_id": "932105",
        "severity": "CRITICAL",
        "tags": [
            "application-multi",
            "language-shell",
            "platform-unix",
            "attack-rce",
            "paranoia-level/1",
            "OWASP_CRS",
            "capec/1000/152/248/88",
            "PCI/6.5.2"
        ]
    },
    {
        "comment": "# [ Windows command injection ]\n#\n# This rule detects Windows shell command injections.\n# If you are not running Windows, it is safe to disable this rule.\n#\n# A command injection takes a form such as:\n#\n#   foo.jpg&ver /r\n#   foo.jpg|ver /r\n#\n# The vulnerability exists when an application executes a shell command\n# without proper input escaping/validation.\n#\n# To prevent false positives, we look for a 'starting sequence' that\n# precedes a command in CMD syntax, such as: ; | & `\n#\n# Anatomy of the regexp:\n#\n# 1. Starting tokens\n#\n# ;        ;cmd\n# \\{       {cmd\n# \\|       |cmd\n# \\|\\|     ||cmd\n# &        &cmd\n# &&       &&cmd\n# \\n       \\ncmd\n# \\r       \\rcmd\n# `        `cmd\n#\n# 2. Command prefixes\n#\n# (        (cmd)\n# ,        ,cmd\n# @        @cmd\n# '        'cmd'\n# \"        \"cmd\"\n# \\s       spacing+cmd\n#\n# 3. Paths\n#\n# [\\w'\\\"\\./]+/                          /path/cmd\n# [\\x5c'\\\"\\^]*\\w[\\x5c'\\\"\\^]*:.*\\x5c     C:\\Program Files\\cmd\n# [\\^\\.\\w '\\\"/\\x5c]*\\x5c)?[\\\"\\^]*       \\\\net\\share\\dir\\cmd\n#\n# 4. Quoting\n#\n# \\\"       \"cmd\"\n# \\^       ^cmd\n#\n# 5. Extension/switches\n#\n# \\.[\\\"\\^]*\\w+      cmd.com, cmd.exe, etc.\n# /b                cmd/h\n#\n# An effort is made to combat evasions by CMD syntax; for example,\n# the following strings are valid: c^md, @cmd, \"c\"md. ModSecurity\n# has a t:cmdLine transformation built-in to deal with some of these,\n# but unfortunately, that transformation replaces ';' characters (so\n# we cannot match on the start of a command) and '\\' characters (so we\n# have trouble matching paths). This makes the regexp more complex.\n#\n# This rule is case-insensitive.\n#\n# Regular expression generated from util/regexp-assemble/data/932110.data.\n# To update the regular expression run the following shell script\n# (consult util/regexp-assemble/README.md for details):\n#   util/regexp-assemble/regexp-assemble.py update 932110\n#\n",
        "content": "SecRule REQUEST_COOKIES|!REQUEST_COOKIES:/__utm/|REQUEST_COOKIES_NAMES|ARGS_NAMES|ARGS|XML:/* \"@rx (?i)(?:;|\\{|\\||\\|\\||&|&&|\\n|\\r|`)\\s*[\\(,@\\'\\\"\\s]*(?:[\\w'\\\"\\./]+/|[\\x5c'\\\"\\^]*\\w[\\x5c'\\\"\\^]*:.*\\x5c|[\\^\\.\\w '\\\"/\\x5c]*\\x5c)?[\\\"\\^]*(?:m[\\\"\\^]*(?:y[\\\"\\^]*s[\\\"\\^]*q[\\\"\\^]*l(?:[\\\"\\^]*(?:d[\\\"\\^]*u[\\\"\\^]*m[\\\"\\^]*p(?:[\\\"\\^]*s[\\\"\\^]*l[\\\"\\^]*o[\\\"\\^]*w)?|h[\\\"\\^]*o[\\\"\\^]*t[\\\"\\^]*c[\\\"\\^]*o[\\\"\\^]*p[\\\"\\^]*y|a[\\\"\\^]*d[\\\"\\^]*m[\\\"\\^]*i[\\\"\\^]*n|s[\\\"\\^]*h[\\\"\\^]*o[\\\"\\^]*w))?|s[\\\"\\^]*(?:i[\\\"\\^]*(?:n[\\\"\\^]*f[\\\"\\^]*o[\\\"\\^]*3[\\\"\\^]*2|e[\\\"\\^]*x[\\\"\\^]*e[\\\"\\^]*c)|c[\\\"\\^]*o[\\\"\\^]*n[\\\"\\^]*f[\\\"\\^]*i[\\\"\\^]*g|g[\\\"\\^]*(?:[\\s,;]|\\.|/|<|>).*|t[\\\"\\^]*s[\\\"\\^]*c)|o[\\\"\\^]*(?:u[\\\"\\^]*n[\\\"\\^]*t[\\\"\\^]*(?:(?:[\\s,;]|\\.|/|<|>).*|v[\\\"\\^]*o[\\\"\\^]*l)|v[\\\"\\^]*e[\\\"\\^]*u[\\\"\\^]*s[\\\"\\^]*e[\\\"\\^]*r|[dr][\\\"\\^]*e[\\\"\\^]*(?:[\\s,;]|\\.|/|<|>).*)|k[\\\"\\^]*(?:d[\\\"\\^]*i[\\\"\\^]*r[\\\"\\^]*(?:[\\s,;]|\\.|/|<|>).*|l[\\\"\\^]*i[\\\"\\^]*n[\\\"\\^]*k)|d[\\\"\\^]*(?:s[\\\"\\^]*c[\\\"\\^]*h[\\\"\\^]*e[\\\"\\^]*d|(?:[\\s,;]|\\.|/|<|>).*)|a[\\\"\\^]*p[\\\"\\^]*i[\\\"\\^]*s[\\\"\\^]*e[\\\"\\^]*n[\\\"\\^]*d|b[\\\"\\^]*s[\\\"\\^]*a[\\\"\\^]*c[\\\"\\^]*l[\\\"\\^]*i|e[\\\"\\^]*a[\\\"\\^]*s[\\\"\\^]*u[\\\"\\^]*r[\\\"\\^]*e|m[\\\"\\^]*s[\\\"\\^]*y[\\\"\\^]*s)|d[\\\"\\^]*(?:i[\\\"\\^]*(?:s[\\\"\\^]*k[\\\"\\^]*(?:(?:m[\\\"\\^]*g[\\\"\\^]*m|p[\\\"\\^]*a[\\\"\\^]*r)[\\\"\\^]*t|s[\\\"\\^]*h[\\\"\\^]*a[\\\"\\^]*d[\\\"\\^]*o[\\\"\\^]*w)|r[\\\"\\^]*(?:(?:[\\s,;]|\\.|/|<|>).*|u[\\\"\\^]*s[\\\"\\^]*e)|f[\\\"\\^]*f[\\\"\\^]*(?:[\\s,;]|\\.|/|<|>).*)|e[\\\"\\^]*(?:l[\\\"\\^]*(?:p[\\\"\\^]*r[\\\"\\^]*o[\\\"\\^]*f|t[\\\"\\^]*r[\\\"\\^]*e[\\\"\\^]*e|(?:[\\s,;]|\\.|/|<|>).*)|v[\\\"\\^]*(?:m[\\\"\\^]*g[\\\"\\^]*m[\\\"\\^]*t|c[\\\"\\^]*o[\\\"\\^]*n)|(?:f[\\\"\\^]*r[\\\"\\^]*a|b[\\\"\\^]*u)[\\\"\\^]*g)|s[\\\"\\^]*(?:a[\\\"\\^]*(?:c[\\\"\\^]*l[\\\"\\^]*s|d[\\\"\\^]*d)|q[\\\"\\^]*u[\\\"\\^]*e[\\\"\\^]*r[\\\"\\^]*y|m[\\\"\\^]*o[\\\"\\^]*(?:v[\\\"\\^]*e|d)|g[\\\"\\^]*e[\\\"\\^]*t|r[\\\"\\^]*m)|(?:r[\\\"\\^]*i[\\\"\\^]*v[\\\"\\^]*e[\\\"\\^]*r[\\\"\\^]*q[\\\"\\^]*u[\\\"\\^]*e[\\\"\\^]*r|o[\\\"\\^]*s[\\\"\\^]*k[\\\"\\^]*e)[\\\"\\^]*y|(?:c[\\\"\\^]*o[\\\"\\^]*m[\\\"\\^]*c[\\\"\\^]*n[\\\"\\^]*f|x[\\\"\\^]*d[\\\"\\^]*i[\\\"\\^]*a)[\\\"\\^]*g|a[\\\"\\^]*t[\\\"\\^]*e[\\\"\\^]*(?:[\\s,;]|\\.|/|<|>).*|n[\\\"\\^]*s[\\\"\\^]*s[\\\"\\^]*t[\\\"\\^]*a[\\\"\\^]*t)|c[\\\"\\^]*(?:o[\\\"\\^]*(?:m[\\\"\\^]*(?:p[\\\"\\^]*(?:(?:a[\\\"\\^]*c[\\\"\\^]*t[\\\"\\^]*)?(?:[\\s,;]|\\.|/|<|>).*|m[\\\"\\^]*g[\\\"\\^]*m[\\\"\\^]*t)|e[\\\"\\^]*x[\\\"\\^]*p)|n[\\\"\\^]*(?:2[\\\"\\^]*p|v[\\\"\\^]*e)[\\\"\\^]*r[\\\"\\^]*t|p[\\\"\\^]*y)|l[\\\"\\^]*(?:e[\\\"\\^]*a[\\\"\\^]*(?:n[\\\"\\^]*m[\\\"\\^]*g[\\\"\\^]*r|r[\\\"\\^]*m[\\\"\\^]*e[\\\"\\^]*m)|u[\\\"\\^]*s[\\\"\\^]*t[\\\"\\^]*e[\\\"\\^]*r)|h[\\\"\\^]*(?:k[\\\"\\^]*(?:n[\\\"\\^]*t[\\\"\\^]*f[\\\"\\^]*s|d[\\\"\\^]*s[\\\"\\^]*k)|d[\\\"\\^]*i[\\\"\\^]*r[\\\"\\^]*(?:[\\s,;]|\\.|/|<|>).*)|s[\\\"\\^]*(?:c[\\\"\\^]*(?:r[\\\"\\^]*i[\\\"\\^]*p[\\\"\\^]*t|c[\\\"\\^]*m[\\\"\\^]*d)|v[\\\"\\^]*d[\\\"\\^]*e)|e[\\\"\\^]*r[\\\"\\^]*t[\\\"\\^]*(?:u[\\\"\\^]*t[\\\"\\^]*i[\\\"\\^]*l|r[\\\"\\^]*e[\\\"\\^]*q)|a[\\\"\\^]*(?:l[\\\"\\^]*l[\\\"\\^]*(?:[\\s,;]|\\.|/|<|>).*|c[\\\"\\^]*l[\\\"\\^]*s)|m[\\\"\\^]*d(?:[\\\"\\^]*k[\\\"\\^]*e[\\\"\\^]*y)?|i[\\\"\\^]*p[\\\"\\^]*h[\\\"\\^]*e[\\\"\\^]*r|u[\\\"\\^]*r[\\\"\\^]*l)|f[\\\"\\^]*(?:o[\\\"\\^]*r[\\\"\\^]*(?:m[\\\"\\^]*a[\\\"\\^]*t[\\\"\\^]*(?:[\\s,;]|\\.|/|<|>).*|f[\\\"\\^]*i[\\\"\\^]*l[\\\"\\^]*e[\\\"\\^]*s|e[\\\"\\^]*a[\\\"\\^]*c[\\\"\\^]*h)|i[\\\"\\^]*n[\\\"\\^]*d[\\\"\\^]*(?:(?:[\\s,;]|\\.|/|<|>).*|s[\\\"\\^]*t[\\\"\\^]*r)|s[\\\"\\^]*(?:m[\\\"\\^]*g[\\\"\\^]*m[\\\"\\^]*t|u[\\\"\\^]*t[\\\"\\^]*i[\\\"\\^]*l)|t[\\\"\\^]*(?:p[\\\"\\^]*(?:[\\s,;]|\\.|/|<|>).*|y[\\\"\\^]*p[\\\"\\^]*e)|r[\\\"\\^]*e[\\\"\\^]*e[\\\"\\^]*d[\\\"\\^]*i[\\\"\\^]*s[\\\"\\^]*k|c[\\\"\\^]*(?:[\\s,;]|\\.|/|<|>).*|g[\\\"\\^]*r[\\\"\\^]*e[\\\"\\^]*p)|n[\\\"\\^]*(?:e[\\\"\\^]*t[\\\"\\^]*(?:s[\\\"\\^]*(?:t[\\\"\\^]*a[\\\"\\^]*t|v[\\\"\\^]*c|h)|(?:[\\s,;]|\\.|/|<|>).*|c[\\\"\\^]*a[\\\"\\^]*t|d[\\\"\\^]*o[\\\"\\^]*m)|t[\\\"\\^]*(?:b[\\\"\\^]*a[\\\"\\^]*c[\\\"\\^]*k[\\\"\\^]*u[\\\"\\^]*p|r[\\\"\\^]*i[\\\"\\^]*g[\\\"\\^]*h[\\\"\\^]*t[\\\"\\^]*s)|(?:s[\\\"\\^]*l[\\\"\\^]*o[\\\"\\^]*o[\\\"\\^]*k[\\\"\\^]*u|m[\\\"\\^]*a)[\\\"\\^]*p|c[\\\"\\^]*(?:(?:[\\s,;]|\\.|/|<|>).*|a[\\\"\\^]*t)|b[\\\"\\^]*t[\\\"\\^]*s[\\\"\\^]*t[\\\"\\^]*a[\\\"\\^]*t)|e[\\\"\\^]*(?:x[\\\"\\^]*p[\\\"\\^]*(?:a[\\\"\\^]*n[\\\"\\^]*d[\\\"\\^]*(?:[\\s,;]|\\.|/|<|>).*|l[\\\"\\^]*o[\\\"\\^]*r[\\\"\\^]*e[\\\"\\^]*r)|v[\\\"\\^]*e[\\\"\\^]*n[\\\"\\^]*t[\\\"\\^]*(?:c[\\\"\\^]*r[\\\"\\^]*e[\\\"\\^]*a[\\\"\\^]*t[\\\"\\^]*e|v[\\\"\\^]*w[\\\"\\^]*r)|n[\\\"\\^]*d[\\\"\\^]*l[\\\"\\^]*o[\\\"\\^]*c[\\\"\\^]*a[\\\"\\^]*l|g[\\\"\\^]*r[\\\"\\^]*e[\\\"\\^]*p|r[\\\"\\^]*a[\\\"\\^]*s[\\\"\\^]*e|c[\\\"\\^]*h[\\\"\\^]*o)|g[\\\"\\^]*(?:a[\\\"\\^]*t[\\\"\\^]*h[\\\"\\^]*e[\\\"\\^]*r[\\\"\\^]*n[\\\"\\^]*e[\\\"\\^]*t[\\\"\\^]*w[\\\"\\^]*o[\\\"\\^]*r[\\\"\\^]*k[\\\"\\^]*i[\\\"\\^]*n[\\\"\\^]*f[\\\"\\^]*o|p[\\\"\\^]*(?:(?:r[\\\"\\^]*e[\\\"\\^]*s[\\\"\\^]*u[\\\"\\^]*l|e[\\\"\\^]*d[\\\"\\^]*i)[\\\"\\^]*t|u[\\\"\\^]*p[\\\"\\^]*d[\\\"\\^]*a[\\\"\\^]*t[\\\"\\^]*e)|i[\\\"\\^]*t[\\\"\\^]*(?:[\\s,;]|\\.|/|<|>).*|e[\\\"\\^]*t[\\\"\\^]*m[\\\"\\^]*a[\\\"\\^]*c)|i[\\\"\\^]*(?:r[\\\"\\^]*b(?:[\\\"\\^]*(?:1(?:[\\\"\\^]*[89])?|2[\\\"\\^]*[012]))?|f[\\\"\\^]*m[\\\"\\^]*e[\\\"\\^]*m[\\\"\\^]*b[\\\"\\^]*e[\\\"\\^]*r|p[\\\"\\^]*c[\\\"\\^]*o[\\\"\\^]*n[\\\"\\^]*f[\\\"\\^]*i[\\\"\\^]*g|n[\\\"\\^]*e[\\\"\\^]*t[\\\"\\^]*c[\\\"\\^]*p[\\\"\\^]*l|c[\\\"\\^]*a[\\\"\\^]*c[\\\"\\^]*l[\\\"\\^]*s)|a[\\\"\\^]*(?:d[\\\"\\^]*(?:d[\\\"\\^]*u[\\\"\\^]*s[\\\"\\^]*e[\\\"\\^]*r[\\\"\\^]*s|m[\\\"\\^]*o[\\\"\\^]*d[\\\"\\^]*c[\\\"\\^]*m[\\\"\\^]*d)|r[\\\"\\^]*p[\\\"\\^]*(?:[\\s,;]|\\.|/|<|>).*|t[\\\"\\^]*t[\\\"\\^]*r[\\\"\\^]*i[\\\"\\^]*b|s[\\\"\\^]*s[\\\"\\^]*o[\\\"\\^]*c|z[\\\"\\^]*m[\\\"\\^]*a[\\\"\\^]*n)|l[\\\"\\^]*(?:o[\\\"\\^]*g[\\\"\\^]*(?:e[\\\"\\^]*v[\\\"\\^]*e[\\\"\\^]*n[\\\"\\^]*t|t[\\\"\\^]*i[\\\"\\^]*m[\\\"\\^]*e|m[\\\"\\^]*a[\\\"\\^]*n|o[\\\"\\^]*f[\\\"\\^]*f)|a[\\\"\\^]*b[\\\"\\^]*e[\\\"\\^]*l[\\\"\\^]*(?:[\\s,;]|\\.|/|<|>).*|u[\\\"\\^]*s[\\\"\\^]*r[\\\"\\^]*m[\\\"\\^]*g[\\\"\\^]*r)|b[\\\"\\^]*(?:(?:c[\\\"\\^]*d[\\\"\\^]*(?:b[\\\"\\^]*o[\\\"\\^]*o|e[\\\"\\^]*d[\\\"\\^]*i)|r[\\\"\\^]*o[\\\"\\^]*w[\\\"\\^]*s[\\\"\\^]*t[\\\"\\^]*a)[\\\"\\^]*t|i[\\\"\\^]*t[\\\"\\^]*s[\\\"\\^]*a[\\\"\\^]*d[\\\"\\^]*m[\\\"\\^]*i[\\\"\\^]*n|o[\\\"\\^]*o[\\\"\\^]*t[\\\"\\^]*c[\\\"\\^]*f[\\\"\\^]*g)|h[\\\"\\^]*(?:o[\\\"\\^]*s[\\\"\\^]*t[\\\"\\^]*n[\\\"\\^]*a[\\\"\\^]*m[\\\"\\^]*e|d[\\\"\\^]*w[\\\"\\^]*w[\\\"\\^]*i[\\\"\\^]*z)|j[\\\"\\^]*a[\\\"\\^]*v[\\\"\\^]*a[\\\"\\^]*(?:[\\s,;]|\\.|/|<|>).*|7[\\\"\\^]*z(?:[\\\"\\^]*[ar])?)(?:\\.[\\\"\\^]*\\w+)?\\b\" \\\n    \"id:932110,\\\n    phase:2,\\\n    block,\\\n    capture,\\\n    t:none,\\\n    msg:'Remote Command Execution: Windows Command Injection',\\\n    logdata:'Matched Data: %{TX.0} found within %{MATCHED_VAR_NAME}: %{MATCHED_VAR}',\\\n    tag:'application-multi',\\\n    tag:'language-shell',\\\n    tag:'platform-windows',\\\n    tag:'attack-rce',\\\n    tag:'paranoia-level/1',\\\n    tag:'OWASP_CRS',\\\n    tag:'capec/1000/152/248/88',\\\n    tag:'PCI/6.5.2',\\\n    ctl:auditLogParts=+E,\\\n    ver:'OWASP_CRS/3.4.0-dev',\\\n    severity:'CRITICAL',\\\n    setvar:'tx.rce_score=+%{tx.critical_anomaly_score}',\\\n    setvar:'tx.inbound_anomaly_score_pl1=+%{tx.critical_anomaly_score}'\"\n",
        "description": "Remote Command Execution: Windows Command Injection",
        "paranoia_level": "1",
        "rule_id": "932",
        "sec_rule_id": "932110",
        "severity": "CRITICAL",
        "tags": [
            "application-multi",
            "language-shell",
            "platform-windows",
            "attack-rce",
            "paranoia-level/1",
            "OWASP_CRS",
            "capec/1000/152/248/88",
            "PCI/6.5.2"
        ]
    },
    {
        "comment": "# Apache 2.2 requires configuration file lines to be under 8kB.\n# Therefore, some remaining commands have been split off to a separate rule.\n# For explanation of this rule, see rule 932110.\n#\n# This rule is also triggered by an Oracle WebLogic Remote Command Execution exploit:\n# [ Oracle WebLogic vulnerability CVE-2017-10271 - Exploit tested: https://www.exploit-db.com/exploits/43458 ]\n#\n# Regular expression generated from util/regexp-assemble/data/932115.data.\n# To update the regular expression run the following shell script\n# (consult util/regexp-assemble/README.md for details):\n#   util/regexp-assemble/regexp-assemble.py update 932115\n#\n",
        "content": "SecRule REQUEST_COOKIES|!REQUEST_COOKIES:/__utm/|REQUEST_COOKIES_NAMES|ARGS_NAMES|ARGS|XML:/* \"@rx (?i)(?:;|\\{|\\||\\|\\||&|&&|\\n|\\r|`)\\s*[\\(,@\\'\\\"\\s]*(?:[\\w'\\\"\\./]+/|[\\x5c'\\\"\\^]*\\w[\\x5c'\\\"\\^]*:.*\\x5c|[\\^\\.\\w '\\\"/\\x5c]*\\x5c)?[\\\"\\^]*(?:s[\\\"\\^]*(?:y[\\\"\\^]*s[\\\"\\^]*(?:t[\\\"\\^]*e[\\\"\\^]*m[\\\"\\^]*(?:p[\\\"\\^]*r[\\\"\\^]*o[\\\"\\^]*p[\\\"\\^]*e[\\\"\\^]*r[\\\"\\^]*t[\\\"\\^]*i[\\\"\\^]*e[\\\"\\^]*s[\\\"\\^]*(?:d[\\\"\\^]*a[\\\"\\^]*t[\\\"\\^]*a[\\\"\\^]*e[\\\"\\^]*x[\\\"\\^]*e[\\\"\\^]*c[\\\"\\^]*u[\\\"\\^]*t[\\\"\\^]*i[\\\"\\^]*o[\\\"\\^]*n[\\\"\\^]*p[\\\"\\^]*r[\\\"\\^]*e[\\\"\\^]*v[\\\"\\^]*e[\\\"\\^]*n[\\\"\\^]*t[\\\"\\^]*i[\\\"\\^]*o[\\\"\\^]*n|(?:p[\\\"\\^]*e[\\\"\\^]*r[\\\"\\^]*f[\\\"\\^]*o[\\\"\\^]*r[\\\"\\^]*m[\\\"\\^]*a[\\\"\\^]*n[\\\"\\^]*c|h[\\\"\\^]*a[\\\"\\^]*r[\\\"\\^]*d[\\\"\\^]*w[\\\"\\^]*a[\\\"\\^]*r)[\\\"\\^]*e|a[\\\"\\^]*d[\\\"\\^]*v[\\\"\\^]*a[\\\"\\^]*n[\\\"\\^]*c[\\\"\\^]*e[\\\"\\^]*d)|i[\\\"\\^]*n[\\\"\\^]*f[\\\"\\^]*o)|k[\\\"\\^]*e[\\\"\\^]*y|d[\\\"\\^]*m)|h[\\\"\\^]*(?:o[\\\"\\^]*(?:w[\\\"\\^]*(?:g[\\\"\\^]*r[\\\"\\^]*p|m[\\\"\\^]*b[\\\"\\^]*r)[\\\"\\^]*s|r[\\\"\\^]*t[\\\"\\^]*c[\\\"\\^]*u[\\\"\\^]*t)|e[\\\"\\^]*l[\\\"\\^]*l[\\\"\\^]*r[\\\"\\^]*u[\\\"\\^]*n[\\\"\\^]*a[\\\"\\^]*s|u[\\\"\\^]*t[\\\"\\^]*d[\\\"\\^]*o[\\\"\\^]*w[\\\"\\^]*n|r[\\\"\\^]*p[\\\"\\^]*u[\\\"\\^]*b[\\\"\\^]*w|a[\\\"\\^]*r[\\\"\\^]*e|i[\\\"\\^]*f[\\\"\\^]*t)|e[\\\"\\^]*(?:t[\\\"\\^]*(?:(?:x[\\\"\\^]*)?(?:[\\s,;]|\\.|/|<|>).*|l[\\\"\\^]*o[\\\"\\^]*c[\\\"\\^]*a[\\\"\\^]*l)|c[\\\"\\^]*p[\\\"\\^]*o[\\\"\\^]*l|l[\\\"\\^]*e[\\\"\\^]*c[\\\"\\^]*t)|c[\\\"\\^]*(?:h[\\\"\\^]*t[\\\"\\^]*a[\\\"\\^]*s[\\\"\\^]*k[\\\"\\^]*s|l[\\\"\\^]*i[\\\"\\^]*s[\\\"\\^]*t)|u[\\\"\\^]*b[\\\"\\^]*(?:i[\\\"\\^]*n[\\\"\\^]*a[\\\"\\^]*c[\\\"\\^]*l|s[\\\"\\^]*t)|(?:t[\\\"\\^]*a|o)[\\\"\\^]*r[\\\"\\^]*t[\\\"\\^]*(?:[\\s,;]|\\.|/|<|>).*|i[\\\"\\^]*g[\\\"\\^]*v[\\\"\\^]*e[\\\"\\^]*r[\\\"\\^]*i[\\\"\\^]*f|l[\\\"\\^]*(?:e[\\\"\\^]*e[\\\"\\^]*p|m[\\\"\\^]*g[\\\"\\^]*r)|f[\\\"\\^]*c|v[\\\"\\^]*n)|p[\\\"\\^]*(?:s[\\\"\\^]*(?:s[\\\"\\^]*(?:h[\\\"\\^]*u[\\\"\\^]*t[\\\"\\^]*d[\\\"\\^]*o[\\\"\\^]*w[\\\"\\^]*n|e[\\\"\\^]*r[\\\"\\^]*v[\\\"\\^]*i[\\\"\\^]*c[\\\"\\^]*e|u[\\\"\\^]*s[\\\"\\^]*p[\\\"\\^]*e[\\\"\\^]*n[\\\"\\^]*d)|l[\\\"\\^]*(?:o[\\\"\\^]*g[\\\"\\^]*(?:g[\\\"\\^]*e[\\\"\\^]*d[\\\"\\^]*o[\\\"\\^]*n|l[\\\"\\^]*i[\\\"\\^]*s[\\\"\\^]*t)|i[\\\"\\^]*s[\\\"\\^]*t)|p[\\\"\\^]*(?:a[\\\"\\^]*s[\\\"\\^]*s[\\\"\\^]*w[\\\"\\^]*d|i[\\\"\\^]*n[\\\"\\^]*g)|g[\\\"\\^]*e[\\\"\\^]*t[\\\"\\^]*s[\\\"\\^]*i[\\\"\\^]*d|e[\\\"\\^]*x[\\\"\\^]*e[\\\"\\^]*c|f[\\\"\\^]*i[\\\"\\^]*l[\\\"\\^]*e|i[\\\"\\^]*n[\\\"\\^]*f[\\\"\\^]*o|k[\\\"\\^]*i[\\\"\\^]*l[\\\"\\^]*l)|o[\\\"\\^]*(?:w[\\\"\\^]*e[\\\"\\^]*r[\\\"\\^]*(?:s[\\\"\\^]*h[\\\"\\^]*e[\\\"\\^]*l[\\\"\\^]*l(?:[\\\"\\^]*_[\\\"\\^]*i[\\\"\\^]*s[\\\"\\^]*e)?|c[\\\"\\^]*f[\\\"\\^]*g)|r[\\\"\\^]*t[\\\"\\^]*q[\\\"\\^]*r[\\\"\\^]*y|p[\\\"\\^]*d)|r[\\\"\\^]*(?:i[\\\"\\^]*n[\\\"\\^]*t[\\\"\\^]*(?:(?:[\\s,;]|\\.|/|<|>).*|b[\\\"\\^]*r[\\\"\\^]*m)|n[\\\"\\^]*(?:c[\\\"\\^]*n[\\\"\\^]*f[\\\"\\^]*g|m[\\\"\\^]*n[\\\"\\^]*g[\\\"\\^]*r)|o[\\\"\\^]*m[\\\"\\^]*p[\\\"\\^]*t)|a[\\\"\\^]*t[\\\"\\^]*h[\\\"\\^]*(?:p[\\\"\\^]*i[\\\"\\^]*n[\\\"\\^]*g|(?:[\\s,;]|\\.|/|<|>).*)|e[\\\"\\^]*r[\\\"\\^]*(?:l(?:[\\\"\\^]*(?:s[\\\"\\^]*h|5))?|f[\\\"\\^]*m[\\\"\\^]*o[\\\"\\^]*n)|y[\\\"\\^]*t[\\\"\\^]*h[\\\"\\^]*o[\\\"\\^]*n(?:[\\\"\\^]*(?:3(?:[\\\"\\^]*m)?|2))?|k[\\\"\\^]*g[\\\"\\^]*m[\\\"\\^]*g[\\\"\\^]*r|h[\\\"\\^]*p(?:[\\\"\\^]*[57])?|u[\\\"\\^]*s[\\\"\\^]*h[\\\"\\^]*d|i[\\\"\\^]*n[\\\"\\^]*g)|r[\\\"\\^]*(?:e[\\\"\\^]*(?:(?:p[\\\"\\^]*l[\\\"\\^]*a[\\\"\\^]*c[\\\"\\^]*e|n(?:[\\\"\\^]*a[\\\"\\^]*m[\\\"\\^]*e)?|s[\\\"\\^]*e[\\\"\\^]*t)[\\\"\\^]*(?:[\\s,;]|\\.|/|<|>).*|g[\\\"\\^]*(?:s[\\\"\\^]*v[\\\"\\^]*r[\\\"\\^]*3[\\\"\\^]*2|e[\\\"\\^]*d[\\\"\\^]*i[\\\"\\^]*t|(?:[\\s,;]|\\.|/|<|>).*|i[\\\"\\^]*n[\\\"\\^]*i)|c[\\\"\\^]*(?:d[\\\"\\^]*i[\\\"\\^]*s[\\\"\\^]*c|o[\\\"\\^]*v[\\\"\\^]*e[\\\"\\^]*r)|k[\\\"\\^]*e[\\\"\\^]*y[\\\"\\^]*w[\\\"\\^]*i[\\\"\\^]*z)|u[\\\"\\^]*(?:n[\\\"\\^]*(?:d[\\\"\\^]*l[\\\"\\^]*l[\\\"\\^]*3[\\\"\\^]*2|a[\\\"\\^]*s)|b[\\\"\\^]*y[\\\"\\^]*(?:1(?:[\\\"\\^]*[89])?|2[\\\"\\^]*[012]))|a[\\\"\\^]*(?:s[\\\"\\^]*(?:p[\\\"\\^]*h[\\\"\\^]*o[\\\"\\^]*n[\\\"\\^]*e|d[\\\"\\^]*i[\\\"\\^]*a[\\\"\\^]*l)|r[\\\"\\^]*(?:[\\s,;]|\\.|/|<|>).*)|m[\\\"\\^]*(?:(?:d[\\\"\\^]*i[\\\"\\^]*r[\\\"\\^]*)?(?:[\\s,;]|\\.|/|<|>).*|t[\\\"\\^]*s[\\\"\\^]*h[\\\"\\^]*a[\\\"\\^]*r[\\\"\\^]*e)|o[\\\"\\^]*(?:u[\\\"\\^]*t[\\\"\\^]*e[\\\"\\^]*(?:[\\s,;]|\\.|/|<|>).*|b[\\\"\\^]*o[\\\"\\^]*c[\\\"\\^]*o[\\\"\\^]*p[\\\"\\^]*y)|s[\\\"\\^]*(?:t[\\\"\\^]*r[\\\"\\^]*u[\\\"\\^]*i|y[\\\"\\^]*n[\\\"\\^]*c)|d[\\\"\\^]*(?:[\\s,;]|\\.|/|<|>).*)|t[\\\"\\^]*(?:a[\\\"\\^]*(?:s[\\\"\\^]*k[\\\"\\^]*(?:k[\\\"\\^]*i[\\\"\\^]*l[\\\"\\^]*l|l[\\\"\\^]*i[\\\"\\^]*s[\\\"\\^]*t|s[\\\"\\^]*c[\\\"\\^]*h[\\\"\\^]*d|m[\\\"\\^]*g[\\\"\\^]*r)|k[\\\"\\^]*e[\\\"\\^]*o[\\\"\\^]*w[\\\"\\^]*n)|(?:i[\\\"\\^]*m[\\\"\\^]*e[\\\"\\^]*o[\\\"\\^]*u|p[\\\"\\^]*m[\\\"\\^]*i[\\\"\\^]*n[\\\"\\^]*i|e[\\\"\\^]*l[\\\"\\^]*n[\\\"\\^]*e|l[\\\"\\^]*i[\\\"\\^]*s)[\\\"\\^]*t|s[\\\"\\^]*(?:d[\\\"\\^]*i[\\\"\\^]*s[\\\"\\^]*c[\\\"\\^]*o|s[\\\"\\^]*h[\\\"\\^]*u[\\\"\\^]*t[\\\"\\^]*d)[\\\"\\^]*n|y[\\\"\\^]*p[\\\"\\^]*e[\\\"\\^]*(?:p[\\\"\\^]*e[\\\"\\^]*r[\\\"\\^]*f|(?:[\\s,;]|\\.|/|<|>).*)|r[\\\"\\^]*(?:a[\\\"\\^]*c[\\\"\\^]*e[\\\"\\^]*r[\\\"\\^]*t|e[\\\"\\^]*e))|w[\\\"\\^]*(?:i[\\\"\\^]*n[\\\"\\^]*(?:d[\\\"\\^]*i[\\\"\\^]*f[\\\"\\^]*f|m[\\\"\\^]*s[\\\"\\^]*d[\\\"\\^]*p|v[\\\"\\^]*a[\\\"\\^]*r|r[\\\"\\^]*[ms])|u[\\\"\\^]*(?:a[\\\"\\^]*(?:u[\\\"\\^]*c[\\\"\\^]*l[\\\"\\^]*t|p[\\\"\\^]*p)|s[\\\"\\^]*a)|s[\\\"\\^]*c[\\\"\\^]*(?:r[\\\"\\^]*i[\\\"\\^]*p[\\\"\\^]*t|u[\\\"\\^]*i)|e[\\\"\\^]*v[\\\"\\^]*t[\\\"\\^]*u[\\\"\\^]*t[\\\"\\^]*i[\\\"\\^]*l|m[\\\"\\^]*i[\\\"\\^]*(?:m[\\\"\\^]*g[\\\"\\^]*m[\\\"\\^]*t|c)|a[\\\"\\^]*i[\\\"\\^]*t[\\\"\\^]*f[\\\"\\^]*o[\\\"\\^]*r|h[\\\"\\^]*o[\\\"\\^]*a[\\\"\\^]*m[\\\"\\^]*i|g[\\\"\\^]*e[\\\"\\^]*t)|u[\\\"\\^]*(?:s[\\\"\\^]*(?:e[\\\"\\^]*r[\\\"\\^]*a[\\\"\\^]*c[\\\"\\^]*c[\\\"\\^]*o[\\\"\\^]*u[\\\"\\^]*n[\\\"\\^]*t[\\\"\\^]*c[\\\"\\^]*o[\\\"\\^]*n[\\\"\\^]*t[\\\"\\^]*r[\\\"\\^]*o[\\\"\\^]*l[\\\"\\^]*s[\\\"\\^]*e[\\\"\\^]*t[\\\"\\^]*t[\\\"\\^]*i[\\\"\\^]*n[\\\"\\^]*g[\\\"\\^]*s|r[\\\"\\^]*s[\\\"\\^]*t[\\\"\\^]*a[\\\"\\^]*t)|n[\\\"\\^]*(?:r[\\\"\\^]*a[\\\"\\^]*r|z[\\\"\\^]*i[\\\"\\^]*p))|q[\\\"\\^]*(?:u[\\\"\\^]*e[\\\"\\^]*r[\\\"\\^]*y[\\\"\\^]*(?:[\\s,;]|\\.|/|<|>).*|p[\\\"\\^]*r[\\\"\\^]*o[\\\"\\^]*c[\\\"\\^]*e[\\\"\\^]*s[\\\"\\^]*s|w[\\\"\\^]*i[\\\"\\^]*n[\\\"\\^]*s[\\\"\\^]*t[\\\"\\^]*a|g[\\\"\\^]*r[\\\"\\^]*e[\\\"\\^]*p)|o[\\\"\\^]*(?:d[\\\"\\^]*b[\\\"\\^]*c[\\\"\\^]*(?:a[\\\"\\^]*d[\\\"\\^]*3[\\\"\\^]*2|c[\\\"\\^]*o[\\\"\\^]*n[\\\"\\^]*f)|p[\\\"\\^]*e[\\\"\\^]*n[\\\"\\^]*f[\\\"\\^]*i[\\\"\\^]*l[\\\"\\^]*e[\\\"\\^]*s)|v[\\\"\\^]*(?:o[\\\"\\^]*l[\\\"\\^]*(?:[\\s,;]|\\.|/|<|>).*|e[\\\"\\^]*r[\\\"\\^]*i[\\\"\\^]*f[\\\"\\^]*y)|x[\\\"\\^]*c[\\\"\\^]*(?:a[\\\"\\^]*c[\\\"\\^]*l[\\\"\\^]*s|o[\\\"\\^]*p[\\\"\\^]*y)|z[\\\"\\^]*i[\\\"\\^]*p[\\\"\\^]*(?:[\\s,;]|\\.|/|<|>).*)(?:\\.[\\\"\\^]*\\w+)?\\b\" \\\n    \"id:932115,\\\n    phase:2,\\\n    block,\\\n    capture,\\\n    t:none,\\\n    msg:'Remote Command Execution: Windows Command Injection',\\\n    logdata:'Matched Data: %{TX.0} found within %{MATCHED_VAR_NAME}: %{MATCHED_VAR}',\\\n    tag:'application-multi',\\\n    tag:'language-shell',\\\n    tag:'platform-windows',\\\n    tag:'attack-rce',\\\n    tag:'paranoia-level/1',\\\n    tag:'OWASP_CRS',\\\n    tag:'capec/1000/152/248/88',\\\n    tag:'PCI/6.5.2',\\\n    ctl:auditLogParts=+E,\\\n    ver:'OWASP_CRS/3.4.0-dev',\\\n    severity:'CRITICAL',\\\n    setvar:'tx.rce_score=+%{tx.critical_anomaly_score}',\\\n    setvar:'tx.inbound_anomaly_score_pl1=+%{tx.critical_anomaly_score}'\"\n",
        "description": "Remote Command Execution: Windows Command Injection",
        "paranoia_level": "1",
        "rule_id": "932",
        "sec_rule_id": "932115",
        "severity": "CRITICAL",
        "tags": [
            "application-multi",
            "language-shell",
            "platform-windows",
            "attack-rce",
            "paranoia-level/1",
            "OWASP_CRS",
            "capec/1000/152/248/88",
            "PCI/6.5.2"
        ]
    },
    {
        "comment": "# [ Windows PowerShell, cmdlets and options ]\n#\n# Detect some common PowerShell commands, cmdlets and options.\n# These commands should be relatively uncommon in normal text, but\n# potentially useful for code injection.\n#\n# If you are not running Windows, it is safe to disable this rule.\n#\n# https://technet.microsoft.com/en-us/magazine/ff714569.aspx\n# https://msdn.microsoft.com/en-us/powershell/scripting/core-powershell/console/powershell.exe-command-line-help\n#\n",
        "content": "SecRule REQUEST_COOKIES|!REQUEST_COOKIES:/__utm/|REQUEST_COOKIES_NAMES|ARGS_NAMES|ARGS|XML:/* \"@pmFromFile windows-powershell-commands.data\" \\\n    \"id:932120,\\\n    phase:2,\\\n    block,\\\n    capture,\\\n    t:none,t:cmdLine,\\\n    msg:'Remote Command Execution: Windows PowerShell Command Found',\\\n    logdata:'Matched Data: %{TX.0} found within %{MATCHED_VAR_NAME}: %{MATCHED_VAR}',\\\n    tag:'application-multi',\\\n    tag:'language-shell',\\\n    tag:'language-powershell',\\\n    tag:'platform-windows',\\\n    tag:'attack-rce',\\\n    tag:'paranoia-level/1',\\\n    tag:'OWASP_CRS',\\\n    tag:'capec/1000/152/248/88',\\\n    tag:'PCI/6.5.2',\\\n    ctl:auditLogParts=+E,\\\n    ver:'OWASP_CRS/3.4.0-dev',\\\n    severity:'CRITICAL',\\\n    setvar:'tx.rce_score=+%{tx.critical_anomaly_score}',\\\n    setvar:'tx.inbound_anomaly_score_pl1=+%{tx.critical_anomaly_score}'\"\n",
        "description": "Remote Command Execution: Windows PowerShell Command Found",
        "paranoia_level": "1",
        "rule_id": "932",
        "sec_rule_id": "932120",
        "severity": "CRITICAL",
        "tags": [
            "application-multi",
            "language-shell",
            "language-powershell",
            "platform-windows",
            "attack-rce",
            "paranoia-level/1",
            "OWASP_CRS",
            "capec/1000/152/248/88",
            "PCI/6.5.2"
        ]
    },
    {
        "comment": "# [ Unix shell expressions ]\n#\n# Detects the following patterns which are common in Unix shell scripts\n# and one-liners:\n#\n# $(foo)    Command substitution\n# ${foo}    Parameter expansion\n# <(foo)    Process substitution\n# >(foo)    Process substitution\n# $((foo))  Arithmetic expansion\n#\n# Regular expression generated from util/regexp-assemble/data/932130.data.\n# To update the regular expression run the following shell script\n# (consult util/regexp-assemble/README.md for details):\n#   util/regexp-assemble/regexp-assemble.py update 932130\n#\n# This rule has a stricter sibling: 932131 (PL2) that applies the same regex to User-Agent and Referer\n#\n# This rule is essential to defend against the Log4J / Log4Shell attacks (see also rule 944150)\n#\n",
        "content": "SecRule REQUEST_COOKIES|!REQUEST_COOKIES:/__utm/|REQUEST_COOKIES_NAMES|ARGS_NAMES|ARGS|XML:/* \"@rx (?:\\$(?:\\((?:\\(.*\\)|.*)\\)|\\{.*})|[<>]\\(.*\\))\" \\\n    \"id:932130,\\\n    phase:2,\\\n    block,\\\n    capture,\\\n    t:none,t:cmdLine,\\\n    msg:'Remote Command Execution: Unix Shell Expression Found',\\\n    logdata:'Matched Data: %{TX.0} found within %{MATCHED_VAR_NAME}: %{MATCHED_VAR}',\\\n    tag:'application-multi',\\\n    tag:'language-shell',\\\n    tag:'platform-unix',\\\n    tag:'attack-rce',\\\n    tag:'paranoia-level/1',\\\n    tag:'OWASP_CRS',\\\n    tag:'capec/1000/152/248/88',\\\n    tag:'PCI/6.5.2',\\\n    ctl:auditLogParts=+E,\\\n    ver:'OWASP_CRS/3.4.0-dev',\\\n    severity:'CRITICAL',\\\n    setvar:'tx.rce_score=+%{tx.critical_anomaly_score}',\\\n    setvar:'tx.inbound_anomaly_score_pl1=+%{tx.critical_anomaly_score}'\"\n",
        "description": "Remote Command Execution: Unix Shell Expression Found",
        "paranoia_level": "1",
        "rule_id": "932",
        "sec_rule_id": "932130",
        "severity": "CRITICAL",
        "tags": [
            "application-multi",
            "language-shell",
            "platform-unix",
            "attack-rce",
            "paranoia-level/1",
            "OWASP_CRS",
            "capec/1000/152/248/88",
            "PCI/6.5.2"
        ]
    },
    {
        "comment": "# [ Windows FOR, IF commands ]\n#\n# This rule detects Windows command shell FOR and IF commands.\n# If you are not running Windows, it is safe to disable this rule.\n#\n# Examples:\n#\n#   FOR              %a IN (set) DO\n#   FOR /D           %a IN (dirs) DO\n#   FOR /F \"options\" %a IN (text|\"text\") DO\n#   FOR /L           %a IN (start,step,end) DO\n#   FOR /R C:\\dir    %A IN (set) DO\n#\n#   IF [/I] [NOT] EXIST filename | DEFINED define | ERRORLEVEL n | CMDEXTVERSION n\n#   IF [/I] [NOT] item1   [==|EQU|NEQ|LSS|LEQ|GTR|GEQ] item2\n#   IF [/I] [NOT] (item1) [==|EQU|NEQ|LSS|LEQ|GTR|GEQ] (item2)\n#\n# http://ss64.com/nt/if.html\n# http://ss64.com/nt/for.html\n#\n# Regular expression generated from util/regexp-assemble/data/932140.data.\n# To update the regular expression run the following shell script\n# (consult util/regexp-assemble/README.md for details):\n#   util/regexp-assemble/regexp-assemble.py update 932140\n#\n",
        "content": "SecRule REQUEST_COOKIES|!REQUEST_COOKIES:/__utm/|REQUEST_COOKIES_NAMES|ARGS_NAMES|ARGS|XML:/* \"@rx \\b(?:if(?:/i)?(?: not)?(?: exist\\b| defined\\b| errorlevel\\b| cmdextversion\\b|(?: |\\().*(?:\\bgeq\\b|\\bequ\\b|\\bneq\\b|\\bleq\\b|\\bgtr\\b|\\blss\\b|==))|for(?:/[dflr].*)? %+[^ ]+ in\\(.*\\)\\s?do)\" \\\n    \"id:932140,\\\n    phase:2,\\\n    block,\\\n    capture,\\\n    t:none,t:cmdLine,\\\n    msg:'Remote Command Execution: Windows FOR/IF Command Found',\\\n    logdata:'Matched Data: %{TX.0} found within %{MATCHED_VAR_NAME}: %{MATCHED_VAR}',\\\n    tag:'application-multi',\\\n    tag:'language-shell',\\\n    tag:'platform-windows',\\\n    tag:'attack-rce',\\\n    tag:'paranoia-level/1',\\\n    tag:'OWASP_CRS',\\\n    tag:'capec/1000/152/248/88',\\\n    tag:'PCI/6.5.2',\\\n    ctl:auditLogParts=+E,\\\n    ver:'OWASP_CRS/3.4.0-dev',\\\n    severity:'CRITICAL',\\\n    setvar:'tx.rce_score=+%{tx.critical_anomaly_score}',\\\n    setvar:'tx.inbound_anomaly_score_pl1=+%{tx.critical_anomaly_score}'\"\n",
        "description": "Remote Command Execution: Windows FOR/IF Command Found",
        "paranoia_level": "1",
        "rule_id": "932",
        "sec_rule_id": "932140",
        "severity": "CRITICAL",
        "tags": [
            "application-multi",
            "language-shell",
            "platform-windows",
            "attack-rce",
            "paranoia-level/1",
            "OWASP_CRS",
            "capec/1000/152/248/88",
            "PCI/6.5.2"
        ]
    },
    {
        "comment": "# [ Unix direct remote command execution ]\n#\n# Detects Unix commands at the start of a parameter (direct RCE).\n# Example: foo=wget%20www.example.com\n#\n# This case is different from command injection (rule 932100), where a\n# command string is appended (injected) to a regular parameter, and then\n# passed to a shell unescaped.\n#\n# This rule is also triggered by an Oracle WebLogic Remote Command Execution exploit:\n# [ Oracle WebLogic vulnerability CVE-2017-10271 - Exploit tested: https://www.exploit-db.com/exploits/43458 ]\n#\n# Due to a higher risk of false positives, the following changes have been\n# made relative to rule 932100:\n# 1) the set of commands is smaller\n# 2) we require a trailing space (denoting command parameters) or command\n#    separator character after the command\n#\n# Regular expression generated from util/regexp-assemble/data/932150.data.\n# To update the regular expression run the following shell script\n# (consult util/regexp-assemble/README.md for details):\n#   util/regexp-assemble/regexp-assemble.py update 932150\n#\n",
        "content": "SecRule REQUEST_COOKIES|!REQUEST_COOKIES:/__utm/|REQUEST_COOKIES_NAMES|ARGS_NAMES|ARGS|XML:/* \"@rx (?:^|=)\\s*(?:{|\\s*\\(\\s*|\\w+=(?:[^\\s]*|\\$.*|\\$.*|<.*|>.*|\\'.*\\'|\\\".*\\\")\\s+|!\\s*|\\$)*\\s*(?:'|\\\")*(?:[\\?\\*\\[\\]\\(\\)\\-\\|+\\w'\\\"\\./\\x5c]+/)?[\\x5c'\\\"]*(?:l[\\x5c'\\\"]*(?:s(?:[\\x5c'\\\"]*(?:b[\\x5c'\\\"]*_[\\x5c'\\\"]*r[\\x5c'\\\"]*e[\\x5c'\\\"]*l[\\x5c'\\\"]*e[\\x5c'\\\"]*a[\\x5c'\\\"]*s[\\x5c'\\\"]*e|c[\\x5c'\\\"]*p[\\x5c'\\\"]*u|m[\\x5c'\\\"]*o[\\x5c'\\\"]*d|p[\\x5c'\\\"]*c[\\x5c'\\\"]*i|u[\\x5c'\\\"]*s[\\x5c'\\\"]*b|-[\\x5c'\\\"]*F|o[\\x5c'\\\"]*f))?|z[\\x5c'\\\"]*(?:(?:[ef][\\x5c'\\\"]*)?g[\\x5c'\\\"]*r[\\x5c'\\\"]*e[\\x5c'\\\"]*p|c[\\x5c'\\\"]*(?:a[\\x5c'\\\"]*t|m[\\x5c'\\\"]*p)|m[\\x5c'\\\"]*(?:o[\\x5c'\\\"]*r[\\x5c'\\\"]*e|a)|d[\\x5c'\\\"]*i[\\x5c'\\\"]*f[\\x5c'\\\"]*f|l[\\x5c'\\\"]*e[\\x5c'\\\"]*s[\\x5c'\\\"]*s)|e[\\x5c'\\\"]*s[\\x5c'\\\"]*s[\\x5c'\\\"]*(?:(?:f[\\x5c'\\\"]*i[\\x5c'\\\"]*l|p[\\x5c'\\\"]*i[\\x5c'\\\"]*p)[\\x5c'\\\"]*e|e[\\x5c'\\\"]*c[\\x5c'\\\"]*h[\\x5c'\\\"]*o)|a[\\x5c'\\\"]*s[\\x5c'\\\"]*t[\\x5c'\\\"]*(?:l[\\x5c'\\\"]*o[\\x5c'\\\"]*g(?:[\\x5c'\\\"]*i[\\x5c'\\\"]*n)?|c[\\x5c'\\\"]*o[\\x5c'\\\"]*m[\\x5c'\\\"]*m)|w[\\x5c'\\\"]*p(?:[\\x5c'\\\"]*-[\\x5c'\\\"]*d[\\x5c'\\\"]*o[\\x5c'\\\"]*w[\\x5c'\\\"]*n[\\x5c'\\\"]*l[\\x5c'\\\"]*o[\\x5c'\\\"]*a[\\x5c'\\\"]*d)?|f[\\x5c'\\\"]*t[\\x5c'\\\"]*p(?:[\\x5c'\\\"]*g[\\x5c'\\\"]*e[\\x5c'\\\"]*t)?|y[\\x5c'\\\"]*n[\\x5c'\\\"]*x)|s[\\x5c'\\\"]*(?:e[\\x5c'\\\"]*(?:t[\\x5c'\\\"]*(?:e[\\x5c'\\\"]*n[\\x5c'\\\"]*v|s[\\x5c'\\\"]*i[\\x5c'\\\"]*d)|n[\\x5c'\\\"]*d[\\x5c'\\\"]*m[\\x5c'\\\"]*a[\\x5c'\\\"]*i[\\x5c'\\\"]*l|d)|h(?:[\\x5c'\\\"]*\\.[\\x5c'\\\"]*d[\\x5c'\\\"]*i[\\x5c'\\\"]*s[\\x5c'\\\"]*t[\\x5c'\\\"]*r[\\x5c'\\\"]*i[\\x5c'\\\"]*b)?|o[\\x5c'\\\"]*(?:u[\\x5c'\\\"]*r[\\x5c'\\\"]*c[\\x5c'\\\"]*e|c[\\x5c'\\\"]*a[\\x5c'\\\"]*t)|t[\\x5c'\\\"]*r[\\x5c'\\\"]*i[\\x5c'\\\"]*n[\\x5c'\\\"]*g[\\x5c'\\\"]*s|y[\\x5c'\\\"]*s[\\x5c'\\\"]*c[\\x5c'\\\"]*t[\\x5c'\\\"]*l|c[\\x5c'\\\"]*(?:h[\\x5c'\\\"]*e[\\x5c'\\\"]*d|p)|d[\\x5c'\\\"]*i[\\x5c'\\\"]*f[\\x5c'\\\"]*f|f[\\x5c'\\\"]*t[\\x5c'\\\"]*p|u[\\x5c'\\\"]*d[\\x5c'\\\"]*o|s[\\x5c'\\\"]*h|v[\\x5c'\\\"]*n)|p[\\x5c'\\\"]*(?:t[\\x5c'\\\"]*a[\\x5c'\\\"]*r(?:[\\x5c'\\\"]*(?:d[\\x5c'\\\"]*i[\\x5c'\\\"]*f[\\x5c'\\\"]*f|g[\\x5c'\\\"]*r[\\x5c'\\\"]*e[\\x5c'\\\"]*p))?|y[\\x5c'\\\"]*t[\\x5c'\\\"]*h[\\x5c'\\\"]*o[\\x5c'\\\"]*n(?:[\\x5c'\\\"]*(?:3(?:[\\x5c'\\\"]*m)?|2))?|k[\\x5c'\\\"]*(?:e[\\x5c'\\\"]*x[\\x5c'\\\"]*e[\\x5c'\\\"]*c|i[\\x5c'\\\"]*l[\\x5c'\\\"]*l)|r[\\x5c'\\\"]*i[\\x5c'\\\"]*n[\\x5c'\\\"]*t[\\x5c'\\\"]*e[\\x5c'\\\"]*n[\\x5c'\\\"]*v|(?:g[\\x5c'\\\"]*r[\\x5c'\\\"]*e|f[\\x5c'\\\"]*t)[\\x5c'\\\"]*p|e[\\x5c'\\\"]*r[\\x5c'\\\"]*l(?:[\\x5c'\\\"]*5)?|h[\\x5c'\\\"]*p(?:[\\x5c'\\\"]*[57])?|o[\\x5c'\\\"]*p[\\x5c'\\\"]*d)|n[\\x5c'\\\"]*(?:c(?:[\\x5c'\\\"]*(?:\\.[\\x5c'\\\"]*(?:t[\\x5c'\\\"]*r[\\x5c'\\\"]*a[\\x5c'\\\"]*d[\\x5c'\\\"]*i[\\x5c'\\\"]*t[\\x5c'\\\"]*i[\\x5c'\\\"]*o[\\x5c'\\\"]*n[\\x5c'\\\"]*a[\\x5c'\\\"]*l|o[\\x5c'\\\"]*p[\\x5c'\\\"]*e[\\x5c'\\\"]*n[\\x5c'\\\"]*b[\\x5c'\\\"]*s[\\x5c'\\\"]*d)|a[\\x5c'\\\"]*t))?|e[\\x5c'\\\"]*t[\\x5c'\\\"]*(?:k[\\x5c'\\\"]*i[\\x5c'\\\"]*t[\\x5c'\\\"]*-[\\x5c'\\\"]*f[\\x5c'\\\"]*t[\\x5c'\\\"]*p|(?:s[\\x5c'\\\"]*t|c)[\\x5c'\\\"]*a[\\x5c'\\\"]*t)|o[\\x5c'\\\"]*h[\\x5c'\\\"]*u[\\x5c'\\\"]*p|p[\\x5c'\\\"]*i[\\x5c'\\\"]*n[\\x5c'\\\"]*g|s[\\x5c'\\\"]*t[\\x5c'\\\"]*a[\\x5c'\\\"]*t)|t[\\x5c'\\\"]*(?:c[\\x5c'\\\"]*(?:p[\\x5c'\\\"]*(?:t[\\x5c'\\\"]*r[\\x5c'\\\"]*a[\\x5c'\\\"]*c[\\x5c'\\\"]*e[\\x5c'\\\"]*r[\\x5c'\\\"]*o[\\x5c'\\\"]*u[\\x5c'\\\"]*t[\\x5c'\\\"]*e|i[\\x5c'\\\"]*n[\\x5c'\\\"]*g)|s[\\x5c'\\\"]*h)|r[\\x5c'\\\"]*a[\\x5c'\\\"]*c[\\x5c'\\\"]*e[\\x5c'\\\"]*r[\\x5c'\\\"]*o[\\x5c'\\\"]*u[\\x5c'\\\"]*t[\\x5c'\\\"]*e(?:[\\x5c'\\\"]*6)?|(?:i[\\x5c'\\\"]*m[\\x5c'\\\"]*e[\\x5c'\\\"]*o[\\x5c'\\\"]*u|e[\\x5c'\\\"]*l[\\x5c'\\\"]*n[\\x5c'\\\"]*e)[\\x5c'\\\"]*t|a[\\x5c'\\\"]*(?:i[\\x5c'\\\"]*l(?:[\\x5c'\\\"]*f)?|r))|r[\\x5c'\\\"]*(?:e[\\x5c'\\\"]*(?:p[\\x5c'\\\"]*(?:l[\\x5c'\\\"]*a[\\x5c'\\\"]*c[\\x5c'\\\"]*e|e[\\x5c'\\\"]*a[\\x5c'\\\"]*t)|a[\\x5c'\\\"]*l[\\x5c'\\\"]*p[\\x5c'\\\"]*a[\\x5c'\\\"]*t[\\x5c'\\\"]*h|n[\\x5c'\\\"]*a[\\x5c'\\\"]*m[\\x5c'\\\"]*e)|u[\\x5c'\\\"]*b[\\x5c'\\\"]*y(?:[\\x5c'\\\"]*(?:1(?:[\\x5c'\\\"]*[89])?|2[\\x5c'\\\"]*[012]))?|m[\\x5c'\\\"]*(?:u[\\x5c'\\\"]*s[\\x5c'\\\"]*e|d[\\x5c'\\\"]*i)[\\x5c'\\\"]*r|n[\\x5c'\\\"]*a[\\x5c'\\\"]*n[\\x5c'\\\"]*o|s[\\x5c'\\\"]*y[\\x5c'\\\"]*n[\\x5c'\\\"]*c|c[\\x5c'\\\"]*p)|b[\\x5c'\\\"]*(?:z[\\x5c'\\\"]*(?:(?:[ef][\\x5c'\\\"]*)?g[\\x5c'\\\"]*r[\\x5c'\\\"]*e[\\x5c'\\\"]*p|d[\\x5c'\\\"]*i[\\x5c'\\\"]*f[\\x5c'\\\"]*f|l[\\x5c'\\\"]*e[\\x5c'\\\"]*s[\\x5c'\\\"]*s|m[\\x5c'\\\"]*o[\\x5c'\\\"]*r[\\x5c'\\\"]*e|c[\\x5c'\\\"]*a[\\x5c'\\\"]*t)|s[\\x5c'\\\"]*d[\\x5c'\\\"]*(?:c[\\x5c'\\\"]*a[\\x5c'\\\"]*t|i[\\x5c'\\\"]*f[\\x5c'\\\"]*f|t[\\x5c'\\\"]*a[\\x5c'\\\"]*r)|u[\\x5c'\\\"]*i[\\x5c'\\\"]*l[\\x5c'\\\"]*t[\\x5c'\\\"]*i[\\x5c'\\\"]*n|a[\\x5c'\\\"]*s[\\x5c'\\\"]*h)|m[\\x5c'\\\"]*(?:y[\\x5c'\\\"]*s[\\x5c'\\\"]*q[\\x5c'\\\"]*l[\\x5c'\\\"]*(?:d[\\x5c'\\\"]*u[\\x5c'\\\"]*m[\\x5c'\\\"]*p(?:[\\x5c'\\\"]*s[\\x5c'\\\"]*l[\\x5c'\\\"]*o[\\x5c'\\\"]*w)?|h[\\x5c'\\\"]*o[\\x5c'\\\"]*t[\\x5c'\\\"]*c[\\x5c'\\\"]*o[\\x5c'\\\"]*p[\\x5c'\\\"]*y|a[\\x5c'\\\"]*d[\\x5c'\\\"]*m[\\x5c'\\\"]*i[\\x5c'\\\"]*n|s[\\x5c'\\\"]*h[\\x5c'\\\"]*o[\\x5c'\\\"]*w)|l[\\x5c'\\\"]*o[\\x5c'\\\"]*c[\\x5c'\\\"]*a[\\x5c'\\\"]*t[\\x5c'\\\"]*e|a[\\x5c'\\\"]*i[\\x5c'\\\"]*l[\\x5c'\\\"]*q)|u[\\x5c'\\\"]*(?:n[\\x5c'\\\"]*(?:c[\\x5c'\\\"]*o[\\x5c'\\\"]*m[\\x5c'\\\"]*p[\\x5c'\\\"]*r[\\x5c'\\\"]*e[\\x5c'\\\"]*s[\\x5c'\\\"]*s|l[\\x5c'\\\"]*z[\\x5c'\\\"]*m[\\x5c'\\\"]*a|a[\\x5c'\\\"]*m[\\x5c'\\\"]*e|r[\\x5c'\\\"]*a[\\x5c'\\\"]*r|s[\\x5c'\\\"]*e[\\x5c'\\\"]*t|z[\\x5c'\\\"]*i[\\x5c'\\\"]*p|x[\\x5c'\\\"]*z)|s[\\x5c'\\\"]*e[\\x5c'\\\"]*r[\\x5c'\\\"]*(?:(?:a[\\x5c'\\\"]*d|m[\\x5c'\\\"]*o)[\\x5c'\\\"]*d|d[\\x5c'\\\"]*e[\\x5c'\\\"]*l))|x[\\x5c'\\\"]*(?:z(?:[\\x5c'\\\"]*(?:(?:[ef][\\x5c'\\\"]*)?g[\\x5c'\\\"]*r[\\x5c'\\\"]*e[\\x5c'\\\"]*p|d[\\x5c'\\\"]*(?:i[\\x5c'\\\"]*f[\\x5c'\\\"]*f|e[\\x5c'\\\"]*c)|c[\\x5c'\\\"]*(?:a[\\x5c'\\\"]*t|m[\\x5c'\\\"]*p)|l[\\x5c'\\\"]*e[\\x5c'\\\"]*s[\\x5c'\\\"]*s|m[\\x5c'\\\"]*o[\\x5c'\\\"]*r[\\x5c'\\\"]*e))?|a[\\x5c'\\\"]*r[\\x5c'\\\"]*g[\\x5c'\\\"]*s)|z[\\x5c'\\\"]*(?:(?:(?:[ef][\\x5c'\\\"]*)?g[\\x5c'\\\"]*r[\\x5c'\\\"]*e|i)[\\x5c'\\\"]*p|c[\\x5c'\\\"]*(?:a[\\x5c'\\\"]*t|m[\\x5c'\\\"]*p)|d[\\x5c'\\\"]*i[\\x5c'\\\"]*f[\\x5c'\\\"]*f|l[\\x5c'\\\"]*e[\\x5c'\\\"]*s[\\x5c'\\\"]*s|m[\\x5c'\\\"]*o[\\x5c'\\\"]*r[\\x5c'\\\"]*e|r[\\x5c'\\\"]*u[\\x5c'\\\"]*n|s[\\x5c'\\\"]*h)|f[\\x5c'\\\"]*(?:t[\\x5c'\\\"]*p[\\x5c'\\\"]*(?:s[\\x5c'\\\"]*t[\\x5c'\\\"]*a[\\x5c'\\\"]*t[\\x5c'\\\"]*s|w[\\x5c'\\\"]*h[\\x5c'\\\"]*o)|i[\\x5c'\\\"]*l[\\x5c'\\\"]*e[\\x5c'\\\"]*t[\\x5c'\\\"]*e[\\x5c'\\\"]*s[\\x5c'\\\"]*t|e[\\x5c'\\\"]*t[\\x5c'\\\"]*c[\\x5c'\\\"]*h|g[\\x5c'\\\"]*r[\\x5c'\\\"]*e[\\x5c'\\\"]*p)|c[\\x5c'\\\"]*(?:o[\\x5c'\\\"]*(?:m[\\x5c'\\\"]*m[\\x5c'\\\"]*a[\\x5c'\\\"]*n[\\x5c'\\\"]*d|p[\\x5c'\\\"]*r[\\x5c'\\\"]*o[\\x5c'\\\"]*c)|u[\\x5c'\\\"]*r[\\x5c'\\\"]*l|s[\\x5c'\\\"]*h|c)|e[\\x5c'\\\"]*(?:g[\\x5c'\\\"]*r[\\x5c'\\\"]*e[\\x5c'\\\"]*p|c[\\x5c'\\\"]*h[\\x5c'\\\"]*o|v[\\x5c'\\\"]*a[\\x5c'\\\"]*l|x[\\x5c'\\\"]*e[\\x5c'\\\"]*c|n[\\x5c'\\\"]*v)|d[\\x5c'\\\"]*(?:m[\\x5c'\\\"]*e[\\x5c'\\\"]*s[\\x5c'\\\"]*g|a[\\x5c'\\\"]*s[\\x5c'\\\"]*h|i[\\x5c'\\\"]*f[\\x5c'\\\"]*f|o[\\x5c'\\\"]*a[\\x5c'\\\"]*s)|g[\\x5c'\\\"]*(?:z[\\x5c'\\\"]*(?:c[\\x5c'\\\"]*a[\\x5c'\\\"]*t|i[\\x5c'\\\"]*p)|r[\\x5c'\\\"]*e[\\x5c'\\\"]*p|c[\\x5c'\\\"]*c)|j[\\x5c'\\\"]*(?:o[\\x5c'\\\"]*b[\\x5c'\\\"]*s[\\x5c'\\\"]*\\s+[\\x5c'\\\"]*-[\\x5c'\\\"]*x|a[\\x5c'\\\"]*v[\\x5c'\\\"]*a)|w[\\x5c'\\\"]*(?:h[\\x5c'\\\"]*o[\\x5c'\\\"]*a[\\x5c'\\\"]*m[\\x5c'\\\"]*i|g[\\x5c'\\\"]*e[\\x5c'\\\"]*t|3[\\x5c'\\\"]*m)|i[\\x5c'\\\"]*r[\\x5c'\\\"]*b(?:[\\x5c'\\\"]*(?:1(?:[\\x5c'\\\"]*[89])?|2[\\x5c'\\\"]*[012]))?|o[\\x5c'\\\"]*n[\\x5c'\\\"]*i[\\x5c'\\\"]*n[\\x5c'\\\"]*t[\\x5c'\\\"]*r|h[\\x5c'\\\"]*(?:e[\\x5c'\\\"]*a[\\x5c'\\\"]*d|u[\\x5c'\\\"]*p)|v[\\x5c'\\\"]*i[\\x5c'\\\"]*(?:g[\\x5c'\\\"]*r|p[\\x5c'\\\"]*w)|G[\\x5c'\\\"]*E[\\x5c'\\\"]*T)[\\x5c'\\\"]*(?:\\s|;|\\||&|<|>)\" \\\n    \"id:932150,\\\n    phase:2,\\\n    block,\\\n    capture,\\\n    t:none,\\\n    msg:'Remote Command Execution: Direct Unix Command Execution',\\\n    logdata:'Matched Data: %{TX.0} found within %{MATCHED_VAR_NAME}: %{MATCHED_VAR}',\\\n    tag:'application-multi',\\\n    tag:'language-shell',\\\n    tag:'platform-unix',\\\n    tag:'attack-rce',\\\n    tag:'paranoia-level/1',\\\n    tag:'OWASP_CRS',\\\n    tag:'capec/1000/152/248/88',\\\n    tag:'PCI/6.5.2',\\\n    ctl:auditLogParts=+E,\\\n    ver:'OWASP_CRS/3.4.0-dev',\\\n    severity:'CRITICAL',\\\n    setvar:'tx.rce_score=+%{tx.critical_anomaly_score}',\\\n    setvar:'tx.inbound_anomaly_score_pl1=+%{tx.critical_anomaly_score}'\"\n",
        "description": "Remote Command Execution: Direct Unix Command Execution",
        "paranoia_level": "1",
        "rule_id": "932",
        "sec_rule_id": "932150",
        "severity": "CRITICAL",
        "tags": [
            "application-multi",
            "language-shell",
            "platform-unix",
            "attack-rce",
            "paranoia-level/1",
            "OWASP_CRS",
            "capec/1000/152/248/88",
            "PCI/6.5.2"
        ]
    },
    {
        "comment": "# [ Unix shell snippets ]\n#\n# Detect some common sequences found in shell commands and scripts.\n#\n# Some commands which were restricted in earlier rules due to FP,\n# have been added here with their full path, in order to catch some\n# cases where the full path is sent.\n#\n# This rule is also triggered by an Apache Struts Remote Code Execution exploit:\n# [ Apache Struts vulnerability CVE-2017-9805 - Exploit tested: https://www.exploit-db.com/exploits/42627 ]\n#\n# This rule is also triggered by an Oracle WebLogic Remote Command Execution exploit:\n# [ Oracle WebLogic vulnerability CVE-2017-10271 - Exploit tested: https://www.exploit-db.com/exploits/43458 ]\n",
        "content": "SecRule REQUEST_COOKIES|!REQUEST_COOKIES:/__utm/|REQUEST_COOKIES_NAMES|ARGS_NAMES|ARGS|XML:/* \"@pmFromFile unix-shell.data\" \\\n    \"id:932160,\\\n    phase:2,\\\n    block,\\\n    capture,\\\n    t:none,t:cmdLine,t:normalizePath,\\\n    msg:'Remote Command Execution: Unix Shell Code Found',\\\n    logdata:'Matched Data: %{TX.0} found within %{MATCHED_VAR_NAME}: %{MATCHED_VAR}',\\\n    tag:'application-multi',\\\n    tag:'language-shell',\\\n    tag:'platform-unix',\\\n    tag:'attack-rce',\\\n    tag:'paranoia-level/1',\\\n    tag:'OWASP_CRS',\\\n    tag:'capec/1000/152/248/88',\\\n    tag:'PCI/6.5.2',\\\n    ctl:auditLogParts=+E,\\\n    ver:'OWASP_CRS/3.4.0-dev',\\\n    severity:'CRITICAL',\\\n    setvar:'tx.rce_score=+%{tx.critical_anomaly_score}',\\\n    setvar:'tx.inbound_anomaly_score_pl1=+%{tx.critical_anomaly_score}'\"\n",
        "description": "Remote Command Execution: Unix Shell Code Found",
        "paranoia_level": "1",
        "rule_id": "932",
        "sec_rule_id": "932160",
        "severity": "CRITICAL",
        "tags": [
            "application-multi",
            "language-shell",
            "platform-unix",
            "attack-rce",
            "paranoia-level/1",
            "OWASP_CRS",
            "capec/1000/152/248/88",
            "PCI/6.5.2"
        ]
    },
    {
        "comment": "# [ Shellshock vulnerability (CVE-2014-6271 and CVE-2014-7169) ]\n#\n# Detect exploitation of \"Shellshock\" GNU Bash RCE vulnerability.\n#\n# Based on ModSecurity rules created by Red Hat.\n# Permission for use was granted by Martin Prpic <secalert@redhat.com>\n#\n# https://access.redhat.com/articles/1212303\n#\n",
        "content": "SecRule REQUEST_HEADERS|REQUEST_LINE \"@rx ^\\(\\s*\\)\\s+{\" \\\n    \"id:932170,\\\n    phase:1,\\\n    block,\\\n    capture,\\\n    t:none,t:urlDecode,\\\n    msg:'Remote Command Execution: Shellshock (CVE-2014-6271)',\\\n    logdata:'Matched Data: %{TX.0} found within %{MATCHED_VAR_NAME}: %{MATCHED_VAR}',\\\n    tag:'application-multi',\\\n    tag:'language-shell',\\\n    tag:'platform-unix',\\\n    tag:'attack-rce',\\\n    tag:'paranoia-level/1',\\\n    tag:'OWASP_CRS',\\\n    tag:'capec/1000/152/248/88',\\\n    tag:'PCI/6.5.2',\\\n    ctl:auditLogParts=+E,\\\n    ver:'OWASP_CRS/3.4.0-dev',\\\n    severity:'CRITICAL',\\\n    setvar:'tx.rce_score=+%{tx.critical_anomaly_score}',\\\n    setvar:'tx.inbound_anomaly_score_pl1=+%{tx.critical_anomaly_score}'\"\n",
        "description": "Remote Command Execution: Shellshock (CVE-2014-6271)",
        "paranoia_level": "1",
        "rule_id": "932",
        "sec_rule_id": "932170",
        "severity": "CRITICAL",
        "tags": [
            "application-multi",
            "language-shell",
            "platform-unix",
            "attack-rce",
            "paranoia-level/1",
            "OWASP_CRS",
            "capec/1000/152/248/88",
            "PCI/6.5.2"
        ]
    },
    {
        "comment": "",
        "content": "SecRule ARGS_NAMES|ARGS|FILES_NAMES \"@rx ^\\(\\s*\\)\\s+{\" \\\n    \"id:932171,\\\n    phase:2,\\\n    block,\\\n    capture,\\\n    t:none,t:urlDecode,t:urlDecodeUni,\\\n    msg:'Remote Command Execution: Shellshock (CVE-2014-6271)',\\\n    logdata:'Matched Data: %{TX.0} found within %{MATCHED_VAR_NAME}: %{MATCHED_VAR}',\\\n    tag:'application-multi',\\\n    tag:'language-shell',\\\n    tag:'platform-unix',\\\n    tag:'attack-rce',\\\n    tag:'paranoia-level/1',\\\n    tag:'OWASP_CRS',\\\n    tag:'capec/1000/152/248/88',\\\n    tag:'PCI/6.5.2',\\\n    ctl:auditLogParts=+E,\\\n    ver:'OWASP_CRS/3.4.0-dev',\\\n    severity:'CRITICAL',\\\n    setvar:'tx.rce_score=+%{tx.critical_anomaly_score}',\\\n    setvar:'tx.inbound_anomaly_score_pl1=+%{tx.critical_anomaly_score}'\"\n",
        "description": "Remote Command Execution: Shellshock (CVE-2014-6271)",
        "paranoia_level": "1",
        "rule_id": "932",
        "sec_rule_id": "932171",
        "severity": "CRITICAL",
        "tags": [
            "application-multi",
            "language-shell",
            "platform-unix",
            "attack-rce",
            "paranoia-level/1",
            "OWASP_CRS",
            "capec/1000/152/248/88",
            "PCI/6.5.2"
        ]
    },
    {
        "comment": "#\n# -=[ Restricted File Upload ]=-\n#\n# Detects attempts to upload a file with a forbidden filename.\n#\n# Many application contain Unrestricted File Upload vulnerabilities.\n# https://www.owasp.org/index.php/Unrestricted_File_Upload\n#\n# These might be abused to upload configuration files or other files\n# that affect the behavior of the web server, possibly causing remote\n# code execution.\n#\n",
        "content": "SecRule FILES|REQUEST_HEADERS:X-Filename|REQUEST_HEADERS:X_Filename|REQUEST_HEADERS:X-File-Name \\\n    \"@pmFromFile restricted-upload.data\" \\\n    \"id:932180,\\\n    phase:2,\\\n    block,\\\n    capture,\\\n    t:none,\\\n    msg:'Restricted File Upload Attempt',\\\n    logdata:'Matched Data: %{TX.0} found within %{MATCHED_VAR_NAME}: %{MATCHED_VAR}',\\\n    tag:'application-multi',\\\n    tag:'language-multi',\\\n    tag:'platform-multi',\\\n    tag:'attack-rce',\\\n    tag:'paranoia-level/1',\\\n    tag:'OWASP_CRS',\\\n    tag:'capec/1000/152/248/88',\\\n    tag:'PCI/6.5.2',\\\n    ver:'OWASP_CRS/3.4.0-dev',\\\n    severity:'CRITICAL',\\\n    setvar:'tx.rce_score=+%{tx.critical_anomaly_score}',\\\n    setvar:'tx.inbound_anomaly_score_pl1=+%{tx.critical_anomaly_score}'\"\n",
        "paranoia_level": "1",
        "rule_id": "932",
        "sec_rule_id": "932180",
        "severity": "CRITICAL",
        "tags": [
            "application-multi",
            "language-multi",
            "platform-multi",
            "attack-rce",
            "paranoia-level/1",
            "OWASP_CRS",
            "capec/1000/152/248/88",
            "PCI/6.5.2"
        ]
    },
    {
        "comment": "",
        "content": "SecRule TX:DETECTION_PARANOIA_LEVEL \"@lt 2\" \"id:932013,phase:1,pass,nolog,skipAfter:END-REQUEST-932-APPLICATION-ATTACK-RCE\"\n",
        "rule_id": "932",
        "sec_rule_id": "932013"
    },
    {
        "comment": "",
        "content": "SecRule TX:DETECTION_PARANOIA_LEVEL \"@lt 2\" \"id:932014,phase:2,pass,nolog,skipAfter:END-REQUEST-932-APPLICATION-ATTACK-RCE\"\n",
        "rule_id": "932",
        "sec_rule_id": "932014"
    },
    {
        "comment": "# This is a stricter sibling of rule 932100.\n# The source command, dot character was moved from 932100 at PL1 to\n# this stricter sibling 932101 at PL2 because of false positives.\n# For explanation of this rule, see rule 932100.\n#\n# Regular expression generated from util/regexp-assemble/data/932101.data.\n# To update the regular expression run the following shell script\n# (consult util/regexp-assemble/README.md for details):\n#   util/regexp-assemble/regexp-assemble.py update 932101\n#\n",
        "content": "SecRule REQUEST_COOKIES|!REQUEST_COOKIES:/__utm/|REQUEST_COOKIES_NAMES|ARGS_NAMES|ARGS|XML:/* \"@rx (?:;|\\{|\\||\\|\\||&|&&|\\n|\\r|\\$\\(|\\$\\(\\(|`|\\${|<\\(|>\\(|\\(\\s*\\))\\s*(?:{|\\s*\\(\\s*|\\w+=(?:[^\\s]*|\\$.*|\\$.*|<.*|>.*|\\'.*\\'|\\\".*\\\")\\s+|!\\s*|\\$)*\\s*(?:'|\\\")*(?:[\\?\\*\\[\\]\\(\\)\\-\\|+\\w'\\\"\\./\\x5c]+/)?[\\x5c'\\\"]*\\.\\s.*\\b\" \\\n    \"id:932101,\\\n    phase:2,\\\n    block,\\\n    capture,\\\n    t:none,\\\n    msg:'Remote Command Execution: Unix Command Injection',\\\n    logdata:'Matched Data: %{TX.0} found within %{MATCHED_VAR_NAME}: %{MATCHED_VAR}',\\\n    tag:'application-multi',\\\n    tag:'language-shell',\\\n    tag:'platform-unix',\\\n    tag:'attack-rce',\\\n    tag:'paranoia-level/2',\\\n    tag:'OWASP_CRS',\\\n    tag:'capec/1000/152/248/88',\\\n    tag:'PCI/6.5.2',\\\n    ctl:auditLogParts=+E,\\\n    ver:'OWASP_CRS/3.4.0-dev',\\\n    severity:'CRITICAL',\\\n    setvar:'tx.rce_score=+%{tx.critical_anomaly_score}',\\\n    setvar:'tx.inbound_anomaly_score_pl1=+%{tx.critical_anomaly_score}'\"\n",
        "paranoia_level": "2",
        "rule_id": "932",
        "sec_rule_id": "932101",
        "severity": "CRITICAL",
        "tags": [
            "application-multi",
            "language-shell",
            "platform-unix",
            "attack-rce",
            "paranoia-level/2",
            "OWASP_CRS",
            "capec/1000/152/248/88",
            "PCI/6.5.2"
        ]
    },
    {
        "comment": "# This is a stricter sibling of rule 932130.\n#\n# It applies the same regular expression to the\n# User-Agent and Referer HTTP headers.\n#\n# Unlike the sibling rule, this rule runs in phase 1.\n#\n",
        "content": "SecRule REQUEST_HEADERS:User-Agent|REQUEST_HEADERS:Referer \"@rx (?:\\$(?:\\((?:\\(.*\\)|.*)\\)|\\{.*})|[<>]\\(.*\\))\" \\\n    \"id:932131,\\\n    phase:1,\\\n    block,\\\n    capture,\\\n    t:none,t:cmdLine,\\\n    msg:'Remote Command Execution: Unix Shell Expression Found',\\\n    logdata:'Matched Data: %{TX.0} found within %{MATCHED_VAR_NAME}: %{MATCHED_VAR}',\\\n    tag:'application-multi',\\\n    tag:'language-shell',\\\n    tag:'platform-unix',\\\n    tag:'attack-rce',\\\n    tag:'paranoia-level/2',\\\n    tag:'OWASP_CRS',\\\n    tag:'capec/1000/152/248/88',\\\n    tag:'PCI/6.5.2',\\\n    ctl:auditLogParts=+E,\\\n    ver:'OWASP_CRS/3.4.0-dev',\\\n    severity:'CRITICAL',\\\n    setvar:'tx.rce_score=+%{tx.critical_anomaly_score}',\\\n    setvar:'tx.anomaly_score_pl2=+%{tx.critical_anomaly_score}'\"\n",
        "paranoia_level": "2",
        "rule_id": "932",
        "sec_rule_id": "932131",
        "severity": "CRITICAL",
        "tags": [
            "application-multi",
            "language-shell",
            "platform-unix",
            "attack-rce",
            "paranoia-level/2",
            "OWASP_CRS",
            "capec/1000/152/248/88",
            "PCI/6.5.2"
        ]
    },
    {
        "comment": "#\n# -=[ Rule 932200 ]=-\n#\n# Block RCE Bypass using different techniques:\n# - uninitialized variables (https://www.secjuice.com/web-application-firewall-waf-evasion/)\n# - string concatenations (https://medium.com/secjuice/web-application-firewall-waf-evasion-techniques-2-125995f3e7b0)\n# - globbing patterns (https://medium.com/secjuice/waf-evasion-techniques-718026d693d8)\n#\n# Examples:\n# - foo;cat$u+/etc$u/passwd\n# - bar;cd+/etc;/bin$u/ca*+passwd\n# - foo;ca\\t+/et\\c/pa\\s\\swd\n# - foo;c'at'+/etc/pa's'swd\n# - foo;c$@at+/et$@c/pas$@swd\n# - foo;c$!at+/et$!c/pas$!swd\n# - foo;c$*at+/et$*c/pas$*swd\n# - foo;c$?at+/et$?c/pas$?swd\n# - foo;c$-at+/et$-c/pas$-swd\n# - foo;c$_at+/et$_c/pas$_swd\n# - foo;c$$at+/et$$c/pas$$swd\n#\n# Regex notes: https://regex101.com/r/V6wrCO/1\n#\n",
        "content": "SecRule REQUEST_COOKIES|!REQUEST_COOKIES:/__utm/|REQUEST_COOKIES_NAMES|ARGS_NAMES|ARGS|XML:/* \"@rx (?:[*?`\\x5c'][^/\\n]+/|\\$[({\\[#@!?*\\-_$a-zA-Z0-9]|/[^/]+?[*?`\\x5c'])\" \\\n    \"id:932200,\\\n    phase:2,\\\n    block,\\\n    capture,\\\n    t:none,t:lowercase,t:urlDecodeUni,\\\n    msg:'RCE Bypass Technique',\\\n    logdata:'Matched Data: %{TX.0} found within %{TX.932200_MATCHED_VAR_NAME}: %{MATCHED_VAR}',\\\n    tag:'application-multi',\\\n    tag:'language-multi',\\\n    tag:'platform-multi',\\\n    tag:'attack-rce',\\\n    tag:'paranoia-level/2',\\\n    tag:'OWASP_CRS',\\\n    tag:'capec/1000/152/248/88',\\\n    tag:'PCI/6.5.2',\\\n    ver:'OWASP_CRS/3.4.0-dev',\\\n    severity:'CRITICAL',\\\n    setvar:'tx.932200_matched_var_name=%{matched_var_name}',\\\n    chain\"\n    SecRule MATCHED_VAR \"@rx /\" \"t:none,t:urlDecodeUni,chain\"\n        SecRule MATCHED_VAR \"@rx \\s\" \"t:none,t:urlDecodeUni,\\\n            setvar:'tx.rce_score=+%{tx.critical_anomaly_score}',\\\n            setvar:'tx.inbound_anomaly_score_pl2=+%{tx.critical_anomaly_score}'\"\n",
        "paranoia_level": "2",
        "rule_id": "932",
        "sec_rule_id": "932200",
        "severity": "CRITICAL",
        "tags": [
            "application-multi",
            "language-multi",
            "platform-multi",
            "attack-rce",
            "paranoia-level/2",
            "OWASP_CRS",
            "capec/1000/152/248/88",
            "PCI/6.5.2"
        ]
    },
    {
        "comment": "# [ Sqlite System Command Execution ]\n#\n# This rule prevents execution of SQLite CLI commands like .system and .shell\n#\n# You can find a vulnerable script and a sample payload here:\n# https://github.com/qxxxb/ctf/tree/master/2021/zer0pts_ctf/baby_sqli\n#\n# List of sqlite3 CLI commands:\n# https://sqlite.org/cli.html\n#\n# Regular expression generated from util/regexp-assemble/data/932210.data.\n# To update the regular expression run the following shell script\n# (consult util/regexp-assemble/README.md for details):\n#   util/regexp-assemble/regexp-assemble.py update 932210\n#\n",
        "content": "SecRule REQUEST_COOKIES|!REQUEST_COOKIES:/__utm/|REQUEST_COOKIES_NAMES|ARGS_NAMES|ARGS|XML:/* \"@rx ;\\s*\\.\\s*(?:s(?:e(?:parator|lftest)|c(?:anstats|hema)|h(?:a3sum|ell|ow)|ystem|tats|ave)|t(?:estc(?:ase|trl)|ime(?:out|r)|ables|race)|e(?:x(?:p(?:lain|ert)|cel|it)|cho|qp)|p(?:r(?:o(?:gress|mpt)|int)|arameter)|d(?:b(?:config|info)|atabases|ump)|c(?:h(?:anges|eck)|lone|d)|i(?:mpo(?:ster|rt)|ndexes)|l(?:i(?:mi|n)t|o(?:ad|g))|b(?:a(?:ckup|il)|inary)|f(?:ullschema|ilectrl)|vfs(?:info|list|name)|re(?:cover|store|ad)|o(?:utput|nce|pen)|(?:nullvalu|mod)e|a(?:rchive|uth)|he(?:aders|lp)|width|quit)\" \\\n    \"id:932210,\\\n    phase:2,\\\n    block,\\\n    t:none,t:escapeSeqDecode,t:compressWhitespace,\\\n    msg:'Remote Command Execution: SQLite System Command Execution',\\\n    logdata:'Matched Data: %{TX.0} found within %{MATCHED_VAR_NAME}: %{MATCHED_VAR}',\\\n    tag:'application-multi',\\\n    tag:'language-shell',\\\n    tag:'platform-unix',\\\n    tag:'attack-rce',\\\n    tag:'paranoia-level/2',\\\n    tag:'OWASP_CRS',\\\n    tag:'capec/1000/152/248/88',\\\n    tag:'PCI/6.5.2',\\\n    ctl:auditLogParts=+E,\\\n    ver:'OWASP_CRS/3.4.0-dev',\\\n    severity:'CRITICAL',\\\n    setvar:'tx.rce_score=+%{tx.critical_anomaly_score}',\\\n    setvar:'tx.inbound_anomaly_score_pl2=+%{tx.critical_anomaly_score}'\"\n",
        "paranoia_level": "2",
        "rule_id": "932",
        "sec_rule_id": "932210",
        "severity": "CRITICAL",
        "tags": [
            "application-multi",
            "language-shell",
            "platform-unix",
            "attack-rce",
            "paranoia-level/2",
            "OWASP_CRS",
            "capec/1000/152/248/88",
            "PCI/6.5.2"
        ]
    },
    {
        "comment": "# =[ SMTP Command Execution ]=\n#\n# This rule prevents execution of SMTP related system commands.\n#\n# List of SMTP commands: from rfc 5321 (https://www.rfc-editor.org/rfc/rfc5321)\n#\n# Regular expression generated from util/regexp-assemble/data/932300.data.\n# To update the regular expression run the following shell script\n# (consult util/regexp-assemble/README.md for details):\n#   util/regexp-assemble/regexp-assemble.py update 932300\n#\n",
        "content": "SecRule REQUEST_COOKIES|!REQUEST_COOKIES:/__utm/|REQUEST_COOKIES_NAMES|ARGS_NAMES|ARGS|XML:/* \"(?is)\\r\\n.*?\\b(?:AUTH [A-Z0-9-_]{1,20} (?:=|(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=))|R(?:CPT TO:(?:<.{1,64}@.{1,255}>|(?: ))?<.{1,64}>|SET\\b)|VRFY (?:.{1,64} <.{1,64}@.{1,255}>|.{1,64}@.{1,255})|E(?:HLO [a-zA-Z-\\.]{1,255}|XPN (?:.{1,64}))|MAIL FROM:<.{1,64}@.{1,255}>|HELO [a-zA-Z-\\.]{1,255}|NOOP\\b(?: .{1,255})?|STARTTLS\\b)\" \\\n    \"id:932300,\\\n    phase:2,\\\n    block,\\\n    t:none,t:escapeSeqDecode,\\\n    msg:'Remote Command Execution: SMTP Command Execution',\\\n    logdata:'Matched Data: %{TX.0} found within %{MATCHED_VAR_NAME}: %{MATCHED_VAR}',\\\n    tag:'application-multi',\\\n    tag:'platform-multi',\\\n    tag:'attack-rce',\\\n    tag:'paranoia-level/2',\\\n    tag:'OWASP_CRS',\\\n    tag:'capec/137/134',\\\n    tag:'PCI/6.5.2',\\\n    ctl:auditLogParts=+E,\\\n    ver:'OWASP_CRS/3.4.0-dev',\\\n    severity:'CRITICAL',\\\n    setvar:'tx.rce_score=+%{tx.critical_anomaly_score}',\\\n    setvar:'tx.anomaly_score_pl2=+%{tx.critical_anomaly_score}'\"\n",
        "paranoia_level": "2",
        "rule_id": "932",
        "sec_rule_id": "932300",
        "severity": "CRITICAL",
        "tags": [
            "application-multi",
            "platform-multi",
            "attack-rce",
            "paranoia-level/2",
            "OWASP_CRS",
            "capec/137/134",
            "PCI/6.5.2"
        ]
    },
    {
        "comment": "# =[ IMAP Command Execution ]=\n#\n# This rule prevents execution of IMAP4 related system commands.\n#\n# List of IMAP4 commands: from rfc 3501 (https://datatracker.ietf.org/doc/html/rfc3501#section-9)\n#\n# Note: Mailbox International Naming Convention uses UTF-7, so it was left out explicitly.\n#\n# Regular expression generated from util/regexp-assemble/data/932310.data.\n# To update the regular expression run the following shell script\n# (consult util/regexp-assemble/README.md for details):\n#   util/regexp-assemble/regexp-assemble.py update 932310\n#\n",
        "content": "SecRule REQUEST_COOKIES|!REQUEST_COOKIES:/__utm/|REQUEST_COOKIES_NAMES|ARGS_NAMES|ARGS|XML:/* \"(?is)\\r\\n\\w{1,50}\\b[ ](?:A(?:PPEND (?:[\\w\\\"\\.\\-\\x5c\\/%\\*&#]+)?(?: \\((?:[a-z\\x5c\\ ])+\\))?(?: \\\"?\\d{1,2}-\\w{3}-\\d{4} \\d{2}:\\d{2}:\\d{2} [+-]\\d{4}\\\"?)? \\{\\d{1,20}\\+?}|UTHENTICATE [a-z0-9-_]{1,20}\\r\\n)|S(?:TATUS (?:[\\w\\\"\\.\\-\\x5c\\/%\\*&]+)? \\((?:UNSEEN|UIDNEXT|MESSAGES|UIDVALIDITY|RECENT| )+\\)|ETACL (?:[\\w\\\"\\.\\-\\x5c\\/%\\*&]+)? [+-][lrswipckdxtea]+?)|L(?:SUB (?:[\\w\\\"~\\/\\*#\\.]+)? (?:[\\w\\\"\\.\\x5c\\/%\\*&]+)?|ISTRIGHTS (?:[\\w\\\"\\.\\-\\x5c\\/%\\*&]+)?)|(?:(?:DELETE|GET)ACL|MYRIGHTS) (?:[\\w\\\"\\.\\-\\x5c\\/%\\*&]+)?|UID (?:COPY|FETCH|STORE) (?:[0-9,:\\*]+)?)\" \\\n    \"id:932310,\\\n    phase:2,\\\n    block,\\\n    t:none,t:escapeSeqDecode,\\\n    msg:'Remote Command Execution: IMAP Command Execution',\\\n    logdata:'Matched Data: %{TX.0} found within %{MATCHED_VAR_NAME}: %{MATCHED_VAR}',\\\n    tag:'application-multi',\\\n    tag:'platform-multi',\\\n    tag:'attack-rce',\\\n    tag:'paranoia-level/2',\\\n    tag:'OWASP_CRS',\\\n    tag:'capec/137/134',\\\n    tag:'PCI/6.5.2',\\\n    ctl:auditLogParts=+E,\\\n    ver:'OWASP_CRS/3.4.0-dev',\\\n    severity:'CRITICAL',\\\n    setvar:'tx.rce_score=+%{tx.critical_anomaly_score}',\\\n    setvar:'tx.anomaly_score_pl2=+%{tx.critical_anomaly_score}'\"\n",
        "paranoia_level": "2",
        "rule_id": "932",
        "sec_rule_id": "932310",
        "severity": "CRITICAL",
        "tags": [
            "application-multi",
            "platform-multi",
            "attack-rce",
            "paranoia-level/2",
            "OWASP_CRS",
            "capec/137/134",
            "PCI/6.5.2"
        ]
    },
    {
        "comment": "# =[ POP3 Command Execution ]=\n#\n# This rule prevents execution of POP3 related system commands.\n#\n# List of POP3 commands:\n# - from rfc 1939 (https://www.rfc-editor.org/rfc/rfc1939#appendix-B)\n# - extensions from rfc 2449 (https://www.rfc-editor.org/rfc/rfc2449)\n#\n# These commands all have some kind of parameter that makes them a good PL2 target.\n#\n# Regular expression generated from util/regexp-assemble/data/932320.data.\n# To update the regular expression run the following shell script\n# (consult util/regexp-assemble/README.md for details):\n#   util/regexp-assemble/regexp-assemble.py update 932320\n#\n",
        "content": "SecRule REQUEST_COOKIES|!REQUEST_COOKIES:/__utm/|REQUEST_COOKIES_NAMES|ARGS_NAMES|ARGS|XML:/* \"(?si)\\r\\n.*?\\b(?:A(?:UTH [A-Z0-9-_]{1,20} (?:=|(?:[\\w+/]{4})*(?:[\\w+/]{2}==|[\\w+/]{3}=))|POP [\\w]+ [a-f0-9]{32})|(?:TOP \\d+|LIST)(?: \\d+)?|U(?:IDL(?: \\d+)?|SER .+?)|(?:DELE|RETR) \\d+?|PASS .+?)\" \\\n    \"id:932320,\\\n    phase:2,\\\n    block,\\\n    t:none,t:escapeSeqDecode,\\\n    msg:'Remote Command Execution: POP3 Command Execution',\\\n    logdata:'Matched Data: %{TX.0} found within %{MATCHED_VAR_NAME}: %{MATCHED_VAR}',\\\n    tag:'application-multi',\\\n    tag:'platform-multi',\\\n    tag:'attack-rce',\\\n    tag:'paranoia-level/2',\\\n    tag:'OWASP_CRS',\\\n    tag:'capec/137/134',\\\n    tag:'PCI/6.5.2',\\\n    ctl:auditLogParts=+E,\\\n    ver:'OWASP_CRS/3.4.0-dev',\\\n    severity:'CRITICAL',\\\n    setvar:'tx.rce_score=+%{tx.critical_anomaly_score}',\\\n    setvar:'tx.anomaly_score_pl2=+%{tx.critical_anomaly_score}'\"\n",
        "paranoia_level": "2",
        "rule_id": "932",
        "sec_rule_id": "932320",
        "severity": "CRITICAL",
        "tags": [
            "application-multi",
            "platform-multi",
            "attack-rce",
            "paranoia-level/2",
            "OWASP_CRS",
            "capec/137/134",
            "PCI/6.5.2"
        ]
    },
    {
        "comment": "",
        "content": "SecRule TX:DETECTION_PARANOIA_LEVEL \"@lt 3\" \"id:932015,phase:1,pass,nolog,skipAfter:END-REQUEST-932-APPLICATION-ATTACK-RCE\"\n",
        "rule_id": "932",
        "sec_rule_id": "932015"
    },
    {
        "comment": "",
        "content": "SecRule TX:DETECTION_PARANOIA_LEVEL \"@lt 3\" \"id:932016,phase:2,pass,nolog,skipAfter:END-REQUEST-932-APPLICATION-ATTACK-RCE\"\n",
        "rule_id": "932",
        "sec_rule_id": "932016"
    },
    {
        "comment": "# Missing Unix commands have been added to a new word list i.e.\n# util/regexp-assemble/data/932106.data\n# These commands may have a higher risk of false positives.\n# Therefore, they have been split off to a separate rule in PL3.\n# For explanation of this rule, see rule 932100.\n#\n# Regular expression generated from util/regexp-assemble/data/932106.data.\n# To update the regular expression run the following shell script\n# (consult util/regexp-assemble/README.md for details):\n#   util/regexp-assemble/regexp-assemble.py update 932106\n#\n# This rule is a stricter sibling of rule 932100.\n",
        "content": "SecRule REQUEST_COOKIES|!REQUEST_COOKIES:/__utm/|REQUEST_COOKIES_NAMES|ARGS_NAMES|ARGS|XML:/* \"@rx (?:;|\\{|\\||\\|\\||&|&&|\\n|\\r|\\$\\(|\\$\\(\\(|`|\\${|<\\(|>\\(|\\(\\s*\\))\\s*(?:{|\\s*\\(\\s*|\\w+=(?:[^\\s]*|\\$.*|\\$.*|<.*|>.*|\\'.*\\'|\\\".*\\\")\\s+|!\\s*|\\$)*\\s*(?:'|\\\")*(?:[\\?\\*\\[\\]\\(\\)\\-\\|+\\w'\\\"\\./\\x5c]+/)?[\\x5c'\\\"]*(?:(?:(?:a[\\x5c'\\\"]*p[\\x5c'\\\"]*t[\\x5c'\\\"]*i[\\x5c'\\\"]*t[\\x5c'\\\"]*u[\\x5c'\\\"]*d|u[\\x5c'\\\"]*p[\\x5c'\\\"]*2[\\x5c'\\\"]*d[\\x5c'\\\"]*a[\\x5c'\\\"]*t)[\\x5c'\\\"]*e|d[\\x5c'\\\"]*n[\\x5c'\\\"]*f|v[\\x5c'\\\"]*i)[\\x5c'\\\"]*(?:\\s|<|>).*|p[\\x5c'\\\"]*(?:a[\\x5c'\\\"]*c[\\x5c'\\\"]*m[\\x5c'\\\"]*a[\\x5c'\\\"]*n[\\x5c'\\\"]*(?:\\s|<|>).*|w[\\x5c'\\\"]*d|s)|w[\\x5c'\\\"]*(?:(?:\\s|<|>).*|h[\\x5c'\\\"]*o))\\b\" \\\n    \"id:932106,\\\n    phase:2,\\\n    block,\\\n    capture,\\\n    t:none,\\\n    msg:'Remote Command Execution: Unix Command Injection',\\\n    logdata:'Matched Data: %{TX.0} found within %{MATCHED_VAR_NAME}: %{MATCHED_VAR}',\\\n    tag:'application-multi',\\\n    tag:'language-shell',\\\n    tag:'platform-unix',\\\n    tag:'attack-rce',\\\n    tag:'OWASP_CRS',\\\n    tag:'capec/1000/152/248/88',\\\n    tag:'PCI/6.5.2',\\\n    tag:'paranoia-level/3',\\\n    ctl:auditLogParts=+E,\\\n    ver:'OWASP_CRS/3.4.0-dev',\\\n    severity:'CRITICAL',\\\n    setvar:'tx.rce_score=+%{tx.critical_anomaly_score}',\\\n    setvar:'tx.inbound_anomaly_score_pl3=+%{tx.critical_anomaly_score}'\"\n",
        "paranoia_level": "3",
        "rule_id": "932",
        "sec_rule_id": "932106",
        "severity": "CRITICAL",
        "tags": [
            "application-multi",
            "language-shell",
            "platform-unix",
            "attack-rce",
            "OWASP_CRS",
            "capec/1000/152/248/88",
            "PCI/6.5.2",
            "paranoia-level/3"
        ]
    },
    {
        "comment": "#\n# -=[ Bypass Rule 930120 (wildcard) ]=-\n#\n# When Paranoia Level is set to 1 and 2, a Remote Command Execution\n# could be exploited bypassing rule 930120 (OS File Access Attempt)\n# by using wildcard characters.\n#\n# In some other cases, it could be bypassed even if the Paranoia Level is set to 3.\n# Please, keep in mind that this rule could lead to many false positives.\n#\n# The following two blog posts explain the evasions this rule is designed to detect:\n# - https://medium.com/secjuice/waf-evasion-techniques-718026d693d8\n# - https://medium.com/secjuice/web-application-firewall-waf-evasion-techniques-2-125995f3e7b0\n",
        "content": "SecRule ARGS \"@rx /(?:[?*]+[a-z/]+|[a-z/]+[?*]+)\" \\\n    \"id:932190,\\\n    phase:2,\\\n    block,\\\n    capture,\\\n    t:none,t:urlDecode,t:urlDecodeUni,t:normalizePath,t:cmdLine,\\\n    msg:'Remote Command Execution: Wildcard bypass technique attempt',\\\n    logdata:'Matched Data: %{TX.0} found within %{MATCHED_VAR_NAME}: %{MATCHED_VAR}',\\\n    tag:'application-multi',\\\n    tag:'language-shell',\\\n    tag:'platform-unix',\\\n    tag:'attack-rce',\\\n    tag:'OWASP_CRS',\\\n    tag:'capec/1000/152/248/88',\\\n    tag:'PCI/6.5.2',\\\n    tag:'paranoia-level/3',\\\n    ctl:auditLogParts=+E,\\\n    ver:'OWASP_CRS/3.4.0-dev',\\\n    severity:'CRITICAL',\\\n    setvar:'tx.rce_score=+%{tx.critical_anomaly_score}',\\\n    setvar:'tx.inbound_anomaly_score_pl3=+%{tx.critical_anomaly_score}'\"\n",
        "paranoia_level": "3",
        "rule_id": "932",
        "sec_rule_id": "932190",
        "severity": "CRITICAL",
        "tags": [
            "application-multi",
            "language-shell",
            "platform-unix",
            "attack-rce",
            "OWASP_CRS",
            "capec/1000/152/248/88",
            "PCI/6.5.2",
            "paranoia-level/3"
        ]
    },
    {
        "comment": "# -=[ SMTP commands ]=-\n#\n# This rule prevents execution of SMTP related system commands.\n#\n# These commands may have a higher risk of false positives.\n# For explanation of this rule, see above rule 932300.\n#\n# Rule 932301 is a stricter sibling of rule 932300.\n#\n# Regular expression generated from util/regexp-assemble/data/932301.data.\n# To update the regular expression run the following shell script\n# (consult util/regexp-assemble/README.md for details):\n#   util/regexp-assemble/regexp-assemble.py update 932301\n#\n",
        "content": "SecRule REQUEST_COOKIES|!REQUEST_COOKIES:/__utm/|REQUEST_COOKIES_NAMES|ARGS_NAMES|ARGS|XML:/* \"(?s)\\r\\n.*?\\b(?:HELP(?: .{1,255})?|DATA|QUIT)\" \\\n    \"id:932301,\\\n    phase:2,\\\n    block,\\\n    t:none,t:escapeSeqDecode,\\\n    msg:'Remote Command Execution: SMTP Command Execution',\\\n    logdata:'Matched Data: %{TX.0} found within %{MATCHED_VAR_NAME}: %{MATCHED_VAR}',\\\n    tag:'application-multi',\\\n    tag:'platform-multi',\\\n    tag:'attack-rce',\\\n    tag:'paranoia-level/3',\\\n    tag:'OWASP_CRS',\\\n    tag:'capec/137/134',\\\n    tag:'PCI/6.5.2',\\\n    ctl:auditLogParts=+E,\\\n    ver:'OWASP_CRS/3.4.0-dev',\\\n    severity:'CRITICAL',\\\n    setvar:'tx.rce_score=+%{tx.critical_anomaly_score}',\\\n    setvar:'tx.inbound_anomaly_score_pl3=+%{tx.critical_anomaly_score}'\"\n",
        "paranoia_level": "3",
        "rule_id": "932",
        "sec_rule_id": "932301",
        "severity": "CRITICAL",
        "tags": [
            "application-multi",
            "platform-multi",
            "attack-rce",
            "paranoia-level/3",
            "OWASP_CRS",
            "capec/137/134",
            "PCI/6.5.2"
        ]
    },
    {
        "comment": "# =[ IMAP4 Command Execution ]=\n#\n# This rule prevents execution of IMAP4 related system commands.\n#\n# These commands may have a higher risk of false positives.\n# For explanation of this rule, see above rule 932310.\n#\n# Rule 932311 is a stricter sibling of rule 932310.\n#\n# Regular expression generated from util/regexp-assemble/data/932311.data.\n# To update the regular expression run the following shell script\n# (consult util/regexp-assemble/README.md for details):\n#   util/regexp-assemble/regexp-assemble.py update 932311\n#\n",
        "content": "SecRule REQUEST_COOKIES|!REQUEST_COOKIES:/__utm/|REQUEST_COOKIES_NAMES|ARGS_NAMES|ARGS|XML:/* \"(?is)\\r\\n\\w{1,50}\\b[ ](?:S(?:E(?:ARCH(?: CHARSET [\\w\\-_\\.]{1,40})? (?:(KEYWORD \\x5c)?(?:ALL|ANSWERED|BCC|DELETED|DRAFT|FLAGGED|RECENT|SEEN|UNANSWERED|UNDELETED|UNDRAFT|UNFLAGGED|UNSEEN|NEW|OLD)|(?:TEXT .{1,255}|TO .{1,255}|UID [0-9,:\\*]+?|UNKEYWORD (?:\\x5c(Seen|Answered|Flagged|Deleted|Draft|Recent)))|(?:BEFORE|ON|SENTBEFORE|SENTON|SENTSINCE|SINCE) \\\"?\\d{1,2}-\\w{3}-\\d{4}\\\"?|(?:OR .{1,255} .{1,255}|SMALLER \\d{1,20}|SUBJECT .{1,255})|(?:(?:BODY|CC|FROM)|HEADER .{1,100}) .{1,255}|(?:LARGER \\d{1,20}|NOT .{1,255}|[0-9,:\\*]+))|LECT [\\w\\\"\\.\\-\\x5c\\/%\\*&#]+)|T(?:ORE [0-9,:\\*]+? [+-]?FLAGS(?:\\.SILENT)? (?:\\(\\x5c[a-z]{1,20}\\))?|ARTTLS)|UBSCRIBE [\\w\\\"\\.\\-\\x5c\\/%\\*&#]+)|L(?:IST [\\w\\\"~\\-\\x5c\\/\\*#\\.]+? [\\w\\\"\\.\\-\\x5c\\/%\\*&#]+|OG(?:IN [a-z0-9-_\\.\\@]{1,40} .*?|OUT))|C(?:(?:OPY [0-9,:\\*]+|REATE) [\\w\\\"\\.\\-\\x5c\\/%\\*&#]+|APABILITY|HECK|LOSE)|RENAME [\\w\\\"\\.\\-\\x5c\\/%\\*&#]+? [\\w\\\"\\.\\-\\x5c\\/%\\*&#]+|UN(?:SUBSCRIBE [\\w\\\"\\.\\-\\x5c\\/%\\*&#]+|AUTHENTICATE)|EX(?:AMINE [\\w\\\"\\.\\-\\x5c%\\*&#]+|PUNGE)|DELETE [\\w\\\"\\.\\-\\x5c%\\*&#]+|FETCH [0-9,:\\*]+|NOOP)\" \\\n    \"id:932311,\\\n    phase:2,\\\n    block,\\\n    t:none,t:escapeSeqDecode,\\\n    msg:'Remote Command Execution: IMAP Command Execution',\\\n    logdata:'Matched Data: %{TX.0} found within %{MATCHED_VAR_NAME}: %{MATCHED_VAR}',\\\n    tag:'application-multi',\\\n    tag:'platform-multi',\\\n    tag:'attack-rce',\\\n    tag:'paranoia-level/3',\\\n    tag:'OWASP_CRS',\\\n    tag:'capec/137/134',\\\n    tag:'PCI/6.5.2',\\\n    ctl:auditLogParts=+E,\\\n    ver:'OWASP_CRS/3.4.0-dev',\\\n    severity:'CRITICAL',\\\n    setvar:'tx.rce_score=+%{tx.critical_anomaly_score}',\\\n    setvar:'tx.inbound_anomaly_score_pl3=+%{tx.critical_anomaly_score}'\"\n",
        "paranoia_level": "3",
        "rule_id": "932",
        "sec_rule_id": "932311",
        "severity": "CRITICAL",
        "tags": [
            "application-multi",
            "platform-multi",
            "attack-rce",
            "paranoia-level/3",
            "OWASP_CRS",
            "capec/137/134",
            "PCI/6.5.2"
        ]
    },
    {
        "comment": "# =[ POP3 Command Execution ]=\n#\n# This rule prevents execution of POP3 related system commands.\n#\n# These commands may have a higher risk of false positives.\n# For explanation of this rule, see above rule 932320.\n#\n# Rule 932321 is a stricter sibling of rule 932320.\n#\n# Regular expression generated from util/regexp-assemble/data/932321.data.\n# To update the regular expression run the following shell script\n# (consult util/regexp-assemble/README.md for details):\n#   util/regexp-assemble/regexp-assemble.py update 932321\n#\n",
        "content": "SecRule REQUEST_COOKIES|!REQUEST_COOKIES:/__utm/|REQUEST_COOKIES_NAMES|ARGS_NAMES|ARGS|XML:/* \"(?si)\\r\\n.*?\\b(?:(?:QUI|RSE|STA)T|CAPA|NOOP)\" \\\n    \"id:932321,\\\n    phase:2,\\\n    block,\\\n    t:none,t:escapeSeqDecode,\\\n    msg:'Remote Command Execution: POP3 Command Execution',\\\n    logdata:'Matched Data: %{TX.0} found within %{MATCHED_VAR_NAME}: %{MATCHED_VAR}',\\\n    tag:'application-multi',\\\n    tag:'platform-multi',\\\n    tag:'attack-rce',\\\n    tag:'paranoia-level/3',\\\n    tag:'OWASP_CRS',\\\n    tag:'capec/137/134',\\\n    tag:'PCI/6.5.2',\\\n    ctl:auditLogParts=+E,\\\n    ver:'OWASP_CRS/3.4.0-dev',\\\n    severity:'CRITICAL',\\\n    setvar:'tx.rce_score=+%{tx.critical_anomaly_score}',\\\n    setvar:'tx.inbound_anomaly_score_pl3=+%{tx.critical_anomaly_score}'\"\n",
        "paranoia_level": "3",
        "rule_id": "932",
        "sec_rule_id": "932321",
        "severity": "CRITICAL",
        "tags": [
            "application-multi",
            "platform-multi",
            "attack-rce",
            "paranoia-level/3",
            "OWASP_CRS",
            "capec/137/134",
            "PCI/6.5.2"
        ]
    },
    {
        "comment": "",
        "content": "SecRule TX:DETECTION_PARANOIA_LEVEL \"@lt 4\" \"id:932017,phase:1,pass,nolog,skipAfter:END-REQUEST-932-APPLICATION-ATTACK-RCE\"\n",
        "rule_id": "932",
        "sec_rule_id": "932017"
    },
    {
        "comment": "",
        "content": "SecRule TX:DETECTION_PARANOIA_LEVEL \"@lt 4\" \"id:932018,phase:2,pass,nolog,skipAfter:END-REQUEST-932-APPLICATION-ATTACK-RCE\"\n",
        "rule_id": "932",
        "sec_rule_id": "932018"
    },
    {
        "comment": "#\n# -= Paranoia Level 0 (empty) =- (apply unconditionally)\n#\n",
        "content": "SecRule TX:DETECTION_PARANOIA_LEVEL \"@lt 1\" \"id:933011,phase:1,pass,nolog,skipAfter:END-REQUEST-933-APPLICATION-ATTACK-PHP\"\n",
        "rule_id": "933",
        "sec_rule_id": "933011"
    },
    {
        "comment": "",
        "content": "SecRule TX:DETECTION_PARANOIA_LEVEL \"@lt 1\" \"id:933012,phase:2,pass,nolog,skipAfter:END-REQUEST-933-APPLICATION-ATTACK-PHP\"\n",
        "rule_id": "933",
        "sec_rule_id": "933012"
    },
    {
        "comment": "#\n# [ PHP Open Tag Found ]\n#\n# Detects PHP open tags \"<?\" and \"<?php\".\n# http://www.php.net/manual/en/language.basic-syntax.phptags.php\n#\n# Care is taken to avoid false positives in XML declarations \"<?xml...\"\n#\n# Also detects \"[php]\", \"[/php]\" and \"[\\php]\" tags used by some applications\n# to indicate PHP dynamic content.\n#\n# Previously, this rule also checked for the PHP close tag '?>', but\n# this resulted in false positives which were difficult to prevent.\n# Therefore, that pattern is now checked by rule 933190 in paranoia levels\n# 3 or higher.\n#\n",
        "content": "SecRule REQUEST_COOKIES|!REQUEST_COOKIES:/__utm/|REQUEST_COOKIES_NAMES|ARGS_NAMES|ARGS|XML:/* \"@rx (?:<\\?(?:[^x]|x[^m]|xm[^l]|xml[^\\s]|xml$|$)|<\\?php|\\[(?:/|\\x5c)?php\\])\" \\\n    \"id:933100,\\\n    phase:2,\\\n    block,\\\n    capture,\\\n    t:none,t:lowercase,\\\n    msg:'PHP Injection Attack: PHP Open Tag Found',\\\n    logdata:'Matched Data: %{TX.0} found within %{MATCHED_VAR_NAME}: %{MATCHED_VAR}',\\\n    tag:'application-multi',\\\n    tag:'language-php',\\\n    tag:'platform-multi',\\\n    tag:'attack-injection-php',\\\n    tag:'paranoia-level/1',\\\n    tag:'OWASP_CRS',\\\n    tag:'capec/1000/152/242',\\\n    ctl:auditLogParts=+E,\\\n    ver:'OWASP_CRS/3.4.0-dev',\\\n    severity:'CRITICAL',\\\n    setvar:'tx.php_injection_score=+%{tx.critical_anomaly_score}',\\\n    setvar:'tx.inbound_anomaly_score_pl1=+%{tx.critical_anomaly_score}'\"\n",
        "description": "PHP Injection Attack: Opening/Closing Tag Found",
        "paranoia_level": "1",
        "rule_id": "933",
        "sec_rule_id": "933100",
        "severity": "CRITICAL",
        "tags": [
            "application-multi",
            "language-php",
            "platform-multi",
            "attack-injection-php",
            "paranoia-level/1",
            "OWASP_CRS",
            "capec/1000/152/242"
        ]
    },
    {
        "comment": "#\n# [ PHP Script Uploads ]\n#\n# Block file uploads with filenames ending in PHP related extensions\n# (.php, .phps, .phtml, .php5 etc).\n#\n# Many application contain Unrestricted File Upload vulnerabilities.\n# https://owasp.org/www-community/vulnerabilities/Unrestricted_File_Upload\n#\n# Attackers may use such a vulnerability to achieve remote code execution\n# by uploading a .php file. If the upload storage location is predictable\n# and not adequately protected, the attacker may then request the uploaded\n# .php file and have the code within it executed on the server.\n#\n# Also block files with just dot (.) characters after the extension:\n# https://community.rapid7.com/community/metasploit/blog/2013/08/15/time-to-patch-joomla\n#\n# Some AJAX uploaders use the nonstandard request headers X-Filename,\n# X_Filename, or X-File-Name to transmit the file name to the server;\n# scan these request headers as well as multipart/form-data file names.\n#\n",
        "content": "SecRule FILES|REQUEST_HEADERS:X-Filename|REQUEST_HEADERS:X_Filename|REQUEST_HEADERS:X.Filename|REQUEST_HEADERS:X-File-Name \"@rx .*\\.(?:php\\d*|phtml)\\.*$\" \\\n    \"id:933110,\\\n    phase:2,\\\n    block,\\\n    capture,\\\n    t:none,t:lowercase,\\\n    msg:'PHP Injection Attack: PHP Script File Upload Found',\\\n    logdata:'Matched Data: %{TX.0} found within %{MATCHED_VAR_NAME}: %{MATCHED_VAR}',\\\n    tag:'application-multi',\\\n    tag:'language-php',\\\n    tag:'platform-multi',\\\n    tag:'attack-injection-php',\\\n    tag:'paranoia-level/1',\\\n    tag:'OWASP_CRS',\\\n    tag:'capec/1000/152/242',\\\n    ctl:auditLogParts=+E,\\\n    ver:'OWASP_CRS/3.4.0-dev',\\\n    severity:'CRITICAL',\\\n    setvar:'tx.php_injection_score=+%{tx.critical_anomaly_score}',\\\n    setvar:'tx.inbound_anomaly_score_pl1=+%{tx.critical_anomaly_score}'\"\n",
        "description": "PHP Injection Attack: PHP Script File Upload Found",
        "paranoia_level": "1",
        "rule_id": "933",
        "sec_rule_id": "933110",
        "severity": "CRITICAL",
        "tags": [
            "application-multi",
            "language-php",
            "platform-multi",
            "attack-injection-php",
            "paranoia-level/1",
            "OWASP_CRS",
            "capec/1000/152/242"
        ]
    },
    {
        "comment": "#\n# [ PHP Configuration Directives ]\n#\n",
        "content": "SecRule REQUEST_COOKIES|!REQUEST_COOKIES:/__utm/|REQUEST_COOKIES_NAMES|ARGS_NAMES|ARGS|XML:/* \"@pmFromFile php-config-directives.data\" \\\n    \"id:933120,\\\n    phase:2,\\\n    block,\\\n    capture,\\\n    t:none,t:normalisePath,\\\n    msg:'PHP Injection Attack: Configuration Directive Found',\\\n    logdata:'Matched Data: %{TX.933120_TX_0} found within %{MATCHED_VAR_NAME}: %{MATCHED_VAR}',\\\n    tag:'application-multi',\\\n    tag:'language-php',\\\n    tag:'platform-multi',\\\n    tag:'attack-injection-php',\\\n    tag:'paranoia-level/1',\\\n    tag:'OWASP_CRS',\\\n    tag:'capec/1000/152/242',\\\n    ctl:auditLogParts=+E,\\\n    ver:'OWASP_CRS/3.4.0-dev',\\\n    severity:'CRITICAL',\\\n    setvar:'tx.933120_tx_0=%{tx.0}',\\\n    chain\"\n    SecRule MATCHED_VARS \"@pm =\" \\\n        \"capture,\\\n        setvar:'tx.php_injection_score=+%{tx.critical_anomaly_score}',\\\n        setvar:'tx.inbound_anomaly_score_pl1=+%{tx.critical_anomaly_score}'\"\n",
        "description": "PHP Injection Attack: Configuration Directive Found",
        "paranoia_level": "1",
        "rule_id": "933",
        "sec_rule_id": "933120",
        "severity": "CRITICAL",
        "tags": [
            "application-multi",
            "language-php",
            "platform-multi",
            "attack-injection-php",
            "paranoia-level/1",
            "OWASP_CRS",
            "capec/1000/152/242"
        ]
    },
    {
        "comment": "#\n# [ PHP Variables ]\n#\n",
        "content": "SecRule REQUEST_COOKIES|!REQUEST_COOKIES:/__utm/|REQUEST_COOKIES_NAMES|ARGS_NAMES|ARGS|XML:/* \"@pmFromFile php-variables.data\" \\\n    \"id:933130,\\\n    phase:2,\\\n    block,\\\n    capture,\\\n    t:none,t:normalisePath,t:urlDecodeUni,\\\n    msg:'PHP Injection Attack: Variables Found',\\\n    logdata:'Matched Data: %{TX.0} found within %{MATCHED_VAR_NAME}: %{MATCHED_VAR}',\\\n    tag:'application-multi',\\\n    tag:'language-php',\\\n    tag:'platform-multi',\\\n    tag:'attack-injection-php',\\\n    tag:'paranoia-level/1',\\\n    tag:'OWASP_CRS',\\\n    tag:'capec/1000/152/242',\\\n    ctl:auditLogParts=+E,\\\n    ver:'OWASP_CRS/3.4.0-dev',\\\n    severity:'CRITICAL',\\\n    setvar:'tx.php_injection_score=+%{tx.critical_anomaly_score}',\\\n    setvar:'tx.inbound_anomaly_score_pl1=+%{tx.critical_anomaly_score}'\"\n",
        "description": "PHP Injection Attack: Variables Found",
        "paranoia_level": "1",
        "rule_id": "933",
        "sec_rule_id": "933130",
        "severity": "CRITICAL",
        "tags": [
            "application-multi",
            "language-php",
            "platform-multi",
            "attack-injection-php",
            "paranoia-level/1",
            "OWASP_CRS",
            "capec/1000/152/242"
        ]
    },
    {
        "comment": "#\n# [ PHP I/O Streams ]\n#\n# The \"php://\" syntax can be used to refer to various objects, such as local files (for LFI),\n# remote urls (for RFI), or standard input/request body. Its occurrence indicates a possible attempt\n# to either inject PHP code or exploit a file inclusion vulnerability in a PHP web app.\n#\n# Examples:\n# php://filter/resource=./../../../wp-config.php\n# php://filter/resource=http://www.example.com\n# php://stdin\n# php://input\n#\n# http://php.net/manual/en/wrappers.php.php\n#\n",
        "content": "SecRule REQUEST_COOKIES|!REQUEST_COOKIES:/__utm/|REQUEST_COOKIES_NAMES|ARGS_NAMES|ARGS|XML:/* \"@rx (?i)php://(?:std(?:in|out|err)|(?:in|out)put|fd|memory|temp|filter)\" \\\n    \"id:933140,\\\n    phase:2,\\\n    block,\\\n    capture,\\\n    t:none,\\\n    msg:'PHP Injection Attack: I/O Stream Found',\\\n    logdata:'Matched Data: %{TX.0} found within %{MATCHED_VAR_NAME}: %{MATCHED_VAR}',\\\n    tag:'application-multi',\\\n    tag:'language-php',\\\n    tag:'platform-multi',\\\n    tag:'attack-injection-php',\\\n    tag:'paranoia-level/1',\\\n    tag:'OWASP_CRS',\\\n    tag:'capec/1000/152/242',\\\n    ctl:auditLogParts=+E,\\\n    ver:'OWASP_CRS/3.4.0-dev',\\\n    severity:'CRITICAL',\\\n    setvar:'tx.php_injection_score=+%{tx.critical_anomaly_score}',\\\n    setvar:'tx.inbound_anomaly_score_pl1=+%{tx.critical_anomaly_score}'\"\n",
        "description": "PHP Injection Attack: I/O Stream Found",
        "paranoia_level": "1",
        "rule_id": "933",
        "sec_rule_id": "933140",
        "severity": "CRITICAL",
        "tags": [
            "application-multi",
            "language-php",
            "platform-multi",
            "attack-injection-php",
            "paranoia-level/1",
            "OWASP_CRS",
            "capec/1000/152/242"
        ]
    },
    {
        "comment": "#\n# [ PHP Wrappers ]\n#\n# PHP comes with many built-in wrappers for various URL-style protocols for use with the filesystem\n# functions such as fopen(), copy(), file_exists() and filesize(). Abusing of PHP wrappers like phar://\n# could lead to RCE as describled by Sam Thomas at BlackHat USA 2018 (https://bit.ly/2yaKV5X), even\n# wrappers like zlib://, glob://, rar://, zip://, etc... could lead to LFI and expect:// to RCE.\n#\n",
        "content": "SecRule REQUEST_COOKIES|!REQUEST_COOKIES:/__utm/|REQUEST_COOKIES_NAMES|ARGS_NAMES|ARGS|XML:/* \"@rx (?i:zlib|glob|phar|ssh2|rar|ogg|expect|zip)://\" \\\n    \"id:933200,\\\n    phase:2,\\\n    block,\\\n    t:none,t:utf8toUnicode,t:urlDecodeUni,t:removeNulls,t:cmdLine,\\\n    msg:'PHP Injection Attack: Wrapper scheme detected',\\\n    logdata:'Matched Data: %{MATCHED_VAR} found within %{MATCHED_VAR_NAME}',\\\n    tag:'application-multi',\\\n    tag:'language-php',\\\n    tag:'platform-multi',\\\n    tag:'attack-injection-php',\\\n    tag:'paranoia-level/1',\\\n    tag:'OWASP_CRS',\\\n    tag:'capec/1000/152/242',\\\n    ctl:auditLogParts=+E,\\\n    ver:'OWASP_CRS/3.4.0-dev',\\\n    severity:'CRITICAL',\\\n    setvar:'tx.php_injection_score=+%{tx.critical_anomaly_score}',\\\n    setvar:'tx.inbound_anomaly_score_pl1=+%{tx.critical_anomaly_score}'\"\n",
        "paranoia_level": "1",
        "rule_id": "933",
        "sec_rule_id": "933200",
        "severity": "CRITICAL",
        "tags": [
            "application-multi",
            "language-php",
            "platform-multi",
            "attack-injection-php",
            "paranoia-level/1",
            "OWASP_CRS",
            "capec/1000/152/242"
        ]
    },
    {
        "comment": "#\n# [ PHP Functions: High-Risk PHP Function Names ]\n#\n# Rule 933150 contains a small list of function names which are highly indicative of a PHP\n# injection attack, for example 'base64_decode'.\n# We block these function names outright, without using a complex regexp or chain.\n# This could make the detection a bit more robust against possible bypasses.\n#\n",
        "content": "SecRule REQUEST_COOKIES|!REQUEST_COOKIES:/__utm/|REQUEST_COOKIES_NAMES|REQUEST_FILENAME|ARGS_NAMES|ARGS|XML:/* \"@pmFromFile php-function-names-933150.data\" \\\n    \"id:933150,\\\n    phase:2,\\\n    block,\\\n    capture,\\\n    t:none,\\\n    msg:'PHP Injection Attack: High-Risk PHP Function Name Found',\\\n    logdata:'Matched Data: %{TX.0} found within %{MATCHED_VAR_NAME}: %{MATCHED_VAR}',\\\n    tag:'application-multi',\\\n    tag:'language-php',\\\n    tag:'platform-multi',\\\n    tag:'attack-injection-php',\\\n    tag:'paranoia-level/1',\\\n    tag:'OWASP_CRS',\\\n    tag:'capec/1000/152/242',\\\n    ctl:auditLogParts=+E,\\\n    ver:'OWASP_CRS/3.4.0-dev',\\\n    severity:'CRITICAL',\\\n    setvar:'tx.php_injection_score=+%{tx.critical_anomaly_score}',\\\n    setvar:'tx.inbound_anomaly_score_pl1=+%{tx.critical_anomaly_score}'\"\n",
        "description": "PHP Injection Attack: High-Risk PHP Function Name Found",
        "paranoia_level": "1",
        "rule_id": "933",
        "sec_rule_id": "933150",
        "severity": "CRITICAL",
        "tags": [
            "application-multi",
            "language-php",
            "platform-multi",
            "attack-injection-php",
            "paranoia-level/1",
            "OWASP_CRS",
            "capec/1000/152/242"
        ]
    },
    {
        "comment": "#\n# [ PHP Functions: High-Risk PHP Function Calls ]\n#\n# Some PHP function names have a certain risk of false positives, due to short\n# names, full or partial overlap with common natural language terms, uses in\n# other contexts, et cetera. Some examples are 'eval', 'exec', 'system'.\n#\n# For these function names, we apply a regexp to look for PHP function syntax.\n# The regexp looks for a word boundary and adjoining parentheses.\n# For instance, we want to block 'eval()', but we want to allow 'medieval()'.\n#\n# We have to be careful of possible bypasses using comment syntax. Examples:\n#\n#   system(...)\n#   system (...)\n#   system\\t(...)\n#   system /*comment*/ (...)\n#   system /*multiline \\n comment*/ (...)\n#   system //comment \\n (...)\n#   system #comment \\n (...)\n#\n# This rule is also triggered by the following exploit(s):\n# [ Apache Struts vulnerability CVE-2017-9791 - Exploit tested: https://www.exploit-db.com/exploits/42324 ]\n# [ Apache Struts vulnerability CVE-2018-11776 - Exploit tested: https://www.exploit-db.com/exploits/45260 ]\n# [ SAP CRM Java vulnerability CVE-2018-2380 - Exploit tested: https://www.exploit-db.com/exploits/44292 ]\n#\n# Regular expression generated from util/regexp-assemble/data/933160.data.\n# To update the regular expression run the following shell script\n# (consult util/regexp-assemble/README.md for details):\n#   util/regexp-assemble/regexp-assemble.py update 933160\n#\n",
        "content": "SecRule REQUEST_COOKIES|!REQUEST_COOKIES:/__utm/|REQUEST_COOKIES_NAMES|REQUEST_FILENAME|ARGS_NAMES|ARGS|XML:/* \"@rx (?i)\\b(?:s(?:e(?:t(?:_(?:e(?:xception|rror)_handler|magic_quotes_runtime|include_path)|defaultstub)|ssion_s(?:et_save_handler|tart))|qlite_(?:(?:(?:unbuffered|single|array)_)?query|create_(?:aggregate|function)|p?open|exec)|tr(?:eam_(?:context_create|socket_client)|ipc?slashes|rev)|implexml_load_(?:string|file)|ocket_c(?:onnect|reate)|h(?:ow_sourc|a1_fil)e|pl_autoload_register|ystem)|p(?:r(?:eg_(?:replace(?:_callback(?:_array)?)?|match(?:_all)?|split)|oc_(?:(?:terminat|clos|nic)e|get_status|open)|int_r)|o(?:six_(?:get(?:(?:e[gu]|g)id|login|pwnam)|mk(?:fifo|nod)|ttyname|kill)|pen)|hp(?:_(?:strip_whitespac|unam)e|version|info)|g_(?:(?:execut|prepar)e|connect|query)|a(?:rse_(?:ini_file|str)|ssthru)|utenv)|r(?:unkit_(?:function_(?:re(?:defin|nam)e|copy|add)|method_(?:re(?:defin|nam)e|copy|add)|constant_(?:redefine|add))|e(?:(?:gister_(?:shutdown|tick)|name)_function|ad(?:(?:gz)?file|_exif_data|dir))|awurl(?:de|en)code)|i(?:mage(?:createfrom(?:(?:jpe|pn)g|x[bp]m|wbmp|gif)|(?:jpe|pn)g|g(?:d2?|if)|2?wbmp|xbm)|s_(?:(?:(?:execut|write?|read)ab|fi)le|dir)|ni_(?:get(?:_all)?|set)|terator_apply|ptcembed)|g(?:et(?:_(?:c(?:urrent_use|fg_va)r|meta_tags)|my(?:[gpu]id|inode)|(?:lastmo|cw)d|imagesize|env)|z(?:(?:(?:defla|wri)t|encod|fil)e|compress|open|read)|lob)|a(?:rray_(?:u(?:intersect(?:_u?assoc)?|diff(?:_u?assoc)?)|intersect_u(?:assoc|key)|diff_u(?:assoc|key)|filter|reduce|map)|ssert(?:_options)?)|h(?:tml(?:specialchars(?:_decode)?|_entity_decode|entities)|(?:ash(?:_(?:update|hmac))?|ighlight)_file|e(?:ader_register_callback|x2bin))|f(?:i(?:le(?:(?:[acm]tim|inod)e|(?:_exist|perm)s|group)?|nfo_open)|tp_(?:nb_(?:ge|pu)|connec|ge|pu)t|(?:unction_exis|pu)ts|write|open)|o(?:b_(?:get_(?:c(?:ontents|lean)|flush)|end_(?:clean|flush)|clean|flush|start)|dbc_(?:result(?:_all)?|exec(?:ute)?|connect)|pendir)|m(?:b_(?:ereg(?:_(?:replace(?:_callback)?|match)|i(?:_replace)?)?|parse_str)|(?:ove_uploaded|d5)_file|ethod_exists|ysql_query|kdir)|e(?:x(?:if_(?:t(?:humbnail|agname)|imagetype|read_data)|ec)|scapeshell(?:arg|cmd)|rror_reporting|val)|c(?:url_(?:file_create|exec|init)|onvert_uuencode|reate_function|hr)|u(?:n(?:serialize|pack)|rl(?:de|en)code|[ak]?sort)|(?:json_(?:de|en)cod|debug_backtrac|tmpfil)e|b(?:(?:son_(?:de|en)|ase64_en)code|zopen)|var_dump)(?:\\s|/\\*.*\\*/|//.*|#.*)*\\(.*\\)\" \\\n    \"id:933160,\\\n    phase:2,\\\n    block,\\\n    capture,\\\n    t:none,\\\n    msg:'PHP Injection Attack: High-Risk PHP Function Call Found',\\\n    logdata:'Matched Data: %{TX.0} found within %{MATCHED_VAR_NAME}: %{MATCHED_VAR}',\\\n    tag:'application-multi',\\\n    tag:'language-php',\\\n    tag:'platform-multi',\\\n    tag:'attack-injection-php',\\\n    tag:'paranoia-level/1',\\\n    tag:'OWASP_CRS',\\\n    tag:'capec/1000/152/242',\\\n    ctl:auditLogParts=+E,\\\n    ver:'OWASP_CRS/3.4.0-dev',\\\n    severity:'CRITICAL',\\\n    setvar:'tx.php_injection_score=+%{tx.critical_anomaly_score}',\\\n    setvar:'tx.inbound_anomaly_score_pl1=+%{tx.critical_anomaly_score}'\"\n",
        "description": "PHP Injection Attack: High-Risk PHP Function Call Found",
        "paranoia_level": "1",
        "rule_id": "933",
        "sec_rule_id": "933160",
        "severity": "CRITICAL",
        "tags": [
            "application-multi",
            "language-php",
            "platform-multi",
            "attack-injection-php",
            "paranoia-level/1",
            "OWASP_CRS",
            "capec/1000/152/242"
        ]
    },
    {
        "comment": "#\n# [ PHP Object Injection ]\n#\n# PHP Object Injection is an application level vulnerability that could allow\n# an attacker to perform different kinds of malicious attacks, such as\n# Code Injection, SQL Injection, Path Traversal and Application Denial of Service,\n# depending on the context.\n#\n# The vulnerability occurs when user-supplied input is not properly sanitized\n# before being passed to the unserialize() PHP function. Since PHP allows object\n# serialization, attackers could pass ad-hoc serialized strings to a vulnerable\n# unserialize() call, resulting in an arbitrary PHP object(s) injection into the\n# application scope.\n#\n# https://www.owasp.org/index.php/PHP_Object_Injection\n#\n# In serialized form, PHP objects have the following format:\n#\n#    O:8:\"stdClass\":1:{s:1:\"a\";i:2;}\n#    O:3:\"Foo\":0:{}\n#\n# Also detected are PHP objects with a custom unserializer:\n# http://www.phpinternalsbook.com/classes_objects/serialization.html\n# These have the following format:\n#\n#    C:11:\"ArrayObject\":37:{x:i:0;a:1:{s:1:\"a\";s:1:\"b\";};m:a:0:{}}\n#    C:3:\"Foo\":23:{s:15:\"My private data\";}\n#\n# HTTP headers are inspected, since PHP object injection vulnerabilities have been\n# found in applications parsing them:\n# https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2015-8562 (User-Agent header)\n# https://www.exploit-db.com/exploits/39033/ (X-Forwarded-For header)\n# http://karmainsecurity.com/KIS-2015-10 (Host header)\n#\n",
        "content": "SecRule REQUEST_COOKIES|!REQUEST_COOKIES:/__utm/|REQUEST_COOKIES_NAMES|REQUEST_HEADERS|ARGS_NAMES|ARGS|XML:/* \"@rx [oOcC]:\\d+:\\\".+?\\\":\\d+:{.*}\" \\\n    \"id:933170,\\\n    phase:2,\\\n    block,\\\n    capture,\\\n    t:none,\\\n    msg:'PHP Injection Attack: Serialized Object Injection',\\\n    logdata:'Matched Data: %{TX.0} found within %{MATCHED_VAR_NAME}: %{MATCHED_VAR}',\\\n    tag:'application-multi',\\\n    tag:'language-php',\\\n    tag:'platform-multi',\\\n    tag:'attack-injection-php',\\\n    tag:'paranoia-level/1',\\\n    tag:'OWASP_CRS',\\\n    tag:'capec/1000/152/242',\\\n    ctl:auditLogParts=+E,\\\n    ver:'OWASP_CRS/3.4.0-dev',\\\n    severity:'CRITICAL',\\\n    setvar:'tx.php_injection_score=+%{tx.critical_anomaly_score}',\\\n    setvar:'tx.inbound_anomaly_score_pl1=+%{tx.critical_anomaly_score}'\"\n",
        "description": "PHP Injection Attack: Serialized Object Injection",
        "paranoia_level": "1",
        "rule_id": "933",
        "sec_rule_id": "933170",
        "severity": "CRITICAL",
        "tags": [
            "application-multi",
            "language-php",
            "platform-multi",
            "attack-injection-php",
            "paranoia-level/1",
            "OWASP_CRS",
            "capec/1000/152/242"
        ]
    },
    {
        "comment": "#\n# [ PHP Functions: Variable Function Calls ]\n#\n# PHP 'variable functions' provide an alternate syntax for calling PHP functions.\n# http://php.net/manual/en/functions.variable-functions.php\n#\n# An attacker may use variable function syntax to evade detection of function\n# names during exploitation of a remote code execution vulnerability.\n# An example to use the 'file_get_contents' function while evading rule 933150:\n#\n#   $fn = 'file_' . 'get_' . 'contents';\n#   echo $fn('wp-co' . 'nfig.php');\n#\n# Some examples from obfuscated malware:\n#\n#   $OOO0000O0(...)\n#   @$b374k(...)\n#   $_[@-_]($_[@!+_] )\n#\n# A breakdown of the regular expression:\n#\n#   \\$+\n#       The variable's '$' char, or multiple '$' for 'variable variables':\n#       http://php.net/manual/en/language.variables.variable.php\n#   (?:[a-zA-Z_\\x7f-\\xff][a-zA-Z0-9_\\x7f-\\xff]*|\\s*{.+})\n#       One of the following:\n#       - A variable name; regexp from http://php.net/language.variables.basics\n#       - A nonempty expression for variable variables: ${'fn'} or $ {'fn'}\n#   (?:\\s|\\[.+\\]|{.+}|/\\*.*\\*/|//.*|#.*)*\n#       Optional whitespace, array access, or comments\n#   \\(.*\\)\n#       Parentheses optionally containing function parameters\n#\n",
        "content": "SecRule REQUEST_COOKIES|!REQUEST_COOKIES:/__utm/|REQUEST_COOKIES_NAMES|REQUEST_FILENAME|ARGS_NAMES|ARGS|XML:/* \"@rx \\$+(?:[a-zA-Z_\\x7f-\\xff][a-zA-Z0-9_\\x7f-\\xff]*|\\s*{.+})(?:\\s|\\[.+\\]|{.+}|/\\*.*\\*/|//.*|#.*)*\\(.*\\)\" \\\n    \"id:933180,\\\n    phase:2,\\\n    block,\\\n    capture,\\\n    t:none,\\\n    msg:'PHP Injection Attack: Variable Function Call Found',\\\n    logdata:'Matched Data: %{TX.0} found within %{MATCHED_VAR_NAME}: %{MATCHED_VAR}',\\\n    tag:'application-multi',\\\n    tag:'language-php',\\\n    tag:'platform-multi',\\\n    tag:'attack-injection-php',\\\n    tag:'paranoia-level/1',\\\n    tag:'OWASP_CRS',\\\n    tag:'capec/1000/152/242',\\\n    ctl:auditLogParts=+E,\\\n    ver:'OWASP_CRS/3.4.0-dev',\\\n    severity:'CRITICAL',\\\n    setvar:'tx.php_injection_score=+%{tx.critical_anomaly_score}',\\\n    setvar:'tx.inbound_anomaly_score_pl1=+%{tx.critical_anomaly_score}'\"\n",
        "description": "PHP Injection Attack: Variable Function Call Found",
        "paranoia_level": "1",
        "rule_id": "933",
        "sec_rule_id": "933180",
        "severity": "CRITICAL",
        "tags": [
            "application-multi",
            "language-php",
            "platform-multi",
            "attack-injection-php",
            "paranoia-level/1",
            "OWASP_CRS",
            "capec/1000/152/242"
        ]
    },
    {
        "comment": "# [ PHP Functions: Variable Function Prevent Bypass ]\n#\n# Referring to https://www.secjuice.com/php-rce-bypass-filters-sanitization-waf/\n# Regex test on https://regex101.com/r/x1tfXG/1\n# the rule 933180 could be bypassed by using the following payloads:\n#\n# - (system)('uname');\n# - (sy.(st).em)('uname');\n# - (string)\"system\"('uname');\n# - define('x', 'sys' . 'tem');(x)/* comment */('uname');\n# - $y = 'sys'.'tem';($y)('uname');\n# - define('z', [['sys' .'tem']]);(z)[0][0]('uname');\n# - (system)(ls);\n# - (/**/system)(ls/**/);\n# - (['system'])[0]('uname');\n# - (++[++system++][++0++])++{/*dsasd*/0}++(++ls++);\n#\n# This rule blocks all payloads above and avoids to block values like:\n#\n# - [ACME] this is a test (just a test)\n# - Test (with two) rounded (brackets)\n#\n",
        "content": "SecRule REQUEST_COOKIES|!REQUEST_COOKIES:/__utm/|REQUEST_COOKIES_NAMES|REQUEST_FILENAME|ARGS_NAMES|ARGS|XML:/* \"@rx (\\(.+\\)\\(.+\\)|\\(.+\\)['\\\"][a-zA-Z-_0-9]+['\\\"]\\(.+\\)|\\[\\d+\\]\\(.+\\)|\\{\\d+\\}\\(.+\\)|\\$[^(\\),.;\\x5c/]+\\(.+\\)|[\\\"'][a-zA-Z0-9-_\\x5c]+[\\\"']\\(.+\\)|\\([^\\)]*string[^\\)]*\\)[a-zA-Z-_0-9\\\"'.{}\\[\\]\\s]+\\([^\\)]*\\));\" \\\n    \"id:933210,\\\n    phase:2,\\\n    block,\\\n    capture,\\\n    t:none,t:urlDecode,t:replaceComments,t:removeWhitespace,\\\n    msg:'PHP Injection Attack: Variable Function Call Found',\\\n    logdata:'Matched Data: %{TX.0} found within %{MATCHED_VAR_NAME}: %{MATCHED_VAR}',\\\n    tag:'application-multi',\\\n    tag:'language-php',\\\n    tag:'platform-multi',\\\n    tag:'attack-injection-php',\\\n    tag:'paranoia-level/1',\\\n    tag:'OWASP_CRS',\\\n    tag:'capec/1000/152/242',\\\n    ctl:auditLogParts=+E,\\\n    ver:'OWASP_CRS/3.4.0-dev',\\\n    severity:'CRITICAL',\\\n    setvar:'tx.php_injection_score=+%{tx.critical_anomaly_score}',\\\n    setvar:'tx.inbound_anomaly_score_pl1=+%{tx.critical_anomaly_score}'\"\n",
        "paranoia_level": "1",
        "rule_id": "933",
        "sec_rule_id": "933210",
        "severity": "CRITICAL",
        "tags": [
            "application-multi",
            "language-php",
            "platform-multi",
            "attack-injection-php",
            "paranoia-level/1",
            "OWASP_CRS",
            "capec/1000/152/242"
        ]
    },
    {
        "comment": "",
        "content": "SecRule TX:DETECTION_PARANOIA_LEVEL \"@lt 2\" \"id:933013,phase:1,pass,nolog,skipAfter:END-REQUEST-933-APPLICATION-ATTACK-PHP\"\n",
        "rule_id": "933",
        "sec_rule_id": "933013"
    },
    {
        "comment": "",
        "content": "SecRule TX:DETECTION_PARANOIA_LEVEL \"@lt 2\" \"id:933014,phase:2,pass,nolog,skipAfter:END-REQUEST-933-APPLICATION-ATTACK-PHP\"\n",
        "rule_id": "933",
        "sec_rule_id": "933014"
    },
    {
        "comment": "#\n# [ PHP Functions: Medium-Risk PHP Function Names ]\n#\n# In paranoia level 2, we add additional checks for most PHP functions.\n#\n# The size of the PHP function list is considerable.\n# Even after excluding the more obscure PHP extensions, 1300+ functions remain.\n# For performance and maintenance reasons, this rule does not use a regexp,\n# but uses a phrase file (@pmFromFile), and additionally looks for an '(' character\n# in the matched variable.\n#\n# This approach carries some risk for false positives. Therefore, the function list\n# has been curated to remove words closely matching natural language and terms often\n# used in other contexts.\n#\n# This rule is a stricter sibling of rule 933150.\n#\n",
        "content": "SecRule REQUEST_COOKIES|!REQUEST_COOKIES:/__utm/|REQUEST_COOKIES_NAMES|REQUEST_FILENAME|ARGS_NAMES|ARGS|XML:/* \"@pmFromFile php-function-names-933151.data\" \\\n    \"id:933151,\\\n    phase:2,\\\n    block,\\\n    capture,\\\n    t:none,\\\n    msg:'PHP Injection Attack: Medium-Risk PHP Function Name Found',\\\n    logdata:'Matched Data: %{TX.933151_TX_0} found within %{MATCHED_VAR_NAME}: %{MATCHED_VAR}',\\\n    tag:'application-multi',\\\n    tag:'language-php',\\\n    tag:'platform-multi',\\\n    tag:'attack-injection-php',\\\n    tag:'OWASP_CRS',\\\n    tag:'capec/1000/152/242',\\\n    tag:'paranoia-level/2',\\\n    ctl:auditLogParts=+E,\\\n    ver:'OWASP_CRS/3.4.0-dev',\\\n    severity:'CRITICAL',\\\n    setvar:'tx.933151_tx_0=%{tx.0}',\\\n    chain\"\n    SecRule MATCHED_VARS \"@pm (\" \\\n        \"capture,\\\n        setvar:'tx.php_injection_score=+%{tx.critical_anomaly_score}',\\\n        setvar:'tx.inbound_anomaly_score_pl2=+%{tx.critical_anomaly_score}'\"\n",
        "description": "PHP Injection Attack: Medium-Risk PHP Function Name Found",
        "paranoia_level": "2",
        "rule_id": "933",
        "sec_rule_id": "933151",
        "severity": "CRITICAL",
        "tags": [
            "application-multi",
            "language-php",
            "platform-multi",
            "attack-injection-php",
            "OWASP_CRS",
            "capec/1000/152/242",
            "paranoia-level/2"
        ]
    },
    {
        "comment": "",
        "content": "SecRule TX:DETECTION_PARANOIA_LEVEL \"@lt 3\" \"id:933015,phase:1,pass,nolog,skipAfter:END-REQUEST-933-APPLICATION-ATTACK-PHP\"\n",
        "rule_id": "933",
        "sec_rule_id": "933015"
    },
    {
        "comment": "",
        "content": "SecRule TX:DETECTION_PARANOIA_LEVEL \"@lt 3\" \"id:933016,phase:2,pass,nolog,skipAfter:END-REQUEST-933-APPLICATION-ATTACK-PHP\"\n",
        "rule_id": "933",
        "sec_rule_id": "933016"
    },
    {
        "comment": "#\n# [ PHP Variables: Common Variable Indexes ]\n#\n# In paranoia level 3, we add additional checks for parameters to many PHP variables.\n#\n#\n# One of the more common variables used within attacks on PHP is $_SERVER. Because\n# of how many different ways PHP has for executing variables (variable variables,\n# etc) often just looking for $_SERVER will be less effective than looking for the\n# various indexes within $_SERVER. This rule checks for these indexes.\n# This rule is located in PL 3 because often developers will use these names as\n# parameter names or values and this will lead to false positives.\n# Because this list is not expected to change and it is limited in size we use a\n# regex in this case to look for these values whereas in its sibling rule we use\n# @pmFromFile for flexibility and performance.\n#\n# Regular expression generated from util/regexp-assemble/data/933131.data.\n# To update the regular expression run the following shell script\n# (consult util/regexp-assemble/README.md for details):\n#   util/regexp-assemble/regexp-assemble.py update 933131\n#\n# This rule is a stricter sibling of rule 933130.\n",
        "content": "SecRule REQUEST_COOKIES|!REQUEST_COOKIES:/__utm/|REQUEST_COOKIES_NAMES|ARGS_NAMES|ARGS|XML:/* \"@rx (?:HTTP_(?:ACCEPT(?:_(?:ENCODING|LANGUAGE|CHARSET))?|(?:X_FORWARDED_FO|REFERE)R|(?:USER_AGEN|HOS)T|CONNECTION|KEEP_ALIVE)|PATH_(?:TRANSLATED|INFO)|ORIG_PATH_INFO|QUERY_STRING|REQUEST_URI|AUTH_TYPE)\" \\\n    \"id:933131,\\\n    phase:2,\\\n    block,\\\n    capture,\\\n    t:none,t:normalisePath,t:urlDecodeUni,\\\n    msg:'PHP Injection Attack: Variables Found',\\\n    logdata:'Matched Data: %{TX.0} found within %{MATCHED_VAR_NAME}: %{MATCHED_VAR}',\\\n    tag:'application-multi',\\\n    tag:'language-php',\\\n    tag:'platform-multi',\\\n    tag:'attack-injection-php',\\\n    tag:'OWASP_CRS',\\\n    tag:'capec/1000/152/242',\\\n    tag:'paranoia-level/3',\\\n    ctl:auditLogParts=+E,\\\n    ver:'OWASP_CRS/3.4.0-dev',\\\n    severity:'CRITICAL',\\\n    setvar:'tx.php_injection_score=+%{tx.critical_anomaly_score}',\\\n    setvar:'tx.inbound_anomaly_score_pl3=+%{tx.critical_anomaly_score}'\"\n",
        "description": "PHP Injection Attack: Variables Found",
        "paranoia_level": "3",
        "rule_id": "933",
        "sec_rule_id": "933131",
        "severity": "CRITICAL",
        "tags": [
            "application-multi",
            "language-php",
            "platform-multi",
            "attack-injection-php",
            "OWASP_CRS",
            "capec/1000/152/242",
            "paranoia-level/3"
        ]
    },
    {
        "comment": "#\n# [ PHP Functions: Low-Value PHP Function Calls ]\n#\n# In paranoia level 3, we add additional checks for the remaining PHP functions.\n#\n# Most of these function names are likely to cause false positives in natural text\n# or common parameter values, such as 'abs', 'copy', 'date', 'key', 'max', 'min'.\n# Therefore, these function names are not scanned in lower paranoia levels.\n#\n# To mitigate the risk of false positives somewhat, a regexp is used to look for\n# PHP function syntax. (See rule 933160 for a description.)\n#\n# This rule is a stricter sibling of rule 933160.\n#\n# This rule is also triggered by the following exploit(s):\n# [ Apache Struts vulnerability CVE-2018-11776 - Exploit tested: https://www.exploit-db.com/exploits/45262 ]\n# [ SAP CRM Java vulnerability CVE-2018-2380 - Exploit tested: https://www.exploit-db.com/exploits/44292 ]\n#\n# Regular expression generated from util/regexp-assemble/data/933161.data.\n# To update the regular expression run the following shell script\n# (consult util/regexp-assemble/README.md for details):\n#   util/regexp-assemble/regexp-assemble.py update 933161\n#\n",
        "content": "SecRule REQUEST_COOKIES|!REQUEST_COOKIES:/__utm/|REQUEST_COOKIES_NAMES|REQUEST_FILENAME|ARGS_NAMES|ARGS|XML:/* \"@rx (?i)\\b(?:i(?:s(?:_(?:in(?:t(?:eger)?|finite)|n(?:u(?:meric|ll)|an)|(?:calla|dou)ble|s(?:calar|tring)|f(?:inite|loat)|re(?:source|al)|l(?:ink|ong)|a(?:rray)?|object|bool)|set)|n(?:(?:clud|vok)e|t(?:div|val))|(?:mplod|dat)e|conv)|s(?:t(?:r(?:(?:le|sp)n|coll)|at)|(?:e(?:rializ|ttyp)|huffl)e|i(?:milar_text|zeof|nh?)|p(?:liti?|rintf)|(?:candi|ubst)r|y(?:mlink|slog)|o(?:undex|rt)|leep|rand|qrt)|f(?:ile(?:(?:siz|typ)e|owner|pro)|l(?:o(?:atval|ck|or)|ush)|(?:rea|mo)d|t(?:ell|ok)|unction|close|gets|stat|eof)|c(?:h(?:o(?:wn|p)|eckdate|root|dir|mod)|o(?:(?:(?:nsta|u)n|mpac)t|sh?|py)|lose(?:dir|log)|(?:urren|ryp)t|eil)|e(?:x(?:(?:trac|i)t|p(?:lode)?)|a(?:ster_da(?:te|ys)|ch)|r(?:ror_log|egi?)|mpty|cho|nd)|l(?:o(?:g(?:1[0p])?|caltime)|i(?:nk(?:info)?|st)|(?:cfirs|sta)t|evenshtein|trim)|d(?:i(?:(?:skfreespac)?e|r(?:name)?)|e(?:fined?|coct)|(?:oubleva)?l|ate)|r(?:e(?:(?:quir|cod|nam)e|adlin[ek]|wind|set)|an(?:ge|d)|ound|sort|trim)|m(?:b(?:split|ereg)|i(?:crotime|n)|a(?:i[ln]|x)|etaphone|y?sql|hash)|u(?:n(?:(?:tain|se)t|iqid|link)|s(?:leep|ort)|cfirst|mask)|a(?:s(?:(?:se|o)rt|inh?)|r(?:sort|ray)|tan[2h]?|cosh?|bs)|t(?:e(?:xtdomain|mpnam)|a(?:int|nh?)|ouch|ime|rim)|h(?:e(?:ader(?:s_(?:lis|sen)t)?|brev)|ypot|ash)|p(?:a(?:thinfo|ck)|r(?:intf?|ev)|close|o[sw]|i)|g(?:et(?:t(?:ext|ype)|date)|mdate)|o(?:penlog|ctdec|rd)|b(?:asename|indec)|n(?:atsor|ex)t|k(?:sort|ey)|quotemeta|wordwrap|virtual|join)(?:\\s|/\\*.*\\*/|//.*|#.*)*\\(.*\\)\" \\\n    \"id:933161,\\\n    phase:2,\\\n    block,\\\n    capture,\\\n    t:none,\\\n    msg:'PHP Injection Attack: Low-Value PHP Function Call Found',\\\n    logdata:'Matched Data: %{TX.0} found within %{MATCHED_VAR_NAME}: %{MATCHED_VAR}',\\\n    tag:'application-multi',\\\n    tag:'language-php',\\\n    tag:'platform-multi',\\\n    tag:'attack-injection-php',\\\n    tag:'OWASP_CRS',\\\n    tag:'capec/1000/152/242',\\\n    tag:'paranoia-level/3',\\\n    ctl:auditLogParts=+E,\\\n    ver:'OWASP_CRS/3.4.0-dev',\\\n    severity:'CRITICAL',\\\n    setvar:'tx.php_injection_score=+%{tx.critical_anomaly_score}',\\\n    setvar:'tx.inbound_anomaly_score_pl3=+%{tx.critical_anomaly_score}'\"\n",
        "description": "PHP Injection Attack: Low-Value PHP Function Call Found",
        "paranoia_level": "3",
        "rule_id": "933",
        "sec_rule_id": "933161",
        "severity": "CRITICAL",
        "tags": [
            "application-multi",
            "language-php",
            "platform-multi",
            "attack-injection-php",
            "OWASP_CRS",
            "capec/1000/152/242",
            "paranoia-level/3"
        ]
    },
    {
        "comment": "#\n# [ PHP Script Uploads: Superfluous extension ]\n#\n# Block file uploads with PHP related extensions (.php, .phps, .phtml,\n# .php5 etc) anywhere in the name, followed by a dot.\n#\n# Example: index.php.tmp\n#\n# Uploading of such files can lead to remote code execution if\n# Apache is configured with AddType and MultiViews, as Apache will\n# automatically do a filename match when the extension is unknown.\n# This configuration is fortunately not common in modern installs.\n#\n# Blocking these file names might lead to more false positives.\n#\n# Some AJAX uploaders use the nonstandard request headers X-Filename,\n# X_Filename, or X-File-Name to transmit the file name to the server;\n# scan these request headers as well as multipart/form-data file names.\n#\n# This rule is a stricter sibling of rule 933110.\n#\n",
        "content": "SecRule FILES|REQUEST_HEADERS:X-Filename|REQUEST_HEADERS:X_Filename|REQUEST_HEADERS:X.Filename|REQUEST_HEADERS:X-File-Name \"@rx .*\\.(?:php\\d*|phtml)\\..*$\" \\\n    \"id:933111,\\\n    phase:2,\\\n    block,\\\n    capture,\\\n    t:none,t:lowercase,\\\n    msg:'PHP Injection Attack: PHP Script File Upload Found',\\\n    logdata:'Matched Data: %{TX.0} found within %{MATCHED_VAR_NAME}: %{MATCHED_VAR}',\\\n    tag:'application-multi',\\\n    tag:'language-php',\\\n    tag:'platform-multi',\\\n    tag:'attack-injection-php',\\\n    tag:'OWASP_CRS',\\\n    tag:'capec/1000/152/242',\\\n    tag:'paranoia-level/3',\\\n    ctl:auditLogParts=+E,\\\n    ver:'OWASP_CRS/3.4.0-dev',\\\n    severity:'CRITICAL',\\\n    setvar:'tx.php_injection_score=+%{tx.critical_anomaly_score}',\\\n    setvar:'tx.inbound_anomaly_score_pl3=+%{tx.critical_anomaly_score}'\"\n",
        "description": "PHP Injection Attack: PHP Script File Upload Found",
        "paranoia_level": "3",
        "rule_id": "933",
        "sec_rule_id": "933111",
        "severity": "CRITICAL",
        "tags": [
            "application-multi",
            "language-php",
            "platform-multi",
            "attack-injection-php",
            "OWASP_CRS",
            "capec/1000/152/242",
            "paranoia-level/3"
        ]
    },
    {
        "comment": "# [ PHP Closing Tag Found ]\n#\n# http://www.php.net/manual/en/language.basic-syntax.phptags.php\n#\n# This check was extracted from 933100 (paranoia level 1), since the\n# checked sequence '?>' commonly causes false positives.\n# See issue #654 for discussion.\n#\n",
        "content": "SecRule REQUEST_COOKIES|!REQUEST_COOKIES:/__utm/|REQUEST_COOKIES_NAMES|ARGS_NAMES|ARGS|XML:/* \"@pm ?>\" \\\n    \"id:933190,\\\n    phase:2,\\\n    block,\\\n    capture,\\\n    t:none,t:urlDecodeUni,\\\n    msg:'PHP Injection Attack: PHP Closing Tag Found',\\\n    logdata:'Matched Data: %{TX.0} found within %{MATCHED_VAR_NAME}: %{MATCHED_VAR}',\\\n    tag:'application-multi',\\\n    tag:'language-php',\\\n    tag:'platform-multi',\\\n    tag:'attack-injection-php',\\\n    tag:'OWASP_CRS',\\\n    tag:'capec/1000/152/242',\\\n    tag:'paranoia-level/3',\\\n    ctl:auditLogParts=+E,\\\n    ver:'OWASP_CRS/3.4.0-dev',\\\n    severity:'CRITICAL',\\\n    setvar:'tx.php_injection_score=+%{tx.critical_anomaly_score}',\\\n    setvar:'tx.inbound_anomaly_score_pl3=+%{tx.critical_anomaly_score}'\"\n",
        "paranoia_level": "3",
        "rule_id": "933",
        "sec_rule_id": "933190",
        "severity": "CRITICAL",
        "tags": [
            "application-multi",
            "language-php",
            "platform-multi",
            "attack-injection-php",
            "OWASP_CRS",
            "capec/1000/152/242",
            "paranoia-level/3"
        ]
    },
    {
        "comment": "",
        "content": "SecRule TX:DETECTION_PARANOIA_LEVEL \"@lt 4\" \"id:933017,phase:1,pass,nolog,skipAfter:END-REQUEST-933-APPLICATION-ATTACK-PHP\"\n",
        "rule_id": "933",
        "sec_rule_id": "933017"
    },
    {
        "comment": "",
        "content": "SecRule TX:DETECTION_PARANOIA_LEVEL \"@lt 4\" \"id:933018,phase:2,pass,nolog,skipAfter:END-REQUEST-933-APPLICATION-ATTACK-PHP\"\n",
        "rule_id": "933",
        "sec_rule_id": "933018"
    },
    {
        "comment": "#\n# -= Paranoia Level 0 (empty) =- (apply unconditionally)\n#\n",
        "content": "SecRule TX:DETECTION_PARANOIA_LEVEL \"@lt 1\" \"id:934011,phase:1,pass,nolog,skipAfter:END-REQUEST-934-APPLICATION-ATTACK-GENERIC\"\n",
        "rule_id": "934",
        "sec_rule_id": "934011"
    },
    {
        "comment": "",
        "content": "SecRule TX:DETECTION_PARANOIA_LEVEL \"@lt 1\" \"id:934012,phase:2,pass,nolog,skipAfter:END-REQUEST-934-APPLICATION-ATTACK-GENERIC\"\n",
        "rule_id": "934",
        "sec_rule_id": "934012"
    },
    {
        "comment": "# [ NodeJS Insecure unserialization / generic RCE signatures ]\n#\n# Libraries performing insecure unserialization:\n# - node-serialize: _$$ND_FUNC$$_ (CVE-2017-5941)\n# - funcster: __js_function\n#\n# See:\n# https://opsecx.com/index.php/2017/02/08/exploiting-node-js-deserialization-bug-for-remote-code-execution/\n# https://www.acunetix.com/blog/web-security-zone/deserialization-vulnerabilities-attacking-deserialization-in-js/\n#\n# Some generic snippets used:\n# - function() {\n# - new Function(\n# - eval(\n# - String.fromCharCode(\n#\n# Last two are used by nodejsshell.py,\n# https://github.com/ajinabraham/Node.Js-Security-Course/blob/master/nodejsshell.py\n#\n# As base64 is sometimes (but not always) used to encode serialized values,\n# use multiMatch and t:base64decode.\n#\n# Regular expression generated from util/regexp-assemble/data/934100.data.\n# To update the regular expression run the following shell script\n# (consult util/regexp-assemble/README.md for details):\n#   util/regexp-assemble/regexp-assemble.py update 934100\n#\n",
        "content": "SecRule REQUEST_COOKIES|!REQUEST_COOKIES:/__utm/|REQUEST_COOKIES_NAMES|ARGS_NAMES|ARGS|XML:/* \"@rx (?:_(?:\\$\\$ND_FUNC\\$\\$_|_js_function)|(?:new\\s+Function|\\beval)\\s*\\(|String\\s*\\.\\s*fromCharCode|function\\s*\\(\\s*\\)\\s*{|module\\.exports\\s*=|this\\.constructor)\" \\\n    \"id:934100,\\\n    phase:2,\\\n    block,\\\n    capture,\\\n    t:none,t:urlDecodeUni,t:base64Decode,\\\n    msg:'Node.js Injection Attack',\\\n    logdata:'Matched Data: %{TX.0} found within %{MATCHED_VAR_NAME}: %{MATCHED_VAR}',\\\n    tag:'application-multi',\\\n    tag:'language-javascript',\\\n    tag:'platform-multi',\\\n    tag:'attack-rce',\\\n    tag:'attack-injection-generic',\\\n    tag:'paranoia-level/1',\\\n    tag:'OWASP_CRS',\\\n    tag:'capec/1000/152/242',\\\n    ctl:auditLogParts=+E,\\\n    ver:'OWASP_CRS/3.4.0-dev',\\\n    severity:'CRITICAL',\\\n    multiMatch,\\\n    setvar:'tx.rce_score=+%{tx.critical_anomaly_score}',\\\n    setvar:'tx.inbound_anomaly_score_pl1=+%{tx.critical_anomaly_score}'\"\n",
        "paranoia_level": "1",
        "rule_id": "934",
        "sec_rule_id": "934100",
        "severity": "CRITICAL",
        "tags": [
            "application-multi",
            "language-javascript",
            "platform-multi",
            "attack-rce",
            "attack-injection-generic",
            "paranoia-level/1",
            "OWASP_CRS",
            "capec/1000/152/242"
        ]
    },
    {
        "comment": "# -=[ SSRF Attacks ]=-\n#\n# We provide only partial protection to SSRF. DNS Rebinding attacks needs\n# to be handled at application level, and even those might be difficult to catch.\n#\n# PL1 rules are based on common attacks on cloud providers, based on well-known URLs.\n#\n# -=[ References ]=-\n# https://highon.coffee/blog/ssrf-cheat-sheet/\n# https://cwe.mitre.org/data/definitions/918.html\n# https://capec.mitre.org/data/definitions/664.html)\n#\n# Preventing: https://cheatsheetseries.owasp.org/cheatsheets/Server_Side_Request_Forgery_Prevention_Cheat_Sheet.html\n",
        "content": "SecRule REQUEST_COOKIES|!REQUEST_COOKIES:/__utm/|REQUEST_COOKIES_NAMES|REQUEST_FILENAME|ARGS_NAMES|ARGS|XML:/* \"@pmFromFile ssrf.data\" \\\n    \"id:934110,\\\n    phase:2,\\\n    block,\\\n    capture,\\\n    t:none,\\\n    msg:'Possible Server Side Request Forgery (SSRF) Attack: Cloud provider metadata URL in Parameter',\\\n    logdata:'Matched Data: %{TX.0} found within %{MATCHED_VAR_NAME}: %{MATCHED_VAR}',\\\n    tag:'application-multi',\\\n    tag:'language-multi',\\\n    tag:'platform-multi',\\\n    tag:'attack-ssrf',\\\n    tag:'paranoia-level/1',\\\n    tag:'OWASP_CRS',\\\n    tag:'capec/1000/225/664',\\\n    ctl:auditLogParts=+E,\\\n    ver:'OWASP_CRS/3.4.0-dev',\\\n    severity:'CRITICAL',\\\n    setvar:'tx.rce_score=+%{tx.critical_anomaly_score}',\\\n    setvar:'tx.inbound_anomaly_score_pl1=+%{tx.critical_anomaly_score}'\"\n",
        "paranoia_level": "1",
        "rule_id": "934",
        "sec_rule_id": "934110",
        "severity": "CRITICAL",
        "tags": [
            "application-multi",
            "language-multi",
            "platform-multi",
            "attack-ssrf",
            "paranoia-level/1",
            "OWASP_CRS",
            "capec/1000/225/664"
        ]
    },
    {
        "comment": "# JavaScript prototype pollution injection attempts\n#\n# Example from https://hackerone.com/reports/869574 critical\n# vulnerability in the TypeORM library:\n# {\"text\":\"a\",\"title\":{\"__proto__\":{\"where\":{\"name\":\"sqlinjection\",\"where\":null}}}}\n#\n# Test cases are based on this list of payloads:\n# https://github.com/BlackFan/client-side-prototype-pollution/blob/master/README.md\n#\n# See also: https://cwe.mitre.org/data/definitions/1321.html\n#\n# Note: only server-based (not DOM-based) attacks are covered here.\n# Stricter sibling: 934131\n",
        "content": "SecRule REQUEST_COOKIES|!REQUEST_COOKIES:/__utm/|REQUEST_COOKIES_NAMES|ARGS_NAMES|ARGS|XML:/* \"@rx (?:__proto__|constructor\\s*(?:\\.|\\[)\\s*prototype)\" \\\n    \"id:934130,\\\n    phase:2,\\\n    block,\\\n    capture,\\\n    t:none,t:urlDecodeUni,t:base64Decode,\\\n    msg:'JavaScript Prototype Pollution',\\\n    logdata:'Matched Data: %{TX.0} found within %{MATCHED_VAR_NAME}: %{MATCHED_VAR}',\\\n    tag:'application-multi',\\\n    tag:'language-javascript',\\\n    tag:'platform-multi',\\\n    tag:'attack-rce',\\\n    tag:'attack-injection-generic',\\\n    tag:'paranoia-level/1',\\\n    tag:'OWASP_CRS',\\\n    tag:'capec/1/180/77',\\\n    ctl:auditLogParts=+E,\\\n    ver:'OWASP_CRS/3.4.0-dev',\\\n    severity:'CRITICAL',\\\n    multiMatch,\\\n    setvar:'tx.rce_score=+%{tx.critical_anomaly_score}',\\\n    setvar:'tx.inbound_anomaly_score_pl1=+%{tx.critical_anomaly_score}'\"\n",
        "paranoia_level": "1",
        "rule_id": "934",
        "sec_rule_id": "934130",
        "severity": "CRITICAL",
        "tags": [
            "application-multi",
            "language-javascript",
            "platform-multi",
            "attack-rce",
            "attack-injection-generic",
            "paranoia-level/1",
            "OWASP_CRS",
            "capec/1/180/77"
        ]
    },
    {
        "comment": "",
        "content": "SecRule TX:DETECTION_PARANOIA_LEVEL \"@lt 2\" \"id:934013,phase:1,pass,nolog,skipAfter:END-REQUEST-934-APPLICATION-ATTACK-GENERIC\"\n",
        "rule_id": "934",
        "sec_rule_id": "934013"
    },
    {
        "comment": "",
        "content": "SecRule TX:DETECTION_PARANOIA_LEVEL \"@lt 2\" \"id:934014,phase:2,pass,nolog,skipAfter:END-REQUEST-934-APPLICATION-ATTACK-GENERIC\"\n",
        "rule_id": "934",
        "sec_rule_id": "934014"
    },
    {
        "comment": "# -=[ SSRF Attacks ]=-\n#\n# PL2 rules adds SSRF capture for common evasion techniques.\n#\n# We add captures for these evasion techniques: (see source in util/regexp-assemble/data/regexp-934120.data)\n# http://425.510.425.510/ Dotted decimal with overflow (already covered by RFI rule 931100)\n# http://2852039166/ Dotless decimal - \\d{10}\n# http://7147006462/ Dotless decimal with overflow - \\d{10}\n# http://0xA9.0xFE.0xA9.0xFE/ Dotted hexadecimal - (?:0x[a-f0-9]{2}\\.){3}0x[a-f0-9]{2}\n# http://0xA9FEA9FE/ Dotless hexadecimal - 0x[a-f0-9]{8}\n# http://0x41414141A9FEA9FE/ Dotless hexadecimal with overflow - 0x[a-f0-9]{16}\n# http://0251.0376.0251.0376/ Dotted octal - Covered by the same below\n# http://0251.00376.000251.0000376/ Dotted octal with padding - (?:0{1,4}\\d{3}\\.){3}0{1,4}\\d{3})\n# http://169.254.43518/ - (?:\\d{1,3}\\.){2}\\.\\d{5}\n# http://169.16689662/ - \\d{1,3}\\.\\d{8}\n# http://[::ffff:a9fe:a9fe] IPV6 Compressed - IPv6 regex from https://ihateregex.io/expr/ipv6/, with [0-9] converted to \\d and with non-capturing groups (below)\n# http://[0:0:0:0:0:ffff:a9fe:a9fe] IPV6 Expanded -  (?:(?:[0-9a-fA-F]{1,4}:){7}[0-9a-fA-F]{1,4}|(?:[0-9a-fA-F]{1,4}:){1,7}:|(?:[0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|(?:[0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|(?:[0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|(?:[0-9a-fA-F]{1,4}:){1,3}(?::[0-9a-fA-F]{1,4}){1,4}|(?:[0-9a-fA-F]{1,4}:){1,2}(?::[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:(?:(?::[0-9a-fA-F]{1,4}){1,6})|:(?:(?::[0-9a-fA-F]{1,4}){1,7}|:)|fe80:(?::[0-9a-fA-F]{0,4}){0,4}%[0-9a-zA-Z]{1,}|::(ffff(?::0{1,4}){0,1}:){0,1}(?:(?:25[0-5]|(?:2[0-4]|1{0,1}\\d){0,1}\\d)\\.){3,3}(?:25[0-5]|(?:2[0-4]|1{0,1}\\d){0,1}\\d)|(?:[0-9a-fA-F]{1,4}:){1,4}:(?:(?:25[0-5]|(2[0-4]|1{0,1}\\d){0,1}\\d)\\.){3,3}(?:25[0-5]|(?:2[0-4]|1{0,1}\\d){0,1}\\d))\n# http://[0:0:0:0:0:ffff:169.254.169.254] IPV6/IPV4 - ((?:[0-9a-fA-F]{1,4}:){6}(?:(25[0-5]|(?:2[0-4]|1{0,1}\\d){0,1}\\d)\\.){3,3}(?:25[0-5]|(?:2[0-4]|1{0,1}\\d){0,1}\\d))\n# http://[::]\n# http://127.88.23.245:22/+&@google.com:80#+@google.com:80/ (already covered by RFI rule 931100)\n# http://127.88.23.245:22/?@google.com:80/ (already covered by RFI rule 931100)\n# http://127.88.23.245:22/#@www.google.com:80/ (already covered by RFI rule 931100)\n# http://google.com:80\\\\@127.88.23.245:22/ (already covered by RFI rule 931100)\n# http://google.com:80+&@127.88.23.245:22/#+@google.com:80/\n# http://google.com:80+&@google.com:80#+@127.88.23.245:22/\n#\n#   # Regular expression generated from util/regexp-assemble/data/934120.data.\n# To update the regular expression run the following shell script\n# (consult util/regexp-assemble/README.md for details):\n#   util/regexp-assemble/regexp-assemble.py update \n#\n",
        "content": "SecRule ARGS \"@rx (?i)(?:acap|bitcoin|blob|cap|cvs|svn|svn\\+ssh|turn|udp|vnc|xmpp|webcal|xri|dav|dns|feed|finger|h323|icap|ipp|ipps|jabber|mms|mumble|maven|nfs|rmi|rsync|rtmp|rtm|rtmfp|http|https|ftp|ftps|git|gopher|irc|fd|ldap|ldapi|ldaps|expect|netdoc|jar|ogg|tftp|dict|ssh2|ssh|imap|pop2|pop3|mailto|nntp|news|snews|snmp|smtp|sftp|telnet|s3|phar|sip|sips|smb)://(?:\\[(?:((?:[0-9a-f]{1,4}:){7,7}[a-f0-9]{1,4}|(?:[a-f0-9]{1,4}:){1,7}:|(?:[a-f0-9]{1,4}:){1,6}:[a-f0-9]{1,4}|(?:[a-f0-9]{1,4}:){1,5}(?::[a-f0-9]{1,4}){1,2}|(?:[a-f0-9]{1,4}:){1,4}(?::[a-f0-9]{1,4}){1,3}|(?:[a-f0-9]{1,4}:){1,3}(?::[a-f0-9]{1,4}){1,4}|(?:[a-f0-9]{1,4}:){1,2}(?::[a-f0-9]{1,4}){1,5}|[a-f0-9]{1,4}:(?:(?::[a-f0-9]{1,4}){1,6})|:(?:(?::[a-f0-9]{1,4}){1,7}|:)|fe80:(?::[a-f0-9]{0,4}){0,4}%[a-f0-9]{1,}|::(?:ffff(:0{1,4}){0,1}:){0,1}(?:(?:25[0-5]|(?:2[0-4]|1{0,1}[0-9]){0,1}[0-9])\\.){3,3}(?:25[0-5]|(?:2[0-4]|1{0,1}[0-9]){0,1}[0-9])|(?:[a-f0-9]{1,4}:){1,4}:(?:(25[0-5]|(?:2[0-4]|1{0,1}[0-9]){0,1}[0-9])\\.){3,3}(?:25[0-5]|(?:2[0-4]|1{0,1}[0-9]){0,1}[0-9]))|(?:(?:[0-9a-f]{1,4}:){6}(?:(25[0-5]|(?:2[0-4]|1{0,1}\\d){0,1}\\d)\\.){3,3}(?:25[0-5]|(?:2[0-4]|1{0,1}\\d){0,1}\\d))\\])|\\xe2(?:\\x93(?:\\x81\\xe2\\x93\\x84\\xe2\\x92\\xb8\\xe2\\x92\\xb6\\xe2\\x93\\x81\\xe2\\x92\\xbd\\xe2\\x93\\x84\\xe2\\x93\\x88\\xe2\\x93\\x89|\\x9b\\xe2\\x93\\x9e\\xe2\\x93\\x92\\xe2\\x93\\x90\\xe2\\x93\\x9b\\xe2\\x93\\x97\\xe2\\x93\\x9e\\xe2\\x93\\xa2\\xe2\\x93\\xa3)|\\x91\\xa0\\xe2\\x91(?:\\xa1\\xe2\\x91\\xa6|\\xa5\\xe2\\x91\\xa8)\\.)|[a-zA-Z][\\w\\-\\.]{1,255}:\\d{1,5}\\+&@(?:\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}|[a-zA-Z][\\w\\-\\.]{1,255}):\\d{1,5}\\/?#\\+@(?:\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}|[a-zA-Z][\\w\\-\\.]{1,255}):\\d{1,5}\\/?|(?:0x[a-f0-9]{2}\\.){3}0x[a-f0-9]{2}|(?:0{1,4}\\d{1,3}\\.){3}0{1,4}\\d{1,3}|\\d{1,3}\\.(?:\\d{1,3}\\.\\d{5}|\\d{8})|0x(?:[a-f0-9]{16}|[a-f0-9]{8})|\\d{10})\" \\\n    \"id:934120,\\\n    phase:2,\\\n    block,\\\n    capture,\\\n    t:none,\\\n    msg:'Possible Server Side Request Forgery (SSRF) Attack: URL Parameter using IP Address',\\\n    logdata:'Matched Data: %{TX.0} found within %{MATCHED_VAR_NAME}: %{MATCHED_VAR}',\\\n    tag:'application-multi',\\\n    tag:'language-multi',\\\n    tag:'platform-multi',\\\n    tag:'attack-ssrf',\\\n    tag:'paranoia-level/2',\\\n    tag:'OWASP_CRS',\\\n    tag:'capec/1000/225/664',\\\n    ctl:auditLogParts=+E,\\\n    ver:'OWASP_CRS/3.4.0-dev',\\\n    severity:'CRITICAL',\\\n    setvar:'tx.rce_score=+%{tx.critical_anomaly_score}',\\\n    setvar:'tx.inbound_anomaly_score_pl2=+%{tx.critical_anomaly_score}'\"\n",
        "paranoia_level": "2",
        "rule_id": "934",
        "sec_rule_id": "934120",
        "severity": "CRITICAL",
        "tags": [
            "application-multi",
            "language-multi",
            "platform-multi",
            "attack-ssrf",
            "paranoia-level/2",
            "OWASP_CRS",
            "capec/1000/225/664"
        ]
    },
    {
        "comment": "",
        "content": "SecRule REQUEST_COOKIES|!REQUEST_COOKIES:/__utm/|REQUEST_COOKIES_NAMES|ARGS_NAMES|ARGS|XML:/* \"@rx \\[\\s*constructor\\s*\\]\" \\\n    \"id:934131,\\\n    phase:2,\\\n    block,\\\n    capture,\\\n    t:none,t:urlDecodeUni,t:base64Decode,\\\n    msg:'JavaScript Prototype Pollution',\\\n    logdata:'Matched Data: %{TX.0} found within %{MATCHED_VAR_NAME}: %{MATCHED_VAR}',\\\n    tag:'application-multi',\\\n    tag:'language-javascript',\\\n    tag:'platform-multi',\\\n    tag:'attack-rce',\\\n    tag:'attack-injection-generic',\\\n    tag:'paranoia-level/2',\\\n    tag:'OWASP_CRS',\\\n    tag:'capec/1000/152/242',\\\n    ctl:auditLogParts=+E,\\\n    ver:'OWASP_CRS/3.4.0-dev',\\\n    severity:'CRITICAL',\\\n    multiMatch,\\\n    setvar:'tx.rce_score=+%{tx.critical_anomaly_score}',\\\n    setvar:'tx.inbound_anomaly_score_pl2=+%{tx.critical_anomaly_score}'\"\n",
        "paranoia_level": "2",
        "rule_id": "934",
        "sec_rule_id": "934131",
        "severity": "CRITICAL",
        "tags": [
            "application-multi",
            "language-javascript",
            "platform-multi",
            "attack-rce",
            "attack-injection-generic",
            "paranoia-level/2",
            "OWASP_CRS",
            "capec/1000/152/242"
        ]
    },
    {
        "comment": "",
        "content": "SecRule TX:DETECTION_PARANOIA_LEVEL \"@lt 3\" \"id:934015,phase:1,pass,nolog,skipAfter:END-REQUEST-934-APPLICATION-ATTACK-GENERIC\"\n",
        "rule_id": "934",
        "sec_rule_id": "934015"
    },
    {
        "comment": "",
        "content": "SecRule TX:DETECTION_PARANOIA_LEVEL \"@lt 3\" \"id:934016,phase:2,pass,nolog,skipAfter:END-REQUEST-934-APPLICATION-ATTACK-GENERIC\"\n",
        "rule_id": "934",
        "sec_rule_id": "934016"
    },
    {
        "comment": "#\n# -= Paranoia Level 3 =- (apply only when tx.detection_paranoia_level is sufficiently high: 3 or higher)\n#\n",
        "content": "SecRule TX:DETECTION_PARANOIA_LEVEL \"@lt 4\" \"id:934017,phase:1,pass,nolog,skipAfter:END-REQUEST-934-APPLICATION-ATTACK-GENERIC\"\n",
        "rule_id": "934",
        "sec_rule_id": "934017"
    },
    {
        "comment": "",
        "content": "SecRule TX:DETECTION_PARANOIA_LEVEL \"@lt 4\" \"id:934018,phase:2,pass,nolog,skipAfter:END-REQUEST-934-APPLICATION-ATTACK-GENERIC\"\n",
        "rule_id": "934",
        "sec_rule_id": "934018"
    },
    {
        "comment": "#\n# -= Paranoia Level 0 (empty) =- (apply unconditionally)\n#\n",
        "content": "SecRule TX:DETECTION_PARANOIA_LEVEL \"@lt 1\" \"id:941011,phase:1,pass,nolog,skipAfter:END-REQUEST-941-APPLICATION-ATTACK-XSS\"\n",
        "rule_id": "941",
        "sec_rule_id": "941011"
    },
    {
        "comment": "",
        "content": "SecRule TX:DETECTION_PARANOIA_LEVEL \"@lt 1\" \"id:941012,phase:2,pass,nolog,skipAfter:END-REQUEST-941-APPLICATION-ATTACK-XSS\"\n",
        "rule_id": "941",
        "sec_rule_id": "941012"
    },
    {
        "comment": "#\n# -=[ Libinjection - XSS Detection ]=-\n#\n# Ref: https://github.com/client9/libinjection\n# Ref: https://speakerdeck.com/ngalbreath/libinjection-from-sqli-to-xss\n#\n# -=[ Targets ]=-\n#\n# 941100: PL1 : REQUEST_COOKIES|!REQUEST_COOKIES:/__utm/|\n#               REQUEST_COOKIES_NAMES|REQUEST_HEADERS:User-Agent|\n#               ARGS_NAMES|ARGS|XML:/*\n#\n# 941101: PL2 : REQUEST_FILENAME|REQUEST_HEADERS:Referer\n#\n",
        "content": "SecRule REQUEST_COOKIES|!REQUEST_COOKIES:/__utm/|REQUEST_COOKIES_NAMES|REQUEST_HEADERS:User-Agent|ARGS_NAMES|ARGS|XML:/* \"@detectXSS\" \\\n    \"id:941100,\\\n    phase:2,\\\n    block,\\\n    t:none,t:utf8toUnicode,t:urlDecodeUni,t:htmlEntityDecode,t:jsDecode,t:cssDecode,t:removeNulls,\\\n    msg:'XSS Attack Detected via libinjection',\\\n    logdata:'Matched Data: XSS data found within %{MATCHED_VAR_NAME}: %{MATCHED_VAR}',\\\n    tag:'application-multi',\\\n    tag:'language-multi',\\\n    tag:'platform-multi',\\\n    tag:'attack-xss',\\\n    tag:'paranoia-level/1',\\\n    tag:'OWASP_CRS',\\\n    tag:'capec/1000/152/242',\\\n    ctl:auditLogParts=+E,\\\n    ver:'OWASP_CRS/3.4.0-dev',\\\n    severity:'CRITICAL',\\\n    setvar:'tx.xss_score=+%{tx.critical_anomaly_score}',\\\n    setvar:'tx.inbound_anomaly_score_pl1=+%{tx.critical_anomaly_score}'\"\n",
        "description": "XSS Attack Detected via libinjection",
        "paranoia_level": "1",
        "rule_id": "941",
        "sec_rule_id": "941100",
        "severity": "CRITICAL",
        "tags": [
            "application-multi",
            "language-multi",
            "platform-multi",
            "attack-xss",
            "paranoia-level/1",
            "OWASP_CRS",
            "capec/1000/152/242"
        ]
    },
    {
        "comment": "#\n# -=[ XSS Filters - Category 1 ]=-\n# http://xssplayground.net23.net/xssfilter.html\n# script tag based XSS vectors, e.g., <script> alert(1)</script>\n#\n",
        "content": "SecRule REQUEST_COOKIES|!REQUEST_COOKIES:/__utm/|REQUEST_COOKIES_NAMES|REQUEST_FILENAME|REQUEST_HEADERS:User-Agent|REQUEST_HEADERS:Referer|ARGS_NAMES|ARGS|XML:/* \"@rx (?i)<script[^>]*>[\\s\\S]*?\" \\\n    \"id:941110,\\\n    phase:2,\\\n    block,\\\n    capture,\\\n    t:none,t:utf8toUnicode,t:urlDecodeUni,t:htmlEntityDecode,t:jsDecode,t:cssDecode,t:removeNulls,\\\n    msg:'XSS Filter - Category 1: Script Tag Vector',\\\n    logdata:'Matched Data: %{TX.0} found within %{MATCHED_VAR_NAME}: %{MATCHED_VAR}',\\\n    tag:'application-multi',\\\n    tag:'language-multi',\\\n    tag:'platform-multi',\\\n    tag:'attack-xss',\\\n    tag:'paranoia-level/1',\\\n    tag:'OWASP_CRS',\\\n    tag:'capec/1000/152/242',\\\n    ctl:auditLogParts=+E,\\\n    ver:'OWASP_CRS/3.4.0-dev',\\\n    severity:'CRITICAL',\\\n    setvar:'tx.xss_score=+%{tx.critical_anomaly_score}',\\\n    setvar:'tx.inbound_anomaly_score_pl1=+%{tx.critical_anomaly_score}'\"\n",
        "description": "XSS Filter - Category 1: Script Tag Vector",
        "paranoia_level": "1",
        "rule_id": "941",
        "sec_rule_id": "941110",
        "severity": "CRITICAL",
        "tags": [
            "application-multi",
            "language-multi",
            "platform-multi",
            "attack-xss",
            "paranoia-level/1",
            "OWASP_CRS",
            "capec/1000/152/242"
        ]
    },
    {
        "comment": "#\n# -=[ XSS Filters - Category 3 ]=-\n#\n# Regular expression generated from util/regexp-assemble/data/941130.data.\n# To update the regular expression run the following shell script\n# (consult util/regexp-assemble/README.md for details):\n#   util/regexp-assemble/regexp-assemble.py update 941130\n#\n",
        "content": "SecRule REQUEST_COOKIES|!REQUEST_COOKIES:/__utm/|REQUEST_COOKIES_NAMES|REQUEST_HEADERS:User-Agent|ARGS_NAMES|ARGS|XML:/* \"@rx (?i)[\\s\\S](?:\\b(?:x(?:link:href|html|mlns)|data:text\\/html|pattern\\b.*?=|formaction)|!ENTITY\\s+(?:\\S+|%\\s+\\S+)\\s+(?:PUBLIC|SYSTEM)|;base64|@import)\\b\" \\\n    \"id:941130,\\\n    phase:2,\\\n    block,\\\n    capture,\\\n    t:none,t:utf8toUnicode,t:urlDecodeUni,t:htmlEntityDecode,t:jsDecode,t:cssDecode,t:removeNulls,\\\n    msg:'XSS Filter - Category 3: Attribute Vector',\\\n    logdata:'Matched Data: %{TX.0} found within %{MATCHED_VAR_NAME}: %{MATCHED_VAR}',\\\n    tag:'application-multi',\\\n    tag:'language-multi',\\\n    tag:'platform-multi',\\\n    tag:'attack-xss',\\\n    tag:'paranoia-level/1',\\\n    tag:'OWASP_CRS',\\\n    tag:'capec/1000/152/242',\\\n    ctl:auditLogParts=+E,\\\n    ver:'OWASP_CRS/3.4.0-dev',\\\n    severity:'CRITICAL',\\\n    setvar:'tx.xss_score=+%{tx.critical_anomaly_score}',\\\n    setvar:'tx.inbound_anomaly_score_pl1=+%{tx.critical_anomaly_score}'\"\n",
        "description": "XSS Filter - Category 3: Attribute Vector",
        "paranoia_level": "1",
        "rule_id": "941",
        "sec_rule_id": "941130",
        "severity": "CRITICAL",
        "tags": [
            "application-multi",
            "language-multi",
            "platform-multi",
            "attack-xss",
            "paranoia-level/1",
            "OWASP_CRS",
            "capec/1000/152/242"
        ]
    },
    {
        "comment": "#\n# -=[ XSS Filters - Category 4 ]=-\n# XSS vectors making use of javascript uri and tags, e.g., <p style=\"background:url(javascript:alert(1))\">\n# https://portswigger.net/web-security/cross-site-scripting/cheat-sheet#css-expressions-ie7\n# https://portswigger.net/web-security/cross-site-scripting/cheat-sheet#behaviors-for-older-modes-of-ie\n# examples: https://regex101.com/r/FFEpsh/1\n#\n",
        "content": "SecRule REQUEST_COOKIES|!REQUEST_COOKIES:/__utm/|REQUEST_COOKIES_NAMES|REQUEST_HEADERS:User-Agent|REQUEST_HEADERS:Referer|ARGS_NAMES|ARGS|XML:/* \"@rx (?i)[a-z]+=(?:[^:=]+:.+;)*?[^:=]+:url\\(javascript\" \\\n    \"id:941140,\\\n    phase:2,\\\n    block,\\\n    capture,\\\n    t:none,t:utf8toUnicode,t:urlDecodeUni,t:htmlEntityDecode,t:jsDecode,t:cssDecode,t:removeNulls,t:removeWhitespace,\\\n    msg:'XSS Filter - Category 4: Javascript URI Vector',\\\n    logdata:'Matched Data: %{TX.0} found within %{MATCHED_VAR_NAME}: %{MATCHED_VAR}',\\\n    tag:'application-multi',\\\n    tag:'language-multi',\\\n    tag:'platform-multi',\\\n    tag:'attack-xss',\\\n    tag:'paranoia-level/1',\\\n    tag:'OWASP_CRS',\\\n    tag:'capec/1000/152/242',\\\n    ctl:auditLogParts=+E,\\\n    ver:'OWASP_CRS/3.4.0-dev',\\\n    severity:'CRITICAL',\\\n    setvar:'tx.xss_score=+%{tx.critical_anomaly_score}',\\\n    setvar:'tx.inbound_anomaly_score_pl1=+%{tx.critical_anomaly_score}'\"\n",
        "description": "XSS Filter - Category 4: Javascript URI Vector",
        "paranoia_level": "1",
        "rule_id": "941",
        "sec_rule_id": "941140",
        "severity": "CRITICAL",
        "tags": [
            "application-multi",
            "language-multi",
            "platform-multi",
            "attack-xss",
            "paranoia-level/1",
            "OWASP_CRS",
            "capec/1000/152/242"
        ]
    },
    {
        "comment": "#\n# -=[ NoScript XSS Filters ]=-\n# Ref: http://noscript.net/\n#\n# [NoScript InjectionChecker] HTML injection\n#\n# Regular expression generated from util/regexp-assemble/data/941160.data.\n# To update the regular expression run the following shell script\n# (consult util/regexp-assemble/README.md for details):\n#   util/regexp-assemble/regexp-assemble.py update 941160\n#\n",
        "content": "SecRule REQUEST_COOKIES|!REQUEST_COOKIES:/__utm/|REQUEST_COOKIES_NAMES|REQUEST_HEADERS:User-Agent|REQUEST_HEADERS:Referer|ARGS_NAMES|ARGS|XML:/* \"@rx (?i)(?:(?:<\\w[\\s\\S]*[\\s/]|['\\\"](?:[\\s\\S]*[\\s/])?)(?:on(?:d(?:e(?:vice(?:(?:orienta|mo)tion|proximity|found|light)|livery(?:success|error)|activate)|r(?:ag(?:e(?:n(?:ter|d)|xit)|(?:gestur|leav)e|start|drop|over)|op)|i(?:s(?:c(?:hargingtimechange|onnect(?:ing|ed))|abled)|aling)|ata(?:setc(?:omplete|hanged)|(?:availabl|chang)e|error)|urationchange|ownloading|blclick)|Moz(?:M(?:agnifyGesture(?:Update|Start)?|ouse(?:PixelScroll|Hittest))|S(?:wipeGesture(?:Update|Start|End)?|crolledAreaChanged)|(?:(?:Press)?TapGestur|BeforeResiz)e|EdgeUI(?:C(?:omplet|ancel)|Start)ed|RotateGesture(?:Update|Start)?|A(?:udioAvailable|fterPaint))|c(?:o(?:m(?:p(?:osition(?:update|start|end)|lete)|mand(?:update)?)|n(?:t(?:rolselect|extmenu)|nect(?:ing|ed))|py)|a(?:(?:llschang|ch)ed|nplay(?:through)?|rdstatechange)|h(?:(?:arging(?:time)?ch)?ange|ecking)|(?:fstate|ell)change|u(?:echange|t)|l(?:ick|ose))|s(?:t(?:a(?:t(?:uschanged|echange)|lled|rt)|k(?:sessione|comma)nd|op)|e(?:ek(?:complete|ing|ed)|(?:lec(?:tstar)?)?t|n(?:ding|t))|(?:peech|ound)(?:start|end)|u(?:ccess|spend|bmit)|croll|how)|m(?:o(?:z(?:(?:pointerlock|fullscreen)(?:change|error)|(?:orientation|time)change|network(?:down|up)load)|use(?:(?:lea|mo)ve|o(?:ver|ut)|enter|wheel|down|up)|ve(?:start|end)?)|essage|ark)|a(?:n(?:imation(?:iteration|start|end)|tennastatechange)|fter(?:(?:scriptexecu|upda)te|print)|udio(?:process|start|end)|d(?:apteradded|dtrack)|ctivate|lerting|bort)|b(?:e(?:fore(?:(?:(?:de)?activa|scriptexecu)te|u(?:nload|pdate)|p(?:aste|rint)|c(?:opy|ut)|editfocus)|gin(?:Event)?)|oun(?:dary|ce)|l(?:ocked|ur)|roadcast|usy)|DOM(?:Node(?:Inserted(?:IntoDocument)?|Removed(?:FromDocument)?)|(?:CharacterData|Subtree)Modified|A(?:ttrModified|ctivate)|Focus(?:Out|In)|MouseScroll)|r(?:e(?:s(?:u(?:m(?:ing|e)|lt)|ize|et)|adystatechange|pea(?:tEven)?t|movetrack|trieving|ceived)|ow(?:s(?:inserted|delete)|e(?:nter|xit))|atechange)|p(?:op(?:up(?:hid(?:den|ing)|show(?:ing|n))|state)|a(?:ge(?:hide|show)|(?:st|us)e|int)|ro(?:pertychange|gress)|lay(?:ing)?)|t(?:ouch(?:(?:lea|mo)ve|en(?:ter|d)|cancel|start)|ransition(?:cancel|end|run)|ime(?:update|out)|ext)|u(?:s(?:erproximity|sdreceived)|p(?:gradeneeded|dateready)|n(?:derflow|load))|f(?:o(?:rm(?:change|input)|cus(?:out|in)?)|i(?:lterchange|nish)|ailed)|l(?:o(?:ad(?:e(?:d(?:meta)?data|nd)|start)|secapture)|evelchange|y)|g(?:amepad(?:(?:dis)?connected|button(?:down|up)|axismove)|et)|e(?:n(?:d(?:Event|ed)?|abled|ter)|rror(?:update)?|mptied|xit)|i(?:cc(?:cardlockerror|infochange)|n(?:coming|valid|put))|o(?:(?:(?:ff|n)lin|bsolet)e|verflow(?:changed)?|pen)|SVG(?:(?:Unl|L)oad|Resize|Scroll|Abort|Error|Zoom)|h(?:e(?:adphoneschange|l[dp])|ashchange|olding)|v(?:o(?:lum|ic)e|ersion)change|w(?:a(?:it|rn)ing|heel)|key(?:press|down|up)|(?:AppComman|Loa)d|no(?:update|match)|Request|zoom)|s(?:tyle|rc)|background|formaction|lowsrc|ping)[\\s\\x08]*?=|<[^\\w<>]*(?:[^<>\\\"'\\s]*:)?[^\\w<>]*\\W*?(?:(?:a\\W*?(?:n\\W*?i\\W*?m\\W*?a\\W*?t\\W*?e|p\\W*?p\\W*?l\\W*?e\\W*?t|u\\W*?d\\W*?i\\W*?o)|b\\W*?(?:i\\W*?n\\W*?d\\W*?i\\W*?n\\W*?g\\W*?s|a\\W*?s\\W*?e|o\\W*?d\\W*?y)|i?\\W*?f\\W*?r\\W*?a\\W*?m\\W*?e|o\\W*?b\\W*?j\\W*?e\\W*?c\\W*?t|i\\W*?m\\W*?a?\\W*?g\\W*?e?|e\\W*?m\\W*?b\\W*?e\\W*?d|p\\W*?a\\W*?r\\W*?a\\W*?m|v\\W*?i\\W*?d\\W*?e\\W*?o|l\\W*?i\\W*?n\\W*?k)[^>\\w]|s\\W*?(?:c\\W*?r\\W*?i\\W*?p\\W*?t|t\\W*?y\\W*?l\\W*?e|e\\W*?t[^>\\w]|v\\W*?g)|m\\W*?(?:a\\W*?r\\W*?q\\W*?u\\W*?e\\W*?e|e\\W*?t\\W*?a[^>\\w])|f\\W*?o\\W*?r\\W*?m))\" \\\n    \"id:941160,\\\n    phase:2,\\\n    block,\\\n    capture,\\\n    t:none,t:utf8toUnicode,t:urlDecodeUni,t:htmlEntityDecode,t:jsDecode,t:cssDecode,t:removeNulls,\\\n    msg:'NoScript XSS InjectionChecker: HTML Injection',\\\n    logdata:'Matched Data: %{TX.0} found within %{MATCHED_VAR_NAME}: %{MATCHED_VAR}',\\\n    tag:'application-multi',\\\n    tag:'language-multi',\\\n    tag:'platform-multi',\\\n    tag:'attack-xss',\\\n    tag:'paranoia-level/1',\\\n    tag:'OWASP_CRS',\\\n    tag:'capec/1000/152/242',\\\n    ctl:auditLogParts=+E,\\\n    ver:'OWASP_CRS/3.4.0-dev',\\\n    severity:'CRITICAL',\\\n    setvar:'tx.xss_score=+%{tx.critical_anomaly_score}',\\\n    setvar:'tx.inbound_anomaly_score_pl1=+%{tx.critical_anomaly_score}'\"\n",
        "description": "NoScript XSS InjectionChecker: HTML Injection",
        "paranoia_level": "1",
        "rule_id": "941",
        "sec_rule_id": "941160",
        "severity": "CRITICAL",
        "tags": [
            "application-multi",
            "language-multi",
            "platform-multi",
            "attack-xss",
            "paranoia-level/1",
            "OWASP_CRS",
            "capec/1000/152/242"
        ]
    },
    {
        "comment": "#\n# [NoScript InjectionChecker] Attributes injection\n#\n",
        "content": "SecRule REQUEST_COOKIES|!REQUEST_COOKIES:/__utm/|REQUEST_COOKIES_NAMES|REQUEST_HEADERS:User-Agent|REQUEST_HEADERS:Referer|ARGS_NAMES|ARGS|XML:/* \"@rx (?i)(?:\\W|^)(?:javascript:(?:[\\s\\S]+[=\\x5c\\(\\[\\.<]|[\\s\\S]*?(?:\\bname\\b|\\x5c[ux]\\d))|data:(?:(?:[a-z]\\w+/\\w[\\w+-]+\\w)?[;,]|[\\s\\S]*?;[\\s\\S]*?\\b(?:base64|charset=)|[\\s\\S]*?,[\\s\\S]*?<[\\s\\S]*?\\w[\\s\\S]*?>))|@\\W*?i\\W*?m\\W*?p\\W*?o\\W*?r\\W*?t\\W*?(?:/\\*[\\s\\S]*?)?(?:[\\\"']|\\W*?u\\W*?r\\W*?l[\\s\\S]*?\\()|[^-]*?-\\W*?m\\W*?o\\W*?z\\W*?-\\W*?b\\W*?i\\W*?n\\W*?d\\W*?i\\W*?n\\W*?g[^:]*?:\\W*?u\\W*?r\\W*?l[\\s\\S]*?\\(\" \\\n    \"id:941170,\\\n    phase:2,\\\n    block,\\\n    capture,\\\n    t:none,t:utf8toUnicode,t:urlDecodeUni,t:htmlEntityDecode,t:jsDecode,t:cssDecode,t:removeNulls,\\\n    msg:'NoScript XSS InjectionChecker: Attribute Injection',\\\n    logdata:'Matched Data: %{TX.0} found within %{MATCHED_VAR_NAME}: %{MATCHED_VAR}',\\\n    tag:'application-multi',\\\n    tag:'language-multi',\\\n    tag:'platform-multi',\\\n    tag:'attack-xss',\\\n    tag:'paranoia-level/1',\\\n    tag:'OWASP_CRS',\\\n    tag:'capec/1000/152/242',\\\n    ctl:auditLogParts=+E,\\\n    ver:'OWASP_CRS/3.4.0-dev',\\\n    severity:'CRITICAL',\\\n    setvar:'tx.xss_score=+%{tx.critical_anomaly_score}',\\\n    setvar:'tx.inbound_anomaly_score_pl1=+%{tx.critical_anomaly_score}'\"\n",
        "description": "NoScript XSS InjectionChecker: Attribute Injection",
        "paranoia_level": "1",
        "rule_id": "941",
        "sec_rule_id": "941170",
        "severity": "CRITICAL",
        "tags": [
            "application-multi",
            "language-multi",
            "platform-multi",
            "attack-xss",
            "paranoia-level/1",
            "OWASP_CRS",
            "capec/1000/152/242"
        ]
    },
    {
        "comment": "#\n# [Deny List Keywords from Node-Validator]\n# https://raw.github.com/chriso/node-validator/master/validator.js\n# This rule has a stricter sibling 941181 (PL2) that covers the additional payload \"-->\"\n#\n",
        "content": "SecRule REQUEST_COOKIES|!REQUEST_COOKIES:/__utm/|REQUEST_COOKIES_NAMES|ARGS_NAMES|ARGS|XML:/* \"@pm document.cookie document.write .parentnode .innerhtml window.location -moz-binding <!-- <![cdata[\" \\\n    \"id:941180,\\\n    phase:2,\\\n    block,\\\n    capture,\\\n    t:none,t:utf8toUnicode,t:urlDecodeUni,t:htmlEntityDecode,t:jsDecode,t:cssDecode,t:removeNulls,\\\n    msg:'Node-Validator Deny List Keywords',\\\n    logdata:'Matched Data: %{TX.0} found within %{MATCHED_VAR_NAME}: %{MATCHED_VAR}',\\\n    tag:'application-multi',\\\n    tag:'language-multi',\\\n    tag:'platform-multi',\\\n    tag:'attack-xss',\\\n    tag:'paranoia-level/1',\\\n    tag:'OWASP_CRS',\\\n    tag:'capec/1000/152/242',\\\n    ctl:auditLogParts=+E,\\\n    ver:'OWASP_CRS/3.4.0-dev',\\\n    severity:'CRITICAL',\\\n    setvar:'tx.xss_score=+%{tx.critical_anomaly_score}',\\\n    setvar:'tx.inbound_anomaly_score_pl1=+%{tx.critical_anomaly_score}'\"\n",
        "description": "Node-Validator Blacklist Keywords",
        "paranoia_level": "1",
        "rule_id": "941",
        "sec_rule_id": "941180",
        "severity": "CRITICAL",
        "tags": [
            "application-multi",
            "language-multi",
            "platform-multi",
            "attack-xss",
            "paranoia-level/1",
            "OWASP_CRS",
            "capec/1000/152/242"
        ]
    },
    {
        "comment": "#\n# -=[ XSS Filters from IE ]=-\n# Ref: http://blogs.technet.com/srd/archive/2008/08/18/ie-8-xss-filter-architecture-implementation.aspx\n# Ref: http://xss.cx/examples/ie/internet-exploror-ie9-xss-filter-rules-example-regexp-mshtmldll.txt\n#\n",
        "content": "SecRule REQUEST_COOKIES|!REQUEST_COOKIES:/__utm/|REQUEST_COOKIES_NAMES|ARGS_NAMES|ARGS|XML:/* \"@rx (?i:<style.*?>.*?(?:@[i\\x5c]|(?:[:=]|&#x?0*(?:58|3A|61|3D);?).*?(?:[(\\x5c]|&#x?0*(?:40|28|92|5C);?)))\" \\\n    \"id:941190,\\\n    phase:2,\\\n    block,\\\n    capture,\\\n    t:none,t:utf8toUnicode,t:urlDecodeUni,t:htmlEntityDecode,t:jsDecode,t:cssDecode,t:removeNulls,\\\n    msg:'IE XSS Filters - Attack Detected',\\\n    logdata:'Matched Data: %{TX.0} found within %{MATCHED_VAR_NAME}: %{MATCHED_VAR}',\\\n    tag:'application-multi',\\\n    tag:'language-multi',\\\n    tag:'platform-multi',\\\n    tag:'attack-xss',\\\n    tag:'paranoia-level/1',\\\n    tag:'OWASP_CRS',\\\n    tag:'capec/1000/152/242',\\\n    ctl:auditLogParts=+E,\\\n    ver:'OWASP_CRS/3.4.0-dev',\\\n    severity:'CRITICAL',\\\n    setvar:'tx.xss_score=+%{tx.critical_anomaly_score}',\\\n    setvar:'tx.inbound_anomaly_score_pl1=+%{tx.critical_anomaly_score}'\"\n",
        "description": "IE XSS Filters - Attack Detected.",
        "paranoia_level": "1",
        "rule_id": "941",
        "sec_rule_id": "941190",
        "severity": "CRITICAL",
        "tags": [
            "application-multi",
            "language-multi",
            "platform-multi",
            "attack-xss",
            "paranoia-level/1",
            "OWASP_CRS",
            "capec/1000/152/242"
        ]
    },
    {
        "comment": "",
        "content": "SecRule REQUEST_COOKIES|!REQUEST_COOKIES:/__utm/|REQUEST_COOKIES_NAMES|ARGS_NAMES|ARGS|XML:/* \"@rx (?i:<.*[:]?vmlframe.*?[\\s/+]*?src[\\s/+]*=)\" \\\n    \"id:941200,\\\n    phase:2,\\\n    block,\\\n    capture,\\\n    t:none,t:utf8toUnicode,t:urlDecodeUni,t:htmlEntityDecode,t:jsDecode,t:cssDecode,t:removeNulls,\\\n    msg:'IE XSS Filters - Attack Detected',\\\n    logdata:'Matched Data: %{TX.0} found within %{MATCHED_VAR_NAME}: %{MATCHED_VAR}',\\\n    tag:'application-multi',\\\n    tag:'language-multi',\\\n    tag:'platform-multi',\\\n    tag:'attack-xss',\\\n    tag:'paranoia-level/1',\\\n    tag:'OWASP_CRS',\\\n    tag:'capec/1000/152/242',\\\n    ctl:auditLogParts=+E,\\\n    ver:'OWASP_CRS/3.4.0-dev',\\\n    severity:'CRITICAL',\\\n    setvar:'tx.xss_score=+%{tx.critical_anomaly_score}',\\\n    setvar:'tx.inbound_anomaly_score_pl1=+%{tx.critical_anomaly_score}'\"\n",
        "description": "IE XSS Filters - Attack Detected.",
        "paranoia_level": "1",
        "rule_id": "941",
        "sec_rule_id": "941200",
        "severity": "CRITICAL",
        "tags": [
            "application-multi",
            "language-multi",
            "platform-multi",
            "attack-xss",
            "paranoia-level/1",
            "OWASP_CRS",
            "capec/1000/152/242"
        ]
    },
    {
        "comment": "",
        "content": "SecRule REQUEST_COOKIES|!REQUEST_COOKIES:/__utm/|REQUEST_COOKIES_NAMES|ARGS_NAMES|ARGS|XML:/* \"@rx (?i:(?:j|&#x?0*(?:74|4A|106|6A);?)(?:\\t|&(?:#x?0*(?:9|13|10|A|D);?|tab;|newline;))*(?:a|&#x?0*(?:65|41|97|61);?)(?:\\t|&(?:#x?0*(?:9|13|10|A|D);?|tab;|newline;))*(?:v|&#x?0*(?:86|56|118|76);?)(?:\\t|&(?:#x?0*(?:9|13|10|A|D);?|tab;|newline;))*(?:a|&#x?0*(?:65|41|97|61);?)(?:\\t|&(?:#x?0*(?:9|13|10|A|D);?|tab;|newline;))*(?:s|&#x?0*(?:83|53|115|73);?)(?:\\t|&(?:#x?0*(?:9|13|10|A|D);?|tab;|newline;))*(?:c|&#x?0*(?:67|43|99|63);?)(?:\\t|&(?:#x?0*(?:9|13|10|A|D);?|tab;|newline;))*(?:r|&#x?0*(?:82|52|114|72);?)(?:\\t|&(?:#x?0*(?:9|13|10|A|D);?|tab;|newline;))*(?:i|&#x?0*(?:73|49|105|69);?)(?:\\t|&(?:#x?0*(?:9|13|10|A|D);?|tab;|newline;))*(?:p|&#x?0*(?:80|50|112|70);?)(?:\\t|&(?:#x?0*(?:9|13|10|A|D);?|tab;|newline;))*(?:t|&#x?0*(?:84|54|116|74);?)(?:\\t|&(?:#x?0*(?:9|13|10|A|D);?|tab;|newline;))*(?::|&(?:#x?0*(?:58|3A);?|colon;)).)\" \\\n    \"id:941210,\\\n    phase:2,\\\n    block,\\\n    capture,\\\n    t:none,t:utf8toUnicode,t:urlDecodeUni,t:htmlEntityDecode,t:jsDecode,t:cssDecode,t:removeNulls,\\\n    msg:'IE XSS Filters - Attack Detected',\\\n    logdata:'Matched Data: %{TX.0} found within %{MATCHED_VAR_NAME}: %{MATCHED_VAR}',\\\n    tag:'application-multi',\\\n    tag:'language-multi',\\\n    tag:'platform-multi',\\\n    tag:'attack-xss',\\\n    tag:'paranoia-level/1',\\\n    tag:'OWASP_CRS',\\\n    tag:'capec/1000/152/242',\\\n    ctl:auditLogParts=+E,\\\n    ver:'OWASP_CRS/3.4.0-dev',\\\n    severity:'CRITICAL',\\\n    setvar:'tx.xss_score=+%{tx.critical_anomaly_score}',\\\n    setvar:'tx.inbound_anomaly_score_pl1=+%{tx.critical_anomaly_score}'\"\n",
        "description": "IE XSS Filters - Attack Detected.",
        "paranoia_level": "1",
        "rule_id": "941",
        "sec_rule_id": "941210",
        "severity": "CRITICAL",
        "tags": [
            "application-multi",
            "language-multi",
            "platform-multi",
            "attack-xss",
            "paranoia-level/1",
            "OWASP_CRS",
            "capec/1000/152/242"
        ]
    },
    {
        "comment": "",
        "content": "SecRule REQUEST_COOKIES|!REQUEST_COOKIES:/__utm/|REQUEST_COOKIES_NAMES|ARGS_NAMES|ARGS|XML:/* \"@rx (?i:(?:v|&#x?0*(?:86|56|118|76);?)(?:\\t|&(?:#x?0*(?:9|13|10|A|D);?|tab;|newline;))*(?:b|&#x?0*(?:66|42|98|62);?)(?:\\t|&(?:#x?0*(?:9|13|10|A|D);?|tab;|newline;))*(?:s|&#x?0*(?:83|53|115|73);?)(?:\\t|&(?:#x?0*(?:9|13|10|A|D);?|tab;|newline;))*(?:c|&#x?0*(?:67|43|99|63);?)(?:\\t|&(?:#x?0*(?:9|13|10|A|D);?|tab;|newline;))*(?:r|&#x?0*(?:82|52|114|72);?)(?:\\t|&(?:#x?0*(?:9|13|10|A|D);?|tab;|newline;))*(?:i|&#x?0*(?:73|49|105|69);?)(?:\\t|&(?:#x?0*(?:9|13|10|A|D);?|tab;|newline;))*(?:p|&#x?0*(?:80|50|112|70);?)(?:\\t|&(?:#x?0*(?:9|13|10|A|D);?|tab;|newline;))*(?:t|&#x?0*(?:84|54|116|74);?)(?:\\t|&(?:#x?0*(?:9|13|10|A|D);?|tab;|newline;))*(?::|&(?:#x?0*(?:58|3A);?|colon;)).)\" \\\n    \"id:941220,\\\n    phase:2,\\\n    block,\\\n    capture,\\\n    t:none,t:utf8toUnicode,t:urlDecodeUni,t:htmlEntityDecode,t:jsDecode,t:cssDecode,t:removeNulls,\\\n    msg:'IE XSS Filters - Attack Detected',\\\n    logdata:'Matched Data: %{TX.0} found within %{MATCHED_VAR_NAME}: %{MATCHED_VAR}',\\\n    tag:'application-multi',\\\n    tag:'language-multi',\\\n    tag:'platform-multi',\\\n    tag:'attack-xss',\\\n    tag:'paranoia-level/1',\\\n    tag:'OWASP_CRS',\\\n    tag:'capec/1000/152/242',\\\n    ctl:auditLogParts=+E,\\\n    ver:'OWASP_CRS/3.4.0-dev',\\\n    severity:'CRITICAL',\\\n    setvar:'tx.xss_score=+%{tx.critical_anomaly_score}',\\\n    setvar:'tx.inbound_anomaly_score_pl1=+%{tx.critical_anomaly_score}'\"\n",
        "description": "IE XSS Filters - Attack Detected.",
        "paranoia_level": "1",
        "rule_id": "941",
        "sec_rule_id": "941220",
        "severity": "CRITICAL",
        "tags": [
            "application-multi",
            "language-multi",
            "platform-multi",
            "attack-xss",
            "paranoia-level/1",
            "OWASP_CRS",
            "capec/1000/152/242"
        ]
    },
    {
        "comment": "",
        "content": "SecRule REQUEST_COOKIES|!REQUEST_COOKIES:/__utm/|REQUEST_COOKIES_NAMES|ARGS_NAMES|ARGS|XML:/* \"@rx (?i)<EMBED[\\s/+].*?(?:src|type).*?=\" \\\n    \"id:941230,\\\n    phase:2,\\\n    block,\\\n    capture,\\\n    t:none,t:utf8toUnicode,t:urlDecodeUni,t:htmlEntityDecode,t:jsDecode,t:cssDecode,t:removeNulls,\\\n    msg:'IE XSS Filters - Attack Detected',\\\n    logdata:'Matched Data: %{TX.0} found within %{MATCHED_VAR_NAME}: %{MATCHED_VAR}',\\\n    tag:'application-multi',\\\n    tag:'language-multi',\\\n    tag:'platform-multi',\\\n    tag:'attack-xss',\\\n    tag:'paranoia-level/1',\\\n    tag:'OWASP_CRS',\\\n    tag:'capec/1000/152/242',\\\n    ctl:auditLogParts=+E,\\\n    ver:'OWASP_CRS/3.4.0-dev',\\\n    severity:'CRITICAL',\\\n    setvar:'tx.xss_score=+%{tx.critical_anomaly_score}',\\\n    setvar:'tx.inbound_anomaly_score_pl1=+%{tx.critical_anomaly_score}'\"\n",
        "description": "IE XSS Filters - Attack Detected.",
        "paranoia_level": "1",
        "rule_id": "941",
        "sec_rule_id": "941230",
        "severity": "CRITICAL",
        "tags": [
            "application-multi",
            "language-multi",
            "platform-multi",
            "attack-xss",
            "paranoia-level/1",
            "OWASP_CRS",
            "capec/1000/152/242"
        ]
    },
    {
        "comment": "",
        "content": "SecRule REQUEST_COOKIES|!REQUEST_COOKIES:/__utm/|REQUEST_COOKIES_NAMES|ARGS_NAMES|ARGS|XML:/* \"@rx <[?]?import[\\s/+\\S]*?implementation[\\s/+]*?=\" \\\n    \"id:941240,\\\n    phase:2,\\\n    block,\\\n    capture,\\\n    t:none,t:utf8toUnicode,t:urlDecodeUni,t:htmlEntityDecode,t:jsDecode,t:cssDecode,t:lowercase,t:removeNulls,\\\n    msg:'IE XSS Filters - Attack Detected',\\\n    logdata:'Matched Data: %{TX.0} found within %{MATCHED_VAR_NAME}: %{MATCHED_VAR}',\\\n    tag:'application-multi',\\\n    tag:'language-multi',\\\n    tag:'platform-multi',\\\n    tag:'attack-xss',\\\n    tag:'paranoia-level/1',\\\n    tag:'OWASP_CRS',\\\n    tag:'capec/1000/152/242',\\\n    ctl:auditLogParts=+E,\\\n    ver:'OWASP_CRS/3.4.0-dev',\\\n    severity:'CRITICAL',\\\n    setvar:'tx.xss_score=+%{tx.critical_anomaly_score}',\\\n    setvar:'tx.inbound_anomaly_score_pl1=+%{tx.critical_anomaly_score}'\"\n",
        "description": "IE XSS Filters - Attack Detected.",
        "paranoia_level": "1",
        "rule_id": "941",
        "sec_rule_id": "941240",
        "severity": "CRITICAL",
        "tags": [
            "application-multi",
            "language-multi",
            "platform-multi",
            "attack-xss",
            "paranoia-level/1",
            "OWASP_CRS",
            "capec/1000/152/242"
        ]
    },
    {
        "comment": "",
        "content": "SecRule REQUEST_COOKIES|!REQUEST_COOKIES:/__utm/|REQUEST_COOKIES_NAMES|ARGS_NAMES|ARGS|XML:/* \"@rx (?i:<META[\\s/+].*?http-equiv[\\s/+]*=[\\s/+]*[\\\"'`]?(?:(?:c|&#x?0*(?:67|43|99|63);?)|(?:r|&#x?0*(?:82|52|114|72);?)|(?:s|&#x?0*(?:83|53|115|73);?)))\" \\\n    \"id:941250,\\\n    phase:2,\\\n    block,\\\n    capture,\\\n    t:none,t:utf8toUnicode,t:urlDecodeUni,t:htmlEntityDecode,t:jsDecode,t:cssDecode,t:removeNulls,\\\n    msg:'IE XSS Filters - Attack Detected',\\\n    logdata:'Matched Data: %{TX.0} found within %{MATCHED_VAR_NAME}: %{MATCHED_VAR}',\\\n    tag:'application-multi',\\\n    tag:'language-multi',\\\n    tag:'platform-multi',\\\n    tag:'attack-xss',\\\n    tag:'paranoia-level/1',\\\n    tag:'OWASP_CRS',\\\n    tag:'capec/1000/152/242',\\\n    ctl:auditLogParts=+E,\\\n    ver:'OWASP_CRS/3.4.0-dev',\\\n    severity:'CRITICAL',\\\n    setvar:'tx.xss_score=+%{tx.critical_anomaly_score}',\\\n    setvar:'tx.inbound_anomaly_score_pl1=+%{tx.critical_anomaly_score}'\"\n",
        "description": "IE XSS Filters - Attack Detected.",
        "paranoia_level": "1",
        "rule_id": "941",
        "sec_rule_id": "941250",
        "severity": "CRITICAL",
        "tags": [
            "application-multi",
            "language-multi",
            "platform-multi",
            "attack-xss",
            "paranoia-level/1",
            "OWASP_CRS",
            "capec/1000/152/242"
        ]
    },
    {
        "comment": "",
        "content": "SecRule REQUEST_COOKIES|!REQUEST_COOKIES:/__utm/|REQUEST_COOKIES_NAMES|ARGS_NAMES|ARGS|XML:/* \"@rx (?i:<META[\\s/+].*?charset[\\s/+]*=)\" \\\n    \"id:941260,\\\n    phase:2,\\\n    block,\\\n    capture,\\\n    t:none,t:utf8toUnicode,t:urlDecodeUni,t:htmlEntityDecode,t:jsDecode,t:cssDecode,t:removeNulls,\\\n    msg:'IE XSS Filters - Attack Detected',\\\n    logdata:'Matched Data: %{TX.0} found within %{MATCHED_VAR_NAME}: %{MATCHED_VAR}',\\\n    tag:'application-multi',\\\n    tag:'language-multi',\\\n    tag:'platform-multi',\\\n    tag:'attack-xss',\\\n    tag:'paranoia-level/1',\\\n    tag:'OWASP_CRS',\\\n    tag:'capec/1000/152/242',\\\n    ctl:auditLogParts=+E,\\\n    ver:'OWASP_CRS/3.4.0-dev',\\\n    severity:'CRITICAL',\\\n    setvar:'tx.xss_score=+%{tx.critical_anomaly_score}',\\\n    setvar:'tx.inbound_anomaly_score_pl1=+%{tx.critical_anomaly_score}'\"\n",
        "description": "IE XSS Filters - Attack Detected.",
        "paranoia_level": "1",
        "rule_id": "941",
        "sec_rule_id": "941260",
        "severity": "CRITICAL",
        "tags": [
            "application-multi",
            "language-multi",
            "platform-multi",
            "attack-xss",
            "paranoia-level/1",
            "OWASP_CRS",
            "capec/1000/152/242"
        ]
    },
    {
        "comment": "",
        "content": "SecRule REQUEST_COOKIES|!REQUEST_COOKIES:/__utm/|REQUEST_COOKIES_NAMES|ARGS_NAMES|ARGS|XML:/* \"@rx (?i)<LINK[\\s/+].*?href[\\s/+]*=\" \\\n    \"id:941270,\\\n    phase:2,\\\n    block,\\\n    capture,\\\n    t:none,t:utf8toUnicode,t:urlDecodeUni,t:htmlEntityDecode,t:jsDecode,t:cssDecode,t:removeNulls,\\\n    msg:'IE XSS Filters - Attack Detected',\\\n    logdata:'Matched Data: %{TX.0} found within %{MATCHED_VAR_NAME}: %{MATCHED_VAR}',\\\n    tag:'application-multi',\\\n    tag:'language-multi',\\\n    tag:'platform-multi',\\\n    tag:'attack-xss',\\\n    tag:'paranoia-level/1',\\\n    tag:'OWASP_CRS',\\\n    tag:'capec/1000/152/242',\\\n    ctl:auditLogParts=+E,\\\n    ver:'OWASP_CRS/3.4.0-dev',\\\n    severity:'CRITICAL',\\\n    setvar:'tx.xss_score=+%{tx.critical_anomaly_score}',\\\n    setvar:'tx.inbound_anomaly_score_pl1=+%{tx.critical_anomaly_score}'\"\n",
        "description": "IE XSS Filters - Attack Detected.",
        "paranoia_level": "1",
        "rule_id": "941",
        "sec_rule_id": "941270",
        "severity": "CRITICAL",
        "tags": [
            "application-multi",
            "language-multi",
            "platform-multi",
            "attack-xss",
            "paranoia-level/1",
            "OWASP_CRS",
            "capec/1000/152/242"
        ]
    },
    {
        "comment": "",
        "content": "SecRule REQUEST_COOKIES|!REQUEST_COOKIES:/__utm/|REQUEST_COOKIES_NAMES|ARGS_NAMES|ARGS|XML:/* \"@rx (?i)<BASE[\\s/+].*?href[\\s/+]*=\" \\\n    \"id:941280,\\\n    phase:2,\\\n    block,\\\n    capture,\\\n    t:none,t:utf8toUnicode,t:urlDecodeUni,t:htmlEntityDecode,t:jsDecode,t:cssDecode,t:removeNulls,\\\n    msg:'IE XSS Filters - Attack Detected',\\\n    logdata:'Matched Data: %{TX.0} found within %{MATCHED_VAR_NAME}: %{MATCHED_VAR}',\\\n    tag:'application-multi',\\\n    tag:'language-multi',\\\n    tag:'platform-multi',\\\n    tag:'attack-xss',\\\n    tag:'paranoia-level/1',\\\n    tag:'OWASP_CRS',\\\n    tag:'capec/1000/152/242',\\\n    ctl:auditLogParts=+E,\\\n    ver:'OWASP_CRS/3.4.0-dev',\\\n    severity:'CRITICAL',\\\n    setvar:'tx.xss_score=+%{tx.critical_anomaly_score}',\\\n    setvar:'tx.inbound_anomaly_score_pl1=+%{tx.critical_anomaly_score}'\"\n",
        "description": "IE XSS Filters - Attack Detected.",
        "paranoia_level": "1",
        "rule_id": "941",
        "sec_rule_id": "941280",
        "severity": "CRITICAL",
        "tags": [
            "application-multi",
            "language-multi",
            "platform-multi",
            "attack-xss",
            "paranoia-level/1",
            "OWASP_CRS",
            "capec/1000/152/242"
        ]
    },
    {
        "comment": "",
        "content": "SecRule REQUEST_COOKIES|!REQUEST_COOKIES:/__utm/|REQUEST_COOKIES_NAMES|ARGS_NAMES|ARGS|XML:/* \"@rx (?i)<APPLET[\\s/+>]\" \\\n    \"id:941290,\\\n    phase:2,\\\n    block,\\\n    capture,\\\n    t:none,t:utf8toUnicode,t:urlDecodeUni,t:htmlEntityDecode,t:jsDecode,t:cssDecode,t:removeNulls,\\\n    msg:'IE XSS Filters - Attack Detected',\\\n    logdata:'Matched Data: %{TX.0} found within %{MATCHED_VAR_NAME}: %{MATCHED_VAR}',\\\n    tag:'application-multi',\\\n    tag:'language-multi',\\\n    tag:'platform-multi',\\\n    tag:'attack-xss',\\\n    tag:'paranoia-level/1',\\\n    tag:'OWASP_CRS',\\\n    tag:'capec/1000/152/242',\\\n    ctl:auditLogParts=+E,\\\n    ver:'OWASP_CRS/3.4.0-dev',\\\n    severity:'CRITICAL',\\\n    setvar:'tx.xss_score=+%{tx.critical_anomaly_score}',\\\n    setvar:'tx.inbound_anomaly_score_pl1=+%{tx.critical_anomaly_score}'\"\n",
        "description": "IE XSS Filters - Attack Detected.",
        "paranoia_level": "1",
        "rule_id": "941",
        "sec_rule_id": "941290",
        "severity": "CRITICAL",
        "tags": [
            "application-multi",
            "language-multi",
            "platform-multi",
            "attack-xss",
            "paranoia-level/1",
            "OWASP_CRS",
            "capec/1000/152/242"
        ]
    },
    {
        "comment": "",
        "content": "SecRule REQUEST_COOKIES|!REQUEST_COOKIES:/__utm/|REQUEST_COOKIES_NAMES|ARGS_NAMES|ARGS|XML:/* \"@rx (?i)<OBJECT[\\s/+].*?(?:type|codetype|classid|code|data)[\\s/+]*=\" \\\n    \"id:941300,\\\n    phase:2,\\\n    block,\\\n    capture,\\\n    t:none,t:utf8toUnicode,t:urlDecodeUni,t:htmlEntityDecode,t:jsDecode,t:cssDecode,t:removeNulls,\\\n    msg:'IE XSS Filters - Attack Detected',\\\n    logdata:'Matched Data: %{TX.0} found within %{MATCHED_VAR_NAME}: %{MATCHED_VAR}',\\\n    tag:'application-multi',\\\n    tag:'language-multi',\\\n    tag:'platform-multi',\\\n    tag:'attack-xss',\\\n    tag:'paranoia-level/1',\\\n    tag:'OWASP_CRS',\\\n    tag:'capec/1000/152/242',\\\n    ctl:auditLogParts=+E,\\\n    ver:'OWASP_CRS/3.4.0-dev',\\\n    severity:'CRITICAL',\\\n    setvar:'tx.xss_score=+%{tx.critical_anomaly_score}',\\\n    setvar:'tx.inbound_anomaly_score_pl1=+%{tx.critical_anomaly_score}'\"\n",
        "description": "IE XSS Filters - Attack Detected.",
        "paranoia_level": "1",
        "rule_id": "941",
        "sec_rule_id": "941300",
        "severity": "CRITICAL",
        "tags": [
            "application-multi",
            "language-multi",
            "platform-multi",
            "attack-xss",
            "paranoia-level/1",
            "OWASP_CRS",
            "capec/1000/152/242"
        ]
    },
    {
        "comment": "#\n# https://www.owasp.org/www-community/xss-filter-evasion-cheatsheet\n# US-ASCII encoding bypass listed on XSS filter evasion\n# Reported by Mazin Ahmed\n#\n# This evasion covered by this chain of rules is specific to webservers that deliver content in US-ASCII.\n# Only Apache Tomcat is known (according to the page linked above) to be vulnerable to this and probably has to be\n# misconfigured for this to happen.\n#\n# Since US-ASCII is a seven bit encoding, bit 8 is ignored. Consider the following ISO 8859-1 sequence:\n#\n# \u00c2\u00bcscript\u00c2\u00bealert(\u00c2\u00a2XSS\u00c2\u00a2)\u00c2\u00bc/script\u00c2\u00be\n#\n# A filter looking for tags will usually not match against this sequence because there are no angle brackets (< / >). However,\n# the characters where the brackets would be are ISO 8859-1 characters:\n# - \u00c2\u00bc: 0x00BC\n# - \u00c2\u00be: 0x00BE\n# - \u00c2\u00a2: 0x00A2\n#\n# And this is how the sequence looks in in US-ASCII:\n#\n# <script>alert(\"XSSB\")</script/>\n#\n# This enables an attacker to craft a string that will be delivered in a form that a browser will execute as script\n# while being ignored by input filters.\n#\n# This rule looks for start tag sequene that looks like \"<...>\" (checks fo hex and plain to be sure).\n# Because the bytes matched occur in many different languages encoded as multibyte characters (e.g. UTF-8)\n# (e.g. German umlauts, Russion characters) this isn't very helpful and can cause many false positives. We, therefore,\n# use a chained rule to also look fora an end tag sequence that looks like \"</...>\". Only if the chained rule matches will\n# the request be blocked.\n#\n# This is of course still not perfect but should at least make it harder to hide most tags using this technique while\n# requiring very specifig patterns in a language to match, which should get rid of most false positives.\n# These rules would, for example, not guard against an element without an end tag, e.g. \"<img... />\".\n#\n# US-ASCII on Wikipedia: https://en.wikipedia.org/wiki/ASCII\n# ISO 8859-1 on Wikipedia: https://en.wikipedia.org/wiki/ISO/IEC_8859-1\n",
        "content": "SecRule REQUEST_COOKIES|!REQUEST_COOKIES:/__utm/|REQUEST_COOKIES_NAMES|ARGS_NAMES|ARGS|XML:/* \"@rx \\xbc[^\\xbe>]*[\\xbe>]|<[^\\xbe]*\\xbe\" \\\n    \"id:941310,\\\n    phase:2,\\\n    block,\\\n    capture,\\\n    t:none,t:lowercase,t:urlDecode,t:htmlEntityDecode,t:jsDecode,\\\n    msg:'US-ASCII Malformed Encoding XSS Filter - Attack Detected',\\\n    logdata:'Matched Data: %{TX.0} found within %{MATCHED_VAR_NAME}: %{MATCHED_VAR}',\\\n    tag:'application-multi',\\\n    tag:'language-multi',\\\n    tag:'platform-tomcat',\\\n    tag:'attack-xss',\\\n    tag:'paranoia-level/1',\\\n    tag:'OWASP_CRS',\\\n    tag:'capec/1000/152/242',\\\n    ver:'OWASP_CRS/3.4.0-dev',\\\n    severity:'CRITICAL',\\\n    chain\"\n    SecRule REQUEST_COOKIES|!REQUEST_COOKIES:/__utm/|REQUEST_COOKIES_NAMES|ARGS_NAMES|ARGS|XML:/* \"@rx (?:\\xbc\\s*/\\s*[^\\xbe>]*[\\xbe>])|(?:<\\s*/\\s*[^\\xbe]*\\xbe)\" \\\n        \"t:none,t:lowercase,t:urlDecode,t:htmlEntityDecode,t:jsDecode,\\\n        ctl:auditLogParts=+E,\\\n        setvar:'tx.xss_score=+%{tx.critical_anomaly_score}',\\\n        setvar:'tx.inbound_anomaly_score_pl1=+%{tx.critical_anomaly_score}'\"\n",
        "description": "US-ASCII Malformed Encoding XSS Filter - Attack Detected.",
        "paranoia_level": "1",
        "rule_id": "941",
        "sec_rule_id": "941310",
        "severity": "CRITICAL",
        "tags": [
            "application-multi",
            "language-multi",
            "platform-tomcat",
            "attack-xss",
            "paranoia-level/1",
            "OWASP_CRS",
            "capec/1000/152/242"
        ]
    },
    {
        "comment": "#\n# https://nedbatchelder.com/blog/200704/xss_with_utf7.html\n# UTF-7 encoding XSS filter evasion for IE.\n# Reported by Vladimir Ivanov\n#\n",
        "content": "SecRule REQUEST_COOKIES|!REQUEST_COOKIES:/__utm/|REQUEST_COOKIES_NAMES|ARGS_NAMES|ARGS|XML:/* \"@rx \\+ADw-.*(?:\\+AD4-|>)|<.*\\+AD4-\" \\\n    \"id:941350,\\\n    phase:2,\\\n    block,\\\n    capture,\\\n    t:none,t:urlDecode,t:htmlEntityDecode,t:jsDecode,\\\n    msg:'UTF-7 Encoding IE XSS - Attack Detected',\\\n    logdata:'Matched Data: %{TX.0} found within %{MATCHED_VAR_NAME}: %{MATCHED_VAR}',\\\n    tag:'application-multi',\\\n    tag:'language-multi',\\\n    tag:'platform-internet-explorer',\\\n    tag:'attack-xss',\\\n    tag:'paranoia-level/1',\\\n    tag:'OWASP_CRS',\\\n    tag:'capec/1000/152/242',\\\n    ctl:auditLogParts=+E,\\\n    ver:'OWASP_CRS/3.4.0-dev',\\\n    severity:'CRITICAL',\\\n    setvar:'tx.xss_score=+%{tx.critical_anomaly_score}',\\\n    setvar:'tx.inbound_anomaly_score_pl1=+%{tx.critical_anomaly_score}'\"\n",
        "description": "UTF-7 Encoding IE XSS - Attack Detected.",
        "paranoia_level": "1",
        "rule_id": "941",
        "sec_rule_id": "941350",
        "severity": "CRITICAL",
        "tags": [
            "application-multi",
            "language-multi",
            "platform-internet-explorer",
            "attack-xss",
            "paranoia-level/1",
            "OWASP_CRS",
            "capec/1000/152/242"
        ]
    },
    {
        "comment": "#\n# Defend against JSFuck and Hieroglyphy obfuscation of Javascript code\n#\n# https://en.wikipedia.org/wiki/JSFuck\n# https://github.com/alcuadrado/hieroglyphy\n#\n# These JS obfuscations mostly aim for client side XSS exploits, hence the\n# integration of this rule into the XSS rule group. But serverside JS could\n# also be attacked via these techniques.\n#\n# Detection pattern / Core elements of JSFuck and Hieroglyphy are the\n# following two items:\n# !![]\n# !+[]\n#\n# ModSecurity always transforms \"+\" into \" \" with query strings and the\n# URLENCODE body processor (but not for JSON). So we need to check for\n# the following patterns:\n# !![]\n# !+[]\n# ! []\n",
        "content": "SecRule REQUEST_COOKIES|!REQUEST_COOKIES:/__utm/|REQUEST_COOKIES_NAMES|ARGS_NAMES|ARGS|XML:/* \"@rx ![!+ ]\\[\\]\" \\\n    \"id:941360,\\\n    phase:2,\\\n    block,\\\n    capture,\\\n    t:none,\\\n    msg:'JSFuck / Hieroglyphy obfuscation detected',\\\n    logdata:'Matched Data: Suspicious payload found within %{MATCHED_VAR_NAME}: %{MATCHED_VAR}',\\\n    tag:'application-multi',\\\n    tag:'language-multi',\\\n    tag:'attack-xss',\\\n    tag:'paranoia-level/1',\\\n    tag:'OWASP_CRS',\\\n    tag:'capec/1000/152/242/63',\\\n    ctl:auditLogParts=+E,\\\n    ver:'OWASP_CRS/3.4.0-dev',\\\n    severity:'CRITICAL',\\\n    setvar:'tx.xss_score=+%{tx.critical_anomaly_score}',\\\n    setvar:'tx.inbound_anomaly_score_pl1=+%{tx.critical_anomaly_score}'\"\n",
        "paranoia_level": "1",
        "rule_id": "941",
        "sec_rule_id": "941360",
        "severity": "CRITICAL",
        "tags": [
            "application-multi",
            "language-multi",
            "attack-xss",
            "paranoia-level/1",
            "OWASP_CRS",
            "capec/1000/152/242/63"
        ]
    },
    {
        "comment": "#\n# Prevent 941180 bypass by using JavaScript global variables\n# Refer to: https://www.secjuice.com/bypass-xss-filters-using-javascript-global-variables/\n#\n# Examples:\n#    - /?search=/?a=\";+alert(self[\"document\"][\"cookie\"]);//\n#    - /?search=/?a=\";+document+/*foo*/+.+/*bar*/+cookie;//\n#\n",
        "content": "SecRule REQUEST_COOKIES|!REQUEST_COOKIES:/__utm/|REQUEST_COOKIES_NAMES|ARGS|XML:/* \"@rx (?:self|document|this|top|window)\\s*(?:/\\*|[\\[)]).+?(?:\\]|\\*/)\" \\\n    \"id:941370,\\\n    phase:2,\\\n    block,\\\n    capture,\\\n    t:none,t:urlDecodeUni,t:compressWhitespace,\\\n    msg:'JavaScript global variable found',\\\n    logdata:'Matched Data: Suspicious JS global variable found within %{MATCHED_VAR_NAME}: %{MATCHED_VAR}',\\\n    tag:'application-multi',\\\n    tag:'language-multi',\\\n    tag:'attack-xss',\\\n    tag:'paranoia-level/1',\\\n    tag:'OWASP_CRS',\\\n    tag:'capec/1000/152/242/63',\\\n    ctl:auditLogParts=+E,\\\n    ver:'OWASP_CRS/3.4.0-dev',\\\n    severity:'CRITICAL',\\\n    setvar:'tx.xss_score=+%{tx.critical_anomaly_score}',\\\n    setvar:'tx.inbound_anomaly_score_pl1=+%{tx.critical_anomaly_score}'\"\n",
        "paranoia_level": "1",
        "rule_id": "941",
        "sec_rule_id": "941370",
        "severity": "CRITICAL",
        "tags": [
            "application-multi",
            "language-multi",
            "attack-xss",
            "paranoia-level/1",
            "OWASP_CRS",
            "capec/1000/152/242/63"
        ]
    },
    {
        "comment": "",
        "content": "SecRule TX:DETECTION_PARANOIA_LEVEL \"@lt 2\" \"id:941013,phase:1,pass,nolog,skipAfter:END-REQUEST-941-APPLICATION-ATTACK-XSS\"\n",
        "rule_id": "941",
        "sec_rule_id": "941013"
    },
    {
        "comment": "",
        "content": "SecRule TX:DETECTION_PARANOIA_LEVEL \"@lt 2\" \"id:941014,phase:2,pass,nolog,skipAfter:END-REQUEST-941-APPLICATION-ATTACK-XSS\"\n",
        "rule_id": "941",
        "sec_rule_id": "941014"
    },
    {
        "comment": "#\n# This is a stricter sibling of rule 941100.\n#\n",
        "content": "SecRule REQUEST_FILENAME|REQUEST_HEADERS:Referer \"@detectXSS\" \\\n    \"id:941101,\\\n    phase:1,\\\n    block,\\\n    capture,\\\n    t:none,t:utf8toUnicode,t:urlDecodeUni,t:htmlEntityDecode,t:jsDecode,t:cssDecode,t:removeNulls,\\\n    msg:'XSS Attack Detected via libinjection',\\\n    logdata:'Matched Data: %{TX.0} found within %{MATCHED_VAR_NAME}: %{MATCHED_VAR}',\\\n    tag:'application-multi',\\\n    tag:'language-multi',\\\n    tag:'platform-multi',\\\n    tag:'attack-xss',\\\n    tag:'OWASP_CRS',\\\n    tag:'capec/1000/152/242',\\\n    tag:'paranoia-level/2',\\\n    ctl:auditLogParts=+E,\\\n    ver:'OWASP_CRS/3.4.0-dev',\\\n    severity:'CRITICAL',\\\n    setvar:'tx.xss_score=+%{tx.critical_anomaly_score}',\\\n    setvar:'tx.inbound_anomaly_score_pl2=+%{tx.critical_anomaly_score}'\"\n",
        "paranoia_level": "2",
        "rule_id": "941",
        "sec_rule_id": "941101",
        "severity": "CRITICAL",
        "tags": [
            "application-multi",
            "language-multi",
            "platform-multi",
            "attack-xss",
            "OWASP_CRS",
            "capec/1000/152/242",
            "paranoia-level/2"
        ]
    },
    {
        "comment": "#\n# -=[ XSS Filters - Category 2 ]=-\n# XSS vectors making use of event handlers like onerror, onload etc, e.g., <body onload=\"alert(1)\">\n#\n# We are not listing all the known event handlers like rule 941160, but we\n# limit the alerts to keywords of 3-25 characters after the prefix (\"on\").\n#\n# The shortest known event is \"onget\". The longest known event is \"onmozorientationchange\"\n# with 23 chars after the prefix. 25 chars adds a little bit of safety.\n#\n# This rule has been moved to PL2 since it has a tendency to trigger on random input.\n#\n",
        "content": "SecRule REQUEST_COOKIES|!REQUEST_COOKIES:/__utm/|REQUEST_COOKIES_NAMES|REQUEST_HEADERS:User-Agent|REQUEST_HEADERS:Referer|ARGS_NAMES|ARGS|XML:/* \"@rx (?i)[\\s\\\"'`;\\/0-9=\\x0B\\x09\\x0C\\x3B\\x2C\\x28\\x3B]on[a-zA-Z]{3,25}[\\s\\x0B\\x09\\x0C\\x3B\\x2C\\x28\\x3B]*?=[^=]\" \\\n    \"id:941120,\\\n    phase:2,\\\n    block,\\\n    capture,\\\n    t:none,t:utf8toUnicode,t:urlDecodeUni,t:htmlEntityDecode,t:jsDecode,t:cssDecode,t:removeNulls,\\\n    msg:'XSS Filter - Category 2: Event Handler Vector',\\\n    logdata:'Matched Data: %{TX.0} found within %{MATCHED_VAR_NAME}: %{MATCHED_VAR}',\\\n    tag:'application-multi',\\\n    tag:'language-multi',\\\n    tag:'platform-multi',\\\n    tag:'attack-xss',\\\n    tag:'paranoia-level/2',\\\n    tag:'OWASP_CRS',\\\n    tag:'capec/1000/152/242',\\\n    ctl:auditLogParts=+E,\\\n    ver:'OWASP_CRS/3.4.0-dev',\\\n    severity:'CRITICAL',\\\n    setvar:'tx.xss_score=+%{tx.critical_anomaly_score}',\\\n    setvar:'tx.inbound_anomaly_score_pl2=+%{tx.critical_anomaly_score}'\"\n",
        "description": "XSS Filter - Category 2: Event Handler Vector",
        "paranoia_level": "2",
        "rule_id": "941",
        "sec_rule_id": "941120",
        "severity": "CRITICAL",
        "tags": [
            "application-multi",
            "language-multi",
            "platform-multi",
            "attack-xss",
            "paranoia-level/2",
            "OWASP_CRS",
            "capec/1000/152/242"
        ]
    },
    {
        "comment": "#\n# -=[ XSS Filters - Category 5 ]=-\n# HTML attributes - src, style and href\n#\n",
        "content": "SecRule REQUEST_COOKIES|!REQUEST_COOKIES:/__utm/|REQUEST_COOKIES_NAMES|REQUEST_HEADERS:User-Agent|ARGS_NAMES|ARGS|XML:/* \"@rx (?i)\\b(?:s(?:tyle|rc)|href)\\b[\\s\\S]*?=\" \\\n    \"id:941150,\\\n    phase:2,\\\n    block,\\\n    capture,\\\n    t:none,t:utf8toUnicode,t:urlDecodeUni,t:htmlEntityDecode,t:jsDecode,t:cssDecode,t:removeNulls,\\\n    msg:'XSS Filter - Category 5: Disallowed HTML Attributes',\\\n    logdata:'Matched Data: %{TX.0} found within %{MATCHED_VAR_NAME}: %{MATCHED_VAR}',\\\n    tag:'application-multi',\\\n    tag:'language-multi',\\\n    tag:'platform-multi',\\\n    tag:'attack-xss',\\\n    tag:'OWASP_CRS',\\\n    tag:'capec/1000/152/242',\\\n    tag:'paranoia-level/2',\\\n    ctl:auditLogParts=+E,\\\n    ver:'OWASP_CRS/3.4.0-dev',\\\n    severity:'CRITICAL',\\\n    setvar:'tx.xss_score=+%{tx.critical_anomaly_score}',\\\n    setvar:'tx.inbound_anomaly_score_pl2=+%{tx.critical_anomaly_score}'\"\n",
        "description": "XSS Filter - Category 5: Disallowed HTML Attributes",
        "paranoia_level": "2",
        "rule_id": "941",
        "sec_rule_id": "941150",
        "severity": "CRITICAL",
        "tags": [
            "application-multi",
            "language-multi",
            "platform-multi",
            "attack-xss",
            "OWASP_CRS",
            "capec/1000/152/242",
            "paranoia-level/2"
        ]
    },
    {
        "comment": "#\n# [Deny List Keywords from Node-Validator]\n# https://raw.github.com/chriso/node-validator/master/validator.js\n# This rule is a stricter sibling of 941180 (PL1)\n#\n",
        "content": "SecRule REQUEST_COOKIES|!REQUEST_COOKIES:/__utm/|REQUEST_COOKIES_NAMES|ARGS_NAMES|ARGS|XML:/* \"@contains -->\" \\\n    \"id:941181,\\\n    phase:2,\\\n    block,\\\n    capture,\\\n    t:none,t:utf8toUnicode,t:urlDecodeUni,t:htmlEntityDecode,t:jsDecode,t:cssDecode,t:lowercase,t:removeNulls,\\\n    msg:'Node-Validator Deny List Keywords',\\\n    logdata:'Matched Data: %{TX.0} found within %{MATCHED_VAR_NAME}: %{MATCHED_VAR}',\\\n    tag:'application-multi',\\\n    tag:'language-multi',\\\n    tag:'platform-multi',\\\n    tag:'attack-xss',\\\n    tag:'paranoia-level/2',\\\n    tag:'OWASP_CRS',\\\n    tag:'capec/1000/152/242',\\\n    ctl:auditLogParts=+E,\\\n    ver:'OWASP_CRS/3.4.0-dev',\\\n    severity:'CRITICAL',\\\n    setvar:'tx.xss_score=+%{tx.critical_anomaly_score}',\\\n    setvar:'tx.inbound_anomaly_score_pl2=+%{tx.critical_anomaly_score}'\"\n",
        "paranoia_level": "2",
        "rule_id": "941",
        "sec_rule_id": "941181",
        "severity": "CRITICAL",
        "tags": [
            "application-multi",
            "language-multi",
            "platform-multi",
            "attack-xss",
            "paranoia-level/2",
            "OWASP_CRS",
            "capec/1000/152/242"
        ]
    },
    {
        "comment": "# Detect tags that are the most common direct HTML injection points.\n#\n#     <a href=javascript:...\n#     <applet src=\"...\" type=text/html>\n#     <applet src=\"data:text/html;base64,PHNjcmlwdD5hbGVydCgvWFNTLyk8L3NjcmlwdD4\" type=text/html>\n#     <base href=javascript:...\n#     <base href=... // change base URL to something else to exploit relative filename inclusion\n#     <bgsound src=javascript:...\n#     <body background=javascript:...\n#     <body onload=...\n#     <embed src=http://www.example.com/flash.swf allowScriptAccess=always\n#     <embed src=\"data:image/svg+xml;\n#     <frameset><frame src=\"javascript:...\"></frameset>\n#     <iframe src=javascript:...\n#     <img src=x onerror=...\n#     <input type=image src=javascript:...\n#     <layer src=...\n#     <link href=\"javascript:...\" rel=\"stylesheet\" type=\"text/css\"\n#     <link href=\"http://www.example.com/xss.css\" rel=\"stylesheet\" type=\"text/css\"\n#     <meta http-equiv=\"refresh\" content=\"0;url=javascript:...\"\n#     <meta http-equiv=\"refresh\" content=\"0;url=http://;javascript:...\" // evasion\n#     <meta http-equiv=\"link\" rel=stylesheet content=\"http://www.example.com/xss.css\">\n#     <meta http-equiv=\"Set-Cookie\" content=\"NEW_COOKIE_VALUE\">\n#     <object data=http://www.example.com\n#     <object type=text/x-scriptlet data=...\n#     <object type=application/x-shockwave-flash data=xss.swf>\n#     <object classid=clsid:ae24fdae-03c6-11d1-8b76-0080c744f389><param name=url value=javascript:...></object> // not verified\n#     <script>...</script>\n#     <script src=http://www.example.com/xss.js></script> - TODO add another rule for this\n#     <script src=\"data:text/javascript,alert(1)\"></script>\n#     <script src=\"data:text/javascript;base64,PHNjcmlwdD5hbGVydChkb2N1bWVudC5jb29raWUpOzwvc2NyaXB0Pg==\"></script>\n#     <style>STYLE</style>\n#     <style type=text/css>STYLE</style>\n#     <style type=text/javascript>alert('xss')</style>\n#     <table background=javascript:...\n#     <td background=javascript:\n#\n#\n# NOTES\n#\n#  - Reference the WASC Script Mapping Project - http://projects.webappsec.org/Script-Mapping\n#\n#  - Not using closing brackets because they are not needed for the\n#    attacks to succeed. The following seems to work in FF: <body/s/onload=...\n#\n#  - Also, browsers sometimes tend to translate < into >, in order to \"repair\"\n#    what they think was a mistake made by the programmer/template designer.\n#\n#  - Browsers are flexible when it comes to what they accept as separator between\n#    tag names and attributes. The following is commonly used in payloads: <img/src=...\n#    A better example: <BODY onload!#$%&amp;()*~+-_.,:;?@[/|\\]^=alert(\"XSS\")>\n#\n#  - Grave accents are sometimes used as an evasion technique (as a replacement for quotes),\n#    but I don't believe we need to look for quotes anywhere.\n#\n#  - Links do not have to be fully qualified. For example, the following works:\n#    <script src=\"//ha.ckers.org/.j\">\n#\n# This rule is also triggered by the following exploit(s):\n# [ SAP CRM Java vulnerability CVE-2018-2380 - Exploit tested: https://www.exploit-db.com/exploits/44292 ]\n#\n",
        "content": "SecRule REQUEST_COOKIES|!REQUEST_COOKIES:/__utm/|!REQUEST_COOKIES:/_pk_ref/|REQUEST_COOKIES_NAMES|ARGS_NAMES|ARGS|XML:/* \"@rx <(?:a|abbr|acronym|address|applet|area|audioscope|b|base|basefront|bdo|bgsound|big|blackface|blink|blockquote|body|bq|br|button|caption|center|cite|code|col|colgroup|comment|dd|del|dfn|dir|div|dl|dt|em|embed|fieldset|fn|font|form|frame|frameset|h1|head|hr|html|i|iframe|ilayer|img|input|ins|isindex|kdb|keygen|label|layer|legend|li|limittext|link|listing|map|marquee|menu|meta|multicol|nobr|noembed|noframes|noscript|nosmartquotes|object|ol|optgroup|option|p|param|plaintext|pre|q|rt|ruby|s|samp|script|select|server|shadow|sidebar|small|spacer|span|strike|strong|style|sub|sup|table|tbody|td|textarea|tfoot|th|thead|title|tr|tt|u|ul|var|wbr|xml|xmp)\\W\" \\\n    \"id:941320,\\\n    phase:2,\\\n    block,\\\n    capture,\\\n    t:none,t:jsDecode,t:lowercase,\\\n    msg:'Possible XSS Attack Detected - HTML Tag Handler',\\\n    logdata:'Matched Data: %{TX.0} found within %{MATCHED_VAR_NAME}: %{MATCHED_VAR}',\\\n    tag:'application-multi',\\\n    tag:'language-multi',\\\n    tag:'platform-multi',\\\n    tag:'attack-xss',\\\n    tag:'OWASP_CRS',\\\n    tag:'capec/1000/152/242/63',\\\n    tag:'PCI/6.5.1',\\\n    tag:'paranoia-level/2',\\\n    ver:'OWASP_CRS/3.4.0-dev',\\\n    severity:'CRITICAL',\\\n    setvar:'tx.xss_score=+%{tx.critical_anomaly_score}',\\\n    setvar:'tx.inbound_anomaly_score_pl2=+%{tx.critical_anomaly_score}'\"\n",
        "description": "Possible XSS Attack Detected - HTML Tag Handler",
        "paranoia_level": "2",
        "rule_id": "941",
        "sec_rule_id": "941320",
        "severity": "CRITICAL",
        "tags": [
            "application-multi",
            "language-multi",
            "platform-multi",
            "attack-xss",
            "OWASP_CRS",
            "capec/1000/152/242/63",
            "PCI/6.5.1",
            "paranoia-level/2"
        ]
    },
    {
        "comment": "",
        "content": "SecRule REQUEST_COOKIES|!REQUEST_COOKIES:/__utm/|!REQUEST_COOKIES:/_pk_ref/|REQUEST_COOKIES_NAMES|ARGS_NAMES|ARGS|XML:/* \"@rx (?i:[\\\"'][ ]*(?:[^a-z0-9~_:' ]|in).*?(?:(?:l|\\x5cu006C)(?:o|\\x5cu006F)(?:c|\\x5cu0063)(?:a|\\x5cu0061)(?:t|\\x5cu0074)(?:i|\\x5cu0069)(?:o|\\x5cu006F)(?:n|\\x5cu006E)|(?:n|\\x5cu006E)(?:a|\\x5cu0061)(?:m|\\x5cu006D)(?:e|\\x5cu0065)|(?:o|\\x5cu006F)(?:n|\\x5cu006E)(?:e|\\x5cu0065)(?:r|\\x5cu0072)(?:r|\\x5cu0072)(?:o|\\x5cu006F)(?:r|\\x5cu0072)|(?:v|\\x5cu0076)(?:a|\\x5cu0061)(?:l|\\x5cu006C)(?:u|\\x5cu0075)(?:e|\\x5cu0065)(?:O|\\x5cu004F)(?:f|\\x5cu0066)).*?=)\" \\\n    \"id:941330,\\\n    phase:2,\\\n    block,\\\n    capture,\\\n    t:none,t:htmlEntityDecode,t:compressWhitespace,\\\n    msg:'IE XSS Filters - Attack Detected',\\\n    logdata:'Matched Data: %{TX.0} found within %{MATCHED_VAR_NAME}: %{MATCHED_VAR}',\\\n    tag:'application-multi',\\\n    tag:'language-multi',\\\n    tag:'platform-multi',\\\n    tag:'attack-xss',\\\n    tag:'OWASP_CRS',\\\n    tag:'capec/1000/152/242',\\\n    tag:'PCI/6.5.1',\\\n    tag:'paranoia-level/2',\\\n    ver:'OWASP_CRS/3.4.0-dev',\\\n    severity:'CRITICAL',\\\n    setvar:'tx.xss_score=+%{tx.critical_anomaly_score}',\\\n    setvar:'tx.inbound_anomaly_score_pl2=+%{tx.critical_anomaly_score}'\"\n",
        "description": "IE XSS Filters - Attack Detected.",
        "paranoia_level": "2",
        "rule_id": "941",
        "sec_rule_id": "941330",
        "severity": "CRITICAL",
        "tags": [
            "application-multi",
            "language-multi",
            "platform-multi",
            "attack-xss",
            "OWASP_CRS",
            "capec/1000/152/242",
            "PCI/6.5.1",
            "paranoia-level/2"
        ]
    },
    {
        "comment": "# This rule is also triggered by the following exploit(s):\n# [ SAP CRM Java vulnerability CVE-2018-2380 - Exploit tested: https://www.exploit-db.com/exploits/44292 ]\n#\n",
        "content": "SecRule REQUEST_COOKIES|!REQUEST_COOKIES:/__utm/|!REQUEST_COOKIES:/_pk_ref/|REQUEST_COOKIES_NAMES|ARGS_NAMES|ARGS|XML:/* \"@rx (?i)[\\\"\\'][ ]*(?:[^a-z0-9~_:\\' ]|in).+?[.].+?=\" \\\n    \"id:941340,\\\n    phase:2,\\\n    block,\\\n    capture,\\\n    t:none,t:htmlEntityDecode,t:compressWhitespace,\\\n    msg:'IE XSS Filters - Attack Detected',\\\n    logdata:'Matched Data: %{TX.0} found within %{MATCHED_VAR_NAME}: %{MATCHED_VAR}',\\\n    tag:'application-multi',\\\n    tag:'language-multi',\\\n    tag:'platform-multi',\\\n    tag:'attack-xss',\\\n    tag:'OWASP_CRS',\\\n    tag:'capec/1000/152/242',\\\n    tag:'PCI/6.5.1',\\\n    tag:'paranoia-level/2',\\\n    ver:'OWASP_CRS/3.4.0-dev',\\\n    severity:'CRITICAL',\\\n    setvar:'tx.xss_score=+%{tx.critical_anomaly_score}',\\\n    setvar:'tx.inbound_anomaly_score_pl2=+%{tx.critical_anomaly_score}'\"\n",
        "description": "IE XSS Filters - Attack Detected.",
        "paranoia_level": "2",
        "rule_id": "941",
        "sec_rule_id": "941340",
        "severity": "CRITICAL",
        "tags": [
            "application-multi",
            "language-multi",
            "platform-multi",
            "attack-xss",
            "OWASP_CRS",
            "capec/1000/152/242",
            "PCI/6.5.1",
            "paranoia-level/2"
        ]
    },
    {
        "comment": "#\n# Defend against AngularJS client side template injection\n#\n# Of course, pure client-side AngularJS commands can not be intercepted.\n# But once a command is sent to the server, the CRS will trigger.\n#\n# https://portswigger.net/blog/xss-without-html-client-side-template-injection-with-angularjs\n#\n# Example payload:\n# http://localhost/login?user=%20x%20%7B%7Bconstructor.constructor(%27alert(1)%27)()%7D%7D%20.%20ff\n# Decoded argument:\n# {{constructor.constructor('alert(1)')()}}\n#\n",
        "content": "SecRule REQUEST_COOKIES|!REQUEST_COOKIES:/__utm/|REQUEST_COOKIES_NAMES|ARGS_NAMES|ARGS|XML:/* \"@rx {{.*?}}\" \\\n    \"id:941380,\\\n    phase:2,\\\n    block,\\\n    capture,\\\n    t:none,\\\n    msg:'AngularJS client side template injection detected',\\\n    logdata:'Matched Data: Suspicious payload found within %{MATCHED_VAR_NAME}: %{MATCHED_VAR}',\\\n    tag:'application-multi',\\\n    tag:'language-multi',\\\n    tag:'attack-xss',\\\n    tag:'OWASP_CRS',\\\n    tag:'capec/1000/152/242/63',\\\n    tag:'paranoia-level/2',\\\n    ctl:auditLogParts=+E,\\\n    ver:'OWASP_CRS/3.4.0-dev',\\\n    severity:'CRITICAL',\\\n    setvar:'tx.xss_score=+%{tx.critical_anomaly_score}',\\\n    setvar:'tx.inbound_anomaly_score_pl2=+%{tx.critical_anomaly_score}'\"\n",
        "paranoia_level": "2",
        "rule_id": "941",
        "sec_rule_id": "941380",
        "severity": "CRITICAL",
        "tags": [
            "application-multi",
            "language-multi",
            "attack-xss",
            "OWASP_CRS",
            "capec/1000/152/242/63",
            "paranoia-level/2"
        ]
    },
    {
        "comment": "",
        "content": "SecRule TX:DETECTION_PARANOIA_LEVEL \"@lt 3\" \"id:941015,phase:1,pass,nolog,skipAfter:END-REQUEST-941-APPLICATION-ATTACK-XSS\"\n",
        "rule_id": "941",
        "sec_rule_id": "941015"
    },
    {
        "comment": "",
        "content": "SecRule TX:DETECTION_PARANOIA_LEVEL \"@lt 3\" \"id:941016,phase:2,pass,nolog,skipAfter:END-REQUEST-941-APPLICATION-ATTACK-XSS\"\n",
        "rule_id": "941",
        "sec_rule_id": "941016"
    },
    {
        "comment": "#\n# -= Paranoia Level 3 =- (apply only when tx.detection_paranoia_level is sufficiently high: 3 or higher)\n#\n",
        "content": "SecRule TX:DETECTION_PARANOIA_LEVEL \"@lt 4\" \"id:941017,phase:1,pass,nolog,skipAfter:END-REQUEST-941-APPLICATION-ATTACK-XSS\"\n",
        "rule_id": "941",
        "sec_rule_id": "941017"
    },
    {
        "comment": "",
        "content": "SecRule TX:DETECTION_PARANOIA_LEVEL \"@lt 4\" \"id:941018,phase:2,pass,nolog,skipAfter:END-REQUEST-941-APPLICATION-ATTACK-XSS\"\n",
        "rule_id": "941",
        "sec_rule_id": "941018"
    },
    {
        "comment": "#\n# -= Paranoia Level 0 (empty) =- (apply unconditionally)\n#\n",
        "content": "SecRule TX:DETECTION_PARANOIA_LEVEL \"@lt 1\" \"id:942011,phase:1,pass,nolog,skipAfter:END-REQUEST-942-APPLICATION-ATTACK-SQLI\"\n",
        "rule_id": "942",
        "sec_rule_id": "942011"
    },
    {
        "comment": "",
        "content": "SecRule TX:DETECTION_PARANOIA_LEVEL \"@lt 1\" \"id:942012,phase:2,pass,nolog,skipAfter:END-REQUEST-942-APPLICATION-ATTACK-SQLI\"\n",
        "rule_id": "942",
        "sec_rule_id": "942012"
    },
    {
        "comment": "#\n# -=[ LibInjection Check ]=-\n#\n# There is a stricter sibling of this rule at 942101. It covers REQUEST_BASENAME.\n#\n# Ref: https://libinjection.client9.com/\n#\n",
        "content": "SecRule REQUEST_COOKIES|!REQUEST_COOKIES:/__utm/|REQUEST_COOKIES_NAMES|REQUEST_HEADERS:User-Agent|REQUEST_HEADERS:Referer|ARGS_NAMES|ARGS|XML:/* \"@detectSQLi\" \\\n    \"id:942100,\\\n    phase:2,\\\n    block,\\\n    capture,\\\n    t:none,t:utf8toUnicode,t:urlDecodeUni,t:removeNulls,\\\n    msg:'SQL Injection Attack Detected via libinjection',\\\n    logdata:'Matched Data: %{TX.0} found within %{MATCHED_VAR_NAME}: %{MATCHED_VAR}',\\\n    tag:'application-multi',\\\n    tag:'language-multi',\\\n    tag:'platform-multi',\\\n    tag:'attack-sqli',\\\n    tag:'paranoia-level/1',\\\n    tag:'OWASP_CRS',\\\n    tag:'capec/1000/152/248/66',\\\n    tag:'PCI/6.5.2',\\\n    ver:'OWASP_CRS/3.4.0-dev',\\\n    severity:'CRITICAL',\\\n    multiMatch,\\\n    setvar:'tx.inbound_anomaly_score_pl1=+%{tx.critical_anomaly_score}',\\\n    setvar:'tx.sql_injection_score=+%{tx.critical_anomaly_score}'\"\n",
        "description": "SQL Injection Attack Detected via libinjection",
        "paranoia_level": "1",
        "rule_id": "942",
        "sec_rule_id": "942100",
        "severity": "CRITICAL",
        "tags": [
            "application-multi",
            "language-multi",
            "platform-multi",
            "attack-sqli",
            "paranoia-level/1",
            "OWASP_CRS",
            "capec/1000/152/248/66",
            "PCI/6.5.2"
        ]
    },
    {
        "comment": "#\n# -=[ Detect DB Names ]=-\n#\n# Regular expression generated from util/regexp-assemble/data/942140.data.\n# To update the regular expression run the following shell script\n# (consult util/regexp-assemble/README.md for details):\n#   util/regexp-assemble/regexp-assemble.py update 942140\n#\n",
        "content": "SecRule REQUEST_COOKIES|!REQUEST_COOKIES:/__utm/|REQUEST_COOKIES_NAMES|ARGS_NAMES|ARGS|XML:/* \"@rx (?i)\\b(?:(?:m(?:s(?:ys(?:ac(?:cess(?:objects|storage|xml)|es)|(?:relationship|object|querie)s|modules2?)|db)|aster\\.\\.sysdatabases|ysql\\.db)|pg_(?:catalog|toast)|information_schema|northwind|tempdb)\\b|s(?:(?:ys(?:\\.database_name|aux)|qlite(?:_temp)?_master)\\b|chema(?:_name\\b|\\W*\\())|d(?:atabas|b_nam)e\\W*\\()\" \\\n    \"id:942140,\\\n    phase:2,\\\n    block,\\\n    capture,\\\n    t:none,t:urlDecodeUni,\\\n    msg:'SQL Injection Attack: Common DB Names Detected',\\\n    logdata:'Matched Data: %{TX.0} found within %{MATCHED_VAR_NAME}: %{MATCHED_VAR}',\\\n    tag:'application-multi',\\\n    tag:'language-multi',\\\n    tag:'platform-multi',\\\n    tag:'attack-sqli',\\\n    tag:'paranoia-level/1',\\\n    tag:'OWASP_CRS',\\\n    tag:'capec/1000/152/248/66',\\\n    tag:'PCI/6.5.2',\\\n    ctl:auditLogParts=+E,\\\n    ver:'OWASP_CRS/3.4.0-dev',\\\n    severity:'CRITICAL',\\\n    setvar:'tx.sql_injection_score=+%{tx.critical_anomaly_score}',\\\n    setvar:'tx.inbound_anomaly_score_pl1=+%{tx.critical_anomaly_score}'\"\n",
        "description": "SQL Injection Attack: Common DB Names Detected",
        "paranoia_level": "1",
        "rule_id": "942",
        "sec_rule_id": "942140",
        "severity": "CRITICAL",
        "tags": [
            "application-multi",
            "language-multi",
            "platform-multi",
            "attack-sqli",
            "paranoia-level/1",
            "OWASP_CRS",
            "capec/1000/152/248/66",
            "PCI/6.5.2"
        ]
    },
    {
        "comment": "#\n# -=[ SQL Function Names ]=-\n#\n# This rule is a less stricter sibling of 942150.\n#\n# Regexp generated from util/regexp-assemble/data/942151.data using Regexp::Assemble.\n# To rebuild the regexp:\n#   cd util/regexp-assemble\n#   ./regexp-assemble.py 942151\n#\n",
        "content": "SecRule REQUEST_COOKIES|!REQUEST_COOKIES:/__utm/|REQUEST_COOKIES_NAMES|ARGS_NAMES|ARGS|XML:/* \"@rx (?i)\\b(?:c(?:o(?:n(?:v(?:ert(?:_tz)?)?|cat(?:_ws)?|nection_id)|(?:mpres)?s|ercibility|llation|alesce|t)|ur(?:rent_(?:time(?:stamp)?|date|user)|(?:dat|tim)e)|ha(?:racte)?r_length|iel(?:ing)?|r32)|s(?:t(?:d(?:dev_(?:sam|po)p)?|r(?:_to_date|cmp))|ub(?:str(?:ing(?:_index)?)?|(?:dat|tim)e)|e(?:ssion_user|c_to_time)|ys(?:tem_user|date)|ha[12]?|oundex|chema|pace|qrt|in)|i(?:s(?:_(?:ipv(?:4(?:_(?:compat|mapped))?|6)|n(?:ot(?:_null)?|ull)|(?:free|used)_lock)|null)|n(?:et(?:6_(?:aton|ntoa)|_(?:aton|ntoa))|s(?:ert|tr)|terval)|fnull)|d(?:a(?:t(?:e(?:_(?:format|add|sub)|diff)|abase)|y(?:of(?:month|week|year)|name))|e(?:s_(?:de|en)crypt|grees|code)|count|ump)|l(?:o(?:ca(?:ltimestamp|te)|g(?:10|2)|ad_file|wer)|ast_(?:inser_id|day)|e(?:as|f)t|inestring|case|trim|pad)|t(?:ime(?:_(?:format|to_sec)|stamp(?:diff|add)?|diff)|o(?:(?:second|day)s|_base64|n?char)|r(?:uncate|im))|u(?:n(?:compress(?:ed_length)?|ix_timestamp|hex)|tc_(?:time(?:stamp)?|date)|uid(?:_short)?|pdatexml|case)|m(?:a(?:ke(?:_set|date)|ster_pos_wait)|ulti(?:po(?:lygon|int)|linestring)|i(?:crosecon)?d|onthname|d5)|g(?:e(?:t_(?:format|lock)|ometrycollection)|(?:r(?:oup_conca|eates)|tid_subse)t)|p(?:o(?:(?:siti|lyg)on|w)|eriod_(?:diff|add)|rocedure_analyse|g_sleep)|a(?:s(?:cii(?:str)?|in)|es_(?:de|en)crypt|dd(?:dat|tim)e|tan2?)|f(?:rom_(?:unixtime|base64|days)|i(?:el|n)d_in_set|ound_rows)|e(?:x(?:tract(?:value)?|p(?:ort_set)?)|nc(?:rypt|ode)|lt)|b(?:i(?:t_(?:length|count|x?or|and)|n_to_num)|enchmark)|r(?:a(?:wtohex|dians|nd)|elease_lock|ow_count|trim|pad)|o(?:(?:ld_passwo)?rd|ct(?:et_length)?)|we(?:ek(?:ofyear|day)|ight_string)|n(?:ame_const|ot_in|ullif)|var(?:_(?:sam|po)p|iance)|qu(?:arter|ote)|hex(?:toraw)?|yearweek|xmltype)\\W*\\(\" \\\n    \"id:942151,\\\n    phase:2,\\\n    block,\\\n    capture,\\\n    t:none,t:urlDecodeUni,t:lowercase,\\\n    msg:'SQL Injection Attack',\\\n    logdata:'Matched Data: %{TX.0} found within %{MATCHED_VAR_NAME}: %{MATCHED_VAR}',\\\n    tag:'application-multi',\\\n    tag:'language-multi',\\\n    tag:'platform-multi',\\\n    tag:'attack-sqli',\\\n    tag:'OWASP_CRS',\\\n    tag:'capec/1000/152/248/66',\\\n    tag:'PCI/6.5.2',\\\n    tag:'paranoia-level/1',\\\n    ctl:auditLogParts=+E,\\\n    ver:'OWASP_CRS/3.4.0-dev',\\\n    severity:'CRITICAL',\\\n    setvar:'tx.sql_injection_score=+%{tx.critical_anomaly_score}',\\\n    setvar:'tx.anomaly_score_pl1=+%{tx.critical_anomaly_score}'\"\n",
        "paranoia_level": "1",
        "rule_id": "942",
        "sec_rule_id": "942151",
        "severity": "CRITICAL",
        "tags": [
            "application-multi",
            "language-multi",
            "platform-multi",
            "attack-sqli",
            "OWASP_CRS",
            "capec/1000/152/248/66",
            "PCI/6.5.2",
            "paranoia-level/1"
        ]
    },
    {
        "comment": "#\n# -=[ PHPIDS - Converted SQLI Filters ]=-\n#\n# https://raw.github.com/PHPIDS/PHPIDS/master/lib/IDS/default_filter.xml\n#\n# The rule 942160 prevents time-based blind SQL injection attempts\n# by prohibiting sleep() or benchmark(,) functions:\n#\n# * The sleep command takes a number of seconds as an argument.\n# * The benchmark command executes the specified expression multiple times.\n#\n# Using a long sleep time or high number of executions, you can create a delay\n# with the response from the server.  This allows to determine whether the\n# query has been executed or not.  A high response time proves that the SQLi\n# worked successfully. It can now be equipped with the real payload.\n#\n# Therefore this rule does not prevent the attack itself, but blocks an\n# attacker from using the standard utils to tinker with blind SQLi.\n#\n# A positive side effect is that it prevents certain DoS attacks via the directives\n# described above.\n#\n",
        "content": "SecRule REQUEST_BASENAME|REQUEST_COOKIES|!REQUEST_COOKIES:/__utm/|REQUEST_COOKIES_NAMES|ARGS_NAMES|ARGS|XML:/* \"@rx (?i:sleep\\(\\s*?\\d*?\\s*?\\)|benchmark\\(.*?\\,.*?\\))\" \\\n    \"id:942160,\\\n    phase:2,\\\n    block,\\\n    capture,\\\n    t:none,t:urlDecodeUni,\\\n    msg:'Detects blind sqli tests using sleep() or benchmark()',\\\n    logdata:'Matched Data: %{TX.0} found within %{MATCHED_VAR_NAME}: %{MATCHED_VAR}',\\\n    tag:'application-multi',\\\n    tag:'language-multi',\\\n    tag:'platform-multi',\\\n    tag:'attack-sqli',\\\n    tag:'paranoia-level/1',\\\n    tag:'OWASP_CRS',\\\n    tag:'capec/1000/152/248/66',\\\n    ver:'OWASP_CRS/3.4.0-dev',\\\n    severity:'CRITICAL',\\\n    setvar:'tx.sql_injection_score=+%{tx.critical_anomaly_score}',\\\n    setvar:'tx.inbound_anomaly_score_pl1=+%{tx.critical_anomaly_score}'\"\n",
        "description": "Detects blind sqli tests using sleep() or benchmark().",
        "paranoia_level": "1",
        "rule_id": "942",
        "sec_rule_id": "942160",
        "severity": "CRITICAL",
        "tags": [
            "application-multi",
            "language-multi",
            "platform-multi",
            "attack-sqli",
            "paranoia-level/1",
            "OWASP_CRS",
            "capec/1000/152/248/66"
        ]
    },
    {
        "comment": "# Regular expression generated from util/regexp-assemble/data/942170.data.\n# To update the regular expression run the following shell script\n# (consult util/regexp-assemble/README.md for details):\n#   util/regexp-assemble/regexp-assemble.py update 942170\n#\n",
        "content": "SecRule REQUEST_COOKIES|!REQUEST_COOKIES:/__utm/|REQUEST_COOKIES_NAMES|ARGS_NAMES|ARGS|XML:/* \"@rx (?i)(?:select|;)\\s+(?:benchmark|sleep|if)\\s*?\\(\\s*?\\(?\\s*?\\w+\" \\\n    \"id:942170,\\\n    phase:2,\\\n    block,\\\n    capture,\\\n    t:none,t:urlDecodeUni,\\\n    msg:'Detects SQL benchmark and sleep injection attempts including conditional queries',\\\n    logdata:'Matched Data: %{TX.0} found within %{MATCHED_VAR_NAME}: %{MATCHED_VAR}',\\\n    tag:'application-multi',\\\n    tag:'language-multi',\\\n    tag:'platform-multi',\\\n    tag:'attack-sqli',\\\n    tag:'paranoia-level/1',\\\n    tag:'OWASP_CRS',\\\n    tag:'capec/1000/152/248/66',\\\n    tag:'PCI/6.5.2',\\\n    ver:'OWASP_CRS/3.4.0-dev',\\\n    severity:'CRITICAL',\\\n    setvar:'tx.sql_injection_score=+%{tx.critical_anomaly_score}',\\\n    setvar:'tx.inbound_anomaly_score_pl1=+%{tx.critical_anomaly_score}'\"\n",
        "description": "Detects SQL benchmark and sleep injection attempts including conditional queries",
        "paranoia_level": "1",
        "rule_id": "942",
        "sec_rule_id": "942170",
        "severity": "CRITICAL",
        "tags": [
            "application-multi",
            "language-multi",
            "platform-multi",
            "attack-sqli",
            "paranoia-level/1",
            "OWASP_CRS",
            "capec/1000/152/248/66",
            "PCI/6.5.2"
        ]
    },
    {
        "comment": "# Regular expression generated from util/regexp-assemble/data/942190.data.\n# To update the regular expression run the following shell script\n# (consult util/regexp-assemble/README.md for details):\n#   util/regexp-assemble/regexp-assemble.py update 942190\n#\n",
        "content": "SecRule REQUEST_COOKIES|!REQUEST_COOKIES:/__utm/|REQUEST_COOKIES_NAMES|ARGS_NAMES|ARGS|XML:/* \"@rx (?i)(?:\\b(?:u(?:nion(?:[\\w(\\s]*?select|\\sselect\\s@)|ser\\s*?\\([^\\)]*?)|(?:c(?:onnection_id|urrent_user)|database)\\s*?\\([^\\)]*?|s(?:chema\\s*?\\([^\\)]*?|elect.*?\\w?user\\()|into[\\s+]+(?:dump|out)file\\s*?[\\\"'`]|from\\W+information_schema\\W|exec(?:ute)?\\s+master\\.)|[\\\"'`](?:;?\\s*?(?:union\\b\\s*?(?:(?:distin|sele)ct|all)|having|select)\\b\\s*?[^\\s]|\\s*?!\\s*?[\\\"'`\\w])|\\s*?exec(?:ute)?.*?\\Wxp_cmdshell|\\Wiif\\s*?\\()\" \\\n    \"id:942190,\\\n    phase:2,\\\n    block,\\\n    capture,\\\n    t:none,t:urlDecodeUni,t:removeCommentsChar,\\\n    msg:'Detects MSSQL code execution and information gathering attempts',\\\n    logdata:'Matched Data: %{TX.0} found within %{MATCHED_VAR_NAME}: %{MATCHED_VAR}',\\\n    tag:'application-multi',\\\n    tag:'language-multi',\\\n    tag:'platform-multi',\\\n    tag:'attack-sqli',\\\n    tag:'paranoia-level/1',\\\n    tag:'OWASP_CRS',\\\n    tag:'capec/1000/152/248/66',\\\n    tag:'PCI/6.5.2',\\\n    ver:'OWASP_CRS/3.4.0-dev',\\\n    severity:'CRITICAL',\\\n    setvar:'tx.sql_injection_score=+%{tx.critical_anomaly_score}',\\\n    setvar:'tx.inbound_anomaly_score_pl1=+%{tx.critical_anomaly_score}'\"\n",
        "description": "Detects MSSQL code execution and information gathering attempts",
        "paranoia_level": "1",
        "rule_id": "942",
        "sec_rule_id": "942190",
        "severity": "CRITICAL",
        "tags": [
            "application-multi",
            "language-multi",
            "platform-multi",
            "attack-sqli",
            "paranoia-level/1",
            "OWASP_CRS",
            "capec/1000/152/248/66",
            "PCI/6.5.2"
        ]
    },
    {
        "comment": "# Magic number crash in PHP strtod from 2011:\n# https://www.exploringbinary.com/php-hangs-on-numeric-value-2-2250738585072011e-308/\n",
        "content": "SecRule REQUEST_COOKIES|!REQUEST_COOKIES:/__utm/|REQUEST_COOKIES_NAMES|ARGS_NAMES|ARGS|XML:/* \"@rx ^(?i:-0000023456|4294967295|4294967296|2147483648|2147483647|0000012345|-2147483648|-2147483649|0000023456|2.2250738585072007e-308|2.2250738585072011e-308|1e309)$\" \\\n    \"id:942220,\\\n    phase:2,\\\n    block,\\\n    capture,\\\n    t:none,t:urlDecodeUni,\\\n    msg:'Looking for integer overflow attacks, these are taken from skipfish, except 2.2.2250738585072011e-308 is the \\\"magic number\\\" crash',\\\n    logdata:'Matched Data: %{TX.0} found within %{MATCHED_VAR_NAME}: %{MATCHED_VAR}',\\\n    tag:'application-multi',\\\n    tag:'language-multi',\\\n    tag:'platform-multi',\\\n    tag:'attack-sqli',\\\n    tag:'paranoia-level/1',\\\n    tag:'OWASP_CRS',\\\n    tag:'capec/1000/152/248/66',\\\n    tag:'PCI/6.5.2',\\\n    ver:'OWASP_CRS/3.4.0-dev',\\\n    severity:'CRITICAL',\\\n    setvar:'tx.sql_injection_score=+%{tx.critical_anomaly_score}',\\\n    setvar:'tx.inbound_anomaly_score_pl1=+%{tx.critical_anomaly_score}'\"\n",
        "description": "Looking for intiger overflow attacks, these are taken from skipfish, except 3.0.00738585072007e-308 is the \"magic number\" crash",
        "paranoia_level": "1",
        "rule_id": "942",
        "sec_rule_id": "942220",
        "severity": "CRITICAL",
        "tags": [
            "application-multi",
            "language-multi",
            "platform-multi",
            "attack-sqli",
            "paranoia-level/1",
            "OWASP_CRS",
            "capec/1000/152/248/66",
            "PCI/6.5.2"
        ]
    },
    {
        "comment": "# Regular expression generated from util/regexp-assemble/data/942230.data.\n# To update the regular expression run the following shell script\n# (consult util/regexp-assemble/README.md for details):\n#   util/regexp-assemble/regexp-assemble.py update 942230\n#\n",
        "content": "SecRule REQUEST_COOKIES|!REQUEST_COOKIES:/__utm/|REQUEST_COOKIES_NAMES|ARGS_NAMES|ARGS|XML:/* \"@rx (?i)(?:select.*?having\\s*?[^\\s]+\\s*?[^\\w\\s]|[\\s()]case\\s+when.*?then|if\\s?\\(\\w+\\s*?[=<>~]|\\)\\s*?like\\s*?\\()\" \\\n    \"id:942230,\\\n    phase:2,\\\n    block,\\\n    capture,\\\n    t:none,t:urlDecodeUni,\\\n    msg:'Detects conditional SQL injection attempts',\\\n    logdata:'Matched Data: %{TX.0} found within %{MATCHED_VAR_NAME}: %{MATCHED_VAR}',\\\n    tag:'application-multi',\\\n    tag:'language-multi',\\\n    tag:'platform-multi',\\\n    tag:'attack-sqli',\\\n    tag:'paranoia-level/1',\\\n    tag:'OWASP_CRS',\\\n    tag:'capec/1000/152/248/66',\\\n    tag:'PCI/6.5.2',\\\n    ver:'OWASP_CRS/3.4.0-dev',\\\n    severity:'CRITICAL',\\\n    setvar:'tx.sql_injection_score=+%{tx.critical_anomaly_score}',\\\n    setvar:'tx.inbound_anomaly_score_pl1=+%{tx.critical_anomaly_score}'\"\n",
        "description": "Detects conditional SQL injection attempts",
        "paranoia_level": "1",
        "rule_id": "942",
        "sec_rule_id": "942230",
        "severity": "CRITICAL",
        "tags": [
            "application-multi",
            "language-multi",
            "platform-multi",
            "attack-sqli",
            "paranoia-level/1",
            "OWASP_CRS",
            "capec/1000/152/248/66",
            "PCI/6.5.2"
        ]
    },
    {
        "comment": "# Regular expression generated from util/regexp-assemble/data/942240.data.\n# To update the regular expression run the following shell script\n# (consult util/regexp-assemble/README.md for details):\n#   util/regexp-assemble/regexp-assemble.py update 942240\n#\n",
        "content": "SecRule REQUEST_COOKIES|!REQUEST_COOKIES:/__utm/|REQUEST_COOKIES_NAMES|ARGS_NAMES|ARGS|XML:/* \"@rx (?i)(?:[\\\"'`](?:;*?\\s*?waitfor\\s+(?:delay|time)\\s+[\\\"'`]|;.*?:\\s*?goto)|alter\\s*?\\w+.*?cha(?:racte)?r\\s+set\\s+\\w+)\" \\\n    \"id:942240,\\\n    phase:2,\\\n    block,\\\n    capture,\\\n    t:none,t:urlDecodeUni,\\\n    msg:'Detects MySQL charset switch and MSSQL DoS attempts',\\\n    logdata:'Matched Data: %{TX.0} found within %{MATCHED_VAR_NAME}: %{MATCHED_VAR}',\\\n    tag:'application-multi',\\\n    tag:'language-multi',\\\n    tag:'platform-multi',\\\n    tag:'attack-sqli',\\\n    tag:'paranoia-level/1',\\\n    tag:'OWASP_CRS',\\\n    tag:'capec/1000/152/248/66',\\\n    tag:'PCI/6.5.2',\\\n    ver:'OWASP_CRS/3.4.0-dev',\\\n    severity:'CRITICAL',\\\n    setvar:'tx.sql_injection_score=+%{tx.critical_anomaly_score}',\\\n    setvar:'tx.inbound_anomaly_score_pl1=+%{tx.critical_anomaly_score}'\"\n",
        "description": "Detects MySQL charset switch and MSSQL DoS attempts",
        "paranoia_level": "1",
        "rule_id": "942",
        "sec_rule_id": "942240",
        "severity": "CRITICAL",
        "tags": [
            "application-multi",
            "language-multi",
            "platform-multi",
            "attack-sqli",
            "paranoia-level/1",
            "OWASP_CRS",
            "capec/1000/152/248/66",
            "PCI/6.5.2"
        ]
    },
    {
        "comment": "",
        "content": "SecRule REQUEST_COOKIES|!REQUEST_COOKIES:/__utm/|REQUEST_COOKIES_NAMES|ARGS_NAMES|ARGS|XML:/* \"@rx (?i:merge.*?using\\s*?\\(|execute\\s*?immediate\\s*?[\\\"'`]|match\\s*?[\\w(),+-]+\\s*?against\\s*?\\()\" \\\n    \"id:942250,\\\n    phase:2,\\\n    block,\\\n    capture,\\\n    t:none,t:urlDecodeUni,\\\n    msg:'Detects MATCH AGAINST, MERGE and EXECUTE IMMEDIATE injections',\\\n    logdata:'Matched Data: %{TX.0} found within %{MATCHED_VAR_NAME}: %{MATCHED_VAR}',\\\n    tag:'application-multi',\\\n    tag:'language-multi',\\\n    tag:'platform-multi',\\\n    tag:'attack-sqli',\\\n    tag:'paranoia-level/1',\\\n    tag:'OWASP_CRS',\\\n    tag:'capec/1000/152/248/66',\\\n    tag:'PCI/6.5.2',\\\n    ver:'OWASP_CRS/3.4.0-dev',\\\n    severity:'CRITICAL',\\\n    setvar:'tx.sql_injection_score=+%{tx.critical_anomaly_score}',\\\n    setvar:'tx.inbound_anomaly_score_pl1=+%{tx.critical_anomaly_score}'\"\n",
        "description": "Detects MATCH AGAINST, MERGE and EXECUTE IMMEDIATE injections",
        "paranoia_level": "1",
        "rule_id": "942",
        "sec_rule_id": "942250",
        "severity": "CRITICAL",
        "tags": [
            "application-multi",
            "language-multi",
            "platform-multi",
            "attack-sqli",
            "paranoia-level/1",
            "OWASP_CRS",
            "capec/1000/152/248/66",
            "PCI/6.5.2"
        ]
    },
    {
        "comment": "",
        "content": "SecRule REQUEST_COOKIES|!REQUEST_COOKIES:/__utm/|REQUEST_COOKIES_NAMES|ARGS_NAMES|ARGS|XML:/* \"@rx (?i)union.*?select.*?from\" \\\n    \"id:942270,\\\n    phase:2,\\\n    block,\\\n    capture,\\\n    t:none,t:urlDecodeUni,\\\n    msg:'Looking for basic sql injection. Common attack string for mysql, oracle and others',\\\n    logdata:'Matched Data: %{TX.0} found within %{MATCHED_VAR_NAME}: %{MATCHED_VAR}',\\\n    tag:'application-multi',\\\n    tag:'language-multi',\\\n    tag:'platform-multi',\\\n    tag:'attack-sqli',\\\n    tag:'paranoia-level/1',\\\n    tag:'OWASP_CRS',\\\n    tag:'capec/1000/152/248/66',\\\n    tag:'PCI/6.5.2',\\\n    ver:'OWASP_CRS/3.4.0-dev',\\\n    severity:'CRITICAL',\\\n    setvar:'tx.sql_injection_score=+%{tx.critical_anomaly_score}',\\\n    setvar:'tx.inbound_anomaly_score_pl1=+%{tx.critical_anomaly_score}'\"\n",
        "description": "Looking for basic sql injection. Common attack string for mysql, oracle and others.",
        "paranoia_level": "1",
        "rule_id": "942",
        "sec_rule_id": "942270",
        "severity": "CRITICAL",
        "tags": [
            "application-multi",
            "language-multi",
            "platform-multi",
            "attack-sqli",
            "paranoia-level/1",
            "OWASP_CRS",
            "capec/1000/152/248/66",
            "PCI/6.5.2"
        ]
    },
    {
        "comment": "# Regular expression generated from util/regexp-assemble/data/942280.data.\n# To update the regular expression run the following shell script\n# (consult util/regexp-assemble/README.md for details):\n#   util/regexp-assemble/regexp-assemble.py update 942280\n#\n",
        "content": "SecRule REQUEST_COOKIES|!REQUEST_COOKIES:/__utm/|REQUEST_COOKIES_NAMES|ARGS_NAMES|ARGS|XML:/* \"@rx (?i)(?:;\\s*?shutdown\\s*?(?:[#;{]|\\/\\*|--)|waitfor\\s*?delay\\s?[\\\"'`]+\\s?\\d|select\\s*?pg_sleep)\" \\\n    \"id:942280,\\\n    phase:2,\\\n    block,\\\n    capture,\\\n    t:none,t:urlDecodeUni,\\\n    msg:'Detects Postgres pg_sleep injection, waitfor delay attacks and database shutdown attempts',\\\n    logdata:'Matched Data: %{TX.0} found within %{MATCHED_VAR_NAME}: %{MATCHED_VAR}',\\\n    tag:'application-multi',\\\n    tag:'language-multi',\\\n    tag:'platform-multi',\\\n    tag:'attack-sqli',\\\n    tag:'paranoia-level/1',\\\n    tag:'OWASP_CRS',\\\n    tag:'capec/1000/152/248/66',\\\n    tag:'PCI/6.5.2',\\\n    ver:'OWASP_CRS/3.4.0-dev',\\\n    severity:'CRITICAL',\\\n    setvar:'tx.sql_injection_score=+%{tx.critical_anomaly_score}',\\\n    setvar:'tx.inbound_anomaly_score_pl1=+%{tx.critical_anomaly_score}'\"\n",
        "description": "Detects Postgres pg_sleep injection, waitfor delay attacks and database shutdown attempts",
        "paranoia_level": "1",
        "rule_id": "942",
        "sec_rule_id": "942280",
        "severity": "CRITICAL",
        "tags": [
            "application-multi",
            "language-multi",
            "platform-multi",
            "attack-sqli",
            "paranoia-level/1",
            "OWASP_CRS",
            "capec/1000/152/248/66",
            "PCI/6.5.2"
        ]
    },
    {
        "comment": "",
        "content": "SecRule REQUEST_COOKIES|!REQUEST_COOKIES:/__utm/|REQUEST_COOKIES_NAMES|ARGS_NAMES|ARGS|XML:/* \"@rx (?i:(?:\\[\\$(?:ne|eq|lte?|gte?|n?in|mod|all|size|exists|type|slice|x?or|div|like|between|and)\\]))\" \\\n    \"id:942290,\\\n    phase:2,\\\n    block,\\\n    capture,\\\n    t:none,t:urlDecodeUni,\\\n    msg:'Finds basic MongoDB SQL injection attempts',\\\n    logdata:'Matched Data: %{TX.0} found within %{MATCHED_VAR_NAME}: %{MATCHED_VAR}',\\\n    tag:'application-multi',\\\n    tag:'language-multi',\\\n    tag:'platform-multi',\\\n    tag:'attack-sqli',\\\n    tag:'paranoia-level/1',\\\n    tag:'OWASP_CRS',\\\n    tag:'capec/1000/152/248/66',\\\n    tag:'PCI/6.5.2',\\\n    ver:'OWASP_CRS/3.4.0-dev',\\\n    severity:'CRITICAL',\\\n    setvar:'tx.sql_injection_score=+%{tx.critical_anomaly_score}',\\\n    setvar:'tx.inbound_anomaly_score_pl1=+%{tx.critical_anomaly_score}'\"\n",
        "description": "Finds basic MongoDB SQL injection attempts",
        "paranoia_level": "1",
        "rule_id": "942",
        "sec_rule_id": "942290",
        "severity": "CRITICAL",
        "tags": [
            "application-multi",
            "language-multi",
            "platform-multi",
            "attack-sqli",
            "paranoia-level/1",
            "OWASP_CRS",
            "capec/1000/152/248/66",
            "PCI/6.5.2"
        ]
    },
    {
        "comment": "# Regular expression generated from util/regexp-assemble/data/942320.data.\n# To update the regular expression run the following shell script\n# (consult util/regexp-assemble/README.md for details):\n#   util/regexp-assemble/regexp-assemble.py update 942320\n#\n",
        "content": "SecRule REQUEST_COOKIES|!REQUEST_COOKIES:/__utm/|REQUEST_COOKIES_NAMES|ARGS_NAMES|ARGS|XML:/* \"@rx (?i)(?:create\\s+(?:procedure|function)\\s*?\\w+\\s*?\\(\\s*?\\)\\s*?-|;\\s*?(?:declare|open)\\s+[\\w-]+|procedure\\s+analyse\\s*?\\(|declare[^\\w]+[@#]\\s*?\\w+|exec\\s*?\\(\\s*?@)\" \\\n    \"id:942320,\\\n    phase:2,\\\n    block,\\\n    capture,\\\n    t:none,t:urlDecodeUni,\\\n    msg:'Detects MySQL and PostgreSQL stored procedure/function injections',\\\n    logdata:'Matched Data: %{TX.0} found within %{MATCHED_VAR_NAME}: %{MATCHED_VAR}',\\\n    tag:'application-multi',\\\n    tag:'language-multi',\\\n    tag:'platform-multi',\\\n    tag:'attack-sqli',\\\n    tag:'paranoia-level/1',\\\n    tag:'OWASP_CRS',\\\n    tag:'capec/1000/152/248/66',\\\n    tag:'PCI/6.5.2',\\\n    ver:'OWASP_CRS/3.4.0-dev',\\\n    severity:'CRITICAL',\\\n    setvar:'tx.sql_injection_score=+%{tx.critical_anomaly_score}',\\\n    setvar:'tx.inbound_anomaly_score_pl1=+%{tx.critical_anomaly_score}'\"\n",
        "description": "Detects MySQL and PostgreSQL stored procedure/function injections",
        "paranoia_level": "1",
        "rule_id": "942",
        "sec_rule_id": "942320",
        "severity": "CRITICAL",
        "tags": [
            "application-multi",
            "language-multi",
            "platform-multi",
            "attack-sqli",
            "paranoia-level/1",
            "OWASP_CRS",
            "capec/1000/152/248/66",
            "PCI/6.5.2"
        ]
    },
    {
        "comment": "# Regular expression generated from util/regexp-assemble/data/942350.data.\n# To update the regular expression run the following shell script\n# (consult util/regexp-assemble/README.md for details):\n#   util/regexp-assemble/regexp-assemble.py update 942350\n#\n",
        "content": "SecRule REQUEST_COOKIES|!REQUEST_COOKIES:/__utm/|REQUEST_COOKIES_NAMES|ARGS_NAMES|ARGS|XML:/* \"@rx (?i)(?:;\\s*?(?:(?:(?:trunc|cre|upd)at|renam)e|d(?:e(?:lete|sc)|rop)|(?:inser|selec)t|alter|load)\\b\\s*?[\\[(]?\\w{2,}|create\\s+function\\s.+\\sreturns)\" \\\n    \"id:942350,\\\n    phase:2,\\\n    block,\\\n    capture,\\\n    t:none,t:urlDecodeUni,\\\n    msg:'Detects MySQL UDF injection and other data/structure manipulation attempts',\\\n    logdata:'Matched Data: %{TX.0} found within %{MATCHED_VAR_NAME}: %{MATCHED_VAR}',\\\n    tag:'application-multi',\\\n    tag:'language-multi',\\\n    tag:'platform-multi',\\\n    tag:'attack-sqli',\\\n    tag:'paranoia-level/1',\\\n    tag:'OWASP_CRS',\\\n    tag:'capec/1000/152/248/66',\\\n    tag:'PCI/6.5.2',\\\n    ver:'OWASP_CRS/3.4.0-dev',\\\n    severity:'CRITICAL',\\\n    setvar:'tx.sql_injection_score=+%{tx.critical_anomaly_score}',\\\n    setvar:'tx.inbound_anomaly_score_pl1=+%{tx.critical_anomaly_score}'\"\n",
        "description": "Detects MySQL UDF injection and other data/structure manipulation attempts",
        "paranoia_level": "1",
        "rule_id": "942",
        "sec_rule_id": "942350",
        "severity": "CRITICAL",
        "tags": [
            "application-multi",
            "language-multi",
            "platform-multi",
            "attack-sqli",
            "paranoia-level/1",
            "OWASP_CRS",
            "capec/1000/152/248/66",
            "PCI/6.5.2"
        ]
    },
    {
        "comment": "# This rule has two stricter sibling: 942361 and 942362.\n# The keywords 'alter' and 'union' led to false positives.\n# Therefore they have been moved to PL2 and the keywords have been extended on PL1.\n# The original version also had loose word boundaries and context checksm cause further false positives.\n# Because fixing those introduced bypass, the original variant was moved to PL2 as 942362.\n#\n# Sources for SQL ALTER statements:\n# MySQL: https://dev.mysql.com/doc/refman/5.7/en/sql-syntax-data-definition.html\n# Oracle/PLSQL: https://docs.oracle.com/apps/search/search.jsp?q=alter&size=60&category=database\n# PostgreQSL: https://www.postgresql.org/search/?u=%2Fdocs&q=alter\n# MSSQL: https://docs.microsoft.com/en-us/sql/t-sql/statements/statements\n# DB2: https://www.ibm.com/support/knowledgecenter/en/search/alter?scope=SSEPGG_9.5.0\n#\n# Regular expression generated from util/regexp-assemble/data/942360.data.\n# To update the regular expression run the following shell script\n# (consult util/regexp-assemble/README.md for details):\n#   util/regexp-assemble/regexp-assemble.py update 942360\n#\n",
        "content": "SecRule REQUEST_COOKIES|!REQUEST_COOKIES:/__utm/|REQUEST_COOKIES_NAMES|ARGS_NAMES|ARGS|XML:/* \"@rx (?i)(?:^[\\W\\d]+\\s*?(?:alter\\s*(?:a(?:(?:pplication\\s*rol|ggregat)e|s(?:ymmetric\\s*ke|sembl)y|u(?:thorization|dit)|vailability\\s*group)|c(?:r(?:yptographic\\s*provider|edential)|o(?:l(?:latio|um)|nversio)n|ertificate|luster)|s(?:e(?:rv(?:ice|er)|curity|quence|ssion|arch)|y(?:mmetric\\s*key|nonym)|togroup|chema)|m(?:a(?:s(?:ter\\s*key|k)|terialized)|e(?:ssage\\s*type|thod)|odule)|l(?:o(?:g(?:file\\s*group|in)|ckdown)|a(?:ngua|r)ge|ibrary)|t(?:(?:abl(?:espac)?|yp)e|r(?:igger|usted)|hreshold|ext)|p(?:a(?:rtition|ckage)|ro(?:cedur|fil)e|ermission)|d(?:i(?:mension|skgroup)|atabase|efault|omain)|r(?:o(?:l(?:lback|e)|ute)|e(?:sourc|mot)e)|f(?:u(?:lltext|nction)|lashback|oreign)|e(?:xte(?:nsion|rnal)|(?:ndpoi|ve)nt)|in(?:dex(?:type)?|memory|stance)|b(?:roker\\s*priority|ufferpool)|x(?:ml\\s*schema|srobject)|w(?:ork(?:load)?|rapper)|hi(?:erarchy|stogram)|o(?:perator|utline)|(?:nicknam|queu)e|us(?:age|er)|group|java|view)\\b|(?:(?:(?:trunc|cre)at|renam)e|d(?:e(?:lete|sc)|rop)|(?:inser|selec)t|load)\\s+\\w+|u(?:nion\\s*(?:(?:distin|sele)ct|all)\\b|pdate\\s+\\w+))|\\b(?:(?:(?:(?:trunc|cre|upd)at|renam)e|(?:inser|selec)t|de(?:lete|sc)|alter|load)\\s+(?:group_concat|load_file|char)\\b\\s*\\(?|end\\s*?\\);)|[\\\"'`\\w]\\s+as\\b\\s*[\\\"'`\\w]+\\s*\\bfrom|[\\s(]load_file\\s*?\\(|[\\\"'`]\\s+regexp\\W)\" \\\n    \"id:942360,\\\n    phase:2,\\\n    block,\\\n    capture,\\\n    t:none,t:urlDecodeUni,\\\n    msg:'Detects concatenated basic SQL injection and SQLLFI attempts',\\\n    logdata:'Matched Data: %{TX.0} found within %{MATCHED_VAR_NAME}: %{MATCHED_VAR}',\\\n    tag:'application-multi',\\\n    tag:'language-multi',\\\n    tag:'platform-multi',\\\n    tag:'attack-sqli',\\\n    tag:'paranoia-level/1',\\\n    tag:'OWASP_CRS',\\\n    tag:'capec/1000/152/248/66',\\\n    tag:'PCI/6.5.2',\\\n    ver:'OWASP_CRS/3.4.0-dev',\\\n    severity:'CRITICAL',\\\n    setvar:'tx.sql_injection_score=+%{tx.critical_anomaly_score}',\\\n    setvar:'tx.inbound_anomaly_score_pl1=+%{tx.critical_anomaly_score}'\"\n",
        "description": "Detects concatenated basic SQL injection and SQLLFI attempts",
        "paranoia_level": "1",
        "rule_id": "942",
        "sec_rule_id": "942360",
        "severity": "CRITICAL",
        "tags": [
            "application-multi",
            "language-multi",
            "platform-multi",
            "attack-sqli",
            "paranoia-level/1",
            "OWASP_CRS",
            "capec/1000/152/248/66",
            "PCI/6.5.2"
        ]
    },
    {
        "comment": "#\n# -=[ Detect MySQL in-line comments ]=-\n#\n# MySQL in-line comments can be used to bypass SQLi detection.\n#\n# Ref: https://dev.mysql.com/doc/refman/8.0/en/comments.html:\n# SELECT /*! STRAIGHT_JOIN */ col1 FROM table1,table2 WHERE ...\n# CREATE TABLE t1(a INT, KEY (a)) /*!50110 KEY_BLOCK_SIZE=1024 */;\n# SELECT /*+ BKA(t1) */ FROM ... ;\n#\n# http://localhost/test.php?id=9999+or+{if+length((/*!5000select+username/*!50000from*/user+where+id=1))>0}\n#\n# The minimal string that triggers this regexp is: /*!*/ or /*+*/.\n# The rule 942500 is related to 942440 which catches both /*! and */ independently.\n#\n",
        "content": "SecRule REQUEST_COOKIES|!REQUEST_COOKIES:/__utm/|REQUEST_COOKIES_NAMES|ARGS_NAMES|ARGS|XML:/* \"@rx (?i:/\\*[!+](?:[\\w\\s=_\\-()]+)?\\*/)\" \\\n    \"id:942500,\\\n    phase:2,\\\n    block,\\\n    capture,\\\n    t:none,t:urlDecodeUni,\\\n    msg:'MySQL in-line comment detected',\\\n    logdata:'Matched Data: %{TX.0} found within %{MATCHED_VAR_NAME}: %{MATCHED_VAR}',\\\n    tag:'application-multi',\\\n    tag:'language-multi',\\\n    tag:'platform-multi',\\\n    tag:'attack-sqli',\\\n    tag:'paranoia-level/1',\\\n    tag:'OWASP_CRS',\\\n    tag:'capec/1000/152/248/66',\\\n    tag:'PCI/6.5.2',\\\n    ver:'OWASP_CRS/3.4.0-dev',\\\n    severity:'CRITICAL',\\\n    setvar:'tx.sql_injection_score=+%{tx.critical_anomaly_score}',\\\n    setvar:'tx.inbound_anomaly_score_pl1=+%{tx.critical_anomaly_score}'\"\n",
        "paranoia_level": "1",
        "rule_id": "942",
        "sec_rule_id": "942500",
        "severity": "CRITICAL",
        "tags": [
            "application-multi",
            "language-multi",
            "platform-multi",
            "attack-sqli",
            "paranoia-level/1",
            "OWASP_CRS",
            "capec/1000/152/248/66",
            "PCI/6.5.2"
        ]
    },
    {
        "comment": "",
        "content": "SecRule TX:DETECTION_PARANOIA_LEVEL \"@lt 2\" \"id:942013,phase:1,pass,nolog,skipAfter:END-REQUEST-942-APPLICATION-ATTACK-SQLI\"\n",
        "rule_id": "942",
        "sec_rule_id": "942013"
    },
    {
        "comment": "",
        "content": "SecRule TX:DETECTION_PARANOIA_LEVEL \"@lt 2\" \"id:942014,phase:2,pass,nolog,skipAfter:END-REQUEST-942-APPLICATION-ATTACK-SQLI\"\n",
        "rule_id": "942",
        "sec_rule_id": "942014"
    },
    {
        "comment": "#\n# -=[ String Termination/Statement Ending Injection Testing ]=-\n#\n# Identifies common initial SQLi probing requests where attackers insert/append\n# quote characters to the existing normal payload to see how the app/db responds.\n#\n# This rule is also triggered by the following exploit(s):\n# [ SAP CRM Java vulnerability CVE-2018-2380 - Exploit tested: https://www.exploit-db.com/exploits/44292 ]\n#\n",
        "content": "SecRule ARGS_NAMES|ARGS|XML:/* \"@rx (?:^\\s*[\\\"'`;]+|[\\\"'`]+\\s*$)\" \\\n    \"id:942110,\\\n    phase:2,\\\n    block,\\\n    capture,\\\n    t:none,t:utf8toUnicode,t:urlDecodeUni,\\\n    msg:'SQL Injection Attack: Common Injection Testing Detected',\\\n    logdata:'Matched Data: %{TX.0} found within %{MATCHED_VAR_NAME}: %{MATCHED_VAR}',\\\n    tag:'application-multi',\\\n    tag:'language-multi',\\\n    tag:'platform-multi',\\\n    tag:'attack-sqli',\\\n    tag:'OWASP_CRS',\\\n    tag:'capec/1000/152/248/66',\\\n    tag:'PCI/6.5.2',\\\n    tag:'paranoia-level/2',\\\n    ver:'OWASP_CRS/3.4.0-dev',\\\n    severity:'WARNING',\\\n    setvar:'tx.sql_injection_score=+%{tx.warning_anomaly_score}',\\\n    setvar:'tx.inbound_anomaly_score_pl2=+%{tx.warning_anomaly_score}'\"\n",
        "description": "SQL Injection Attack: Common Injection Testing Detected",
        "paranoia_level": "2",
        "rule_id": "942",
        "sec_rule_id": "942110",
        "severity": "WARNING",
        "tags": [
            "application-multi",
            "language-multi",
            "platform-multi",
            "attack-sqli",
            "OWASP_CRS",
            "capec/1000/152/248/66",
            "PCI/6.5.2",
            "paranoia-level/2"
        ]
    },
    {
        "comment": "#\n# -=[ SQL Operators ]=-\n#\n# This rule is also triggered by the following exploit(s):\n# [ SAP CRM Java vulnerability CVE-2018-2380 - Exploit tested: https://www.exploit-db.com/exploits/44292 ]\n#\n# Regular expression generated from util/regexp-assemble/data/942120.data.\n# To update the regular expression run the following shell script\n# (consult util/regexp-assemble/README.md for details):\n#   util/regexp-assemble/regexp-assemble.py update 942120\n#\n",
        "content": "SecRule ARGS_NAMES|ARGS|XML:/* \"@rx (?i)(?:not\\s+between\\s+(?:(?:(?:'[^']*')|(?:\\\"[^\\\"]*\\\"))\\s+and\\s+(?:(?:'[^']*')|(?:\\\"[^\\\"]*\\\"))|0\\s+and)|(?:^|\\W)in[+\\s]*\\([\\s\\d\\\"]+[^()]*\\)|\\b(?:r(?:egexp|like)|isnull|xor)\\b|<(?:>(?:\\s+binary)?|=>?|<)|r(?:egexp|like)\\s+binary|(?:like|is)\\s+null|>[=>]|\\|\\||!=|&&)\" \\\n    \"id:942120,\\\n    phase:2,\\\n    block,\\\n    capture,\\\n    t:none,t:utf8toUnicode,t:urlDecodeUni,\\\n    msg:'SQL Injection Attack: SQL Operator Detected',\\\n    logdata:'Matched Data: %{TX.0} found within %{MATCHED_VAR_NAME}: %{MATCHED_VAR}',\\\n    tag:'application-multi',\\\n    tag:'language-multi',\\\n    tag:'platform-multi',\\\n    tag:'attack-sqli',\\\n    tag:'OWASP_CRS',\\\n    tag:'capec/1000/152/248/66',\\\n    tag:'PCI/6.5.2',\\\n    tag:'paranoia-level/2',\\\n    ver:'OWASP_CRS/3.4.0-dev',\\\n    severity:'CRITICAL',\\\n    setvar:'tx.sql_injection_score=+%{tx.critical_anomaly_score}',\\\n    setvar:'tx.inbound_anomaly_score_pl2=+%{tx.critical_anomaly_score}'\"\n",
        "description": "SQL Injection Attack: SQL Operator Detected",
        "paranoia_level": "2",
        "rule_id": "942",
        "sec_rule_id": "942120",
        "severity": "CRITICAL",
        "tags": [
            "application-multi",
            "language-multi",
            "platform-multi",
            "attack-sqli",
            "OWASP_CRS",
            "capec/1000/152/248/66",
            "PCI/6.5.2",
            "paranoia-level/2"
        ]
    },
    {
        "comment": "#\n# -=[ SQL Tautologies ]=-\n#\n# Boolean-based SQL injection or tautology attack. Boolean values (True or False) are used to carry out\n# this type of SQL injection. The malicious SQL query forces the web application to return a different result de-\n# pending on whether the query returns a TRUE or FALSE result.\n#\n# The original 942130 was split in two rules:\n# - 942130 targets tautologies using equalities (e.g. 1 = 1)\n# - 942131 targets tautologies using inequalities (e.g. 1 != 2)\n#\n# We use captures to check for (in)equality in the regexp. So TX.1 will capture the left hand side (LHS) of the inequality,\n# and TX.2 will capture the right hand side (RHS) of the logical query.\n#\n# Regular expression generated from util/regexp-assemble/data/942130.data.\n# To update the regular expression run the following shell script\n# (consult util/regexp-assemble/README.md for details):\n#   util/regexp-assemble/regexp-assemble.py update 942130\n#\n",
        "content": "SecRule ARGS_NAMES|ARGS|XML:/* \"@rx (?i)[\\s'\\\"`()]*?\\b([\\d\\w]+)\\b[\\s'\\\"`()]*?(?:(?:sounds\\s+)?like|r(?:egexp|like)|<=>|=)[\\s'\\\"`()]*?\\b([\\d\\w]+)\\b\" \\\n    \"id:942130,\\\n    phase:2,\\\n    block,\\\n    capture,\\\n    t:none,t:urlDecodeUni,t:replaceComments,\\\n    msg:'SQL Injection Attack: SQL Boolean-based attack detected',\\\n    logdata:'Matched Data: %{TX.0} found within %{TX.942130_MATCHED_VAR_NAME}: %{MATCHED_VAR}',\\\n    tag:'application-multi',\\\n    tag:'language-multi',\\\n    tag:'platform-multi',\\\n    tag:'attack-sqli',\\\n    tag:'OWASP_CRS',\\\n    tag:'capec/1000/152/248/66',\\\n    tag:'PCI/6.5.2',\\\n    tag:'paranoia-level/2',\\\n    ver:'OWASP_CRS/3.4.0-dev',\\\n    severity:'CRITICAL',\\\n    setvar:'tx.942130_lhs=%{TX.1}',\\\n    setvar:'tx.942130_matched_var_name=%{matched_var_name}',\\\n    chain\"\n    SecRule TX:942130_lhs \"@streq %{TX.2}\" \\\n        \"t:none,\\\n        setvar:'tx.sql_injection_score=+%{tx.critical_anomaly_score}',\\\n        setvar:'tx.anomaly_score_pl2=+%{tx.critical_anomaly_score}'\"\n",
        "description": "SQL Injection Attack: SQL Tautology Detected.",
        "paranoia_level": "2",
        "rule_id": "942",
        "sec_rule_id": "942130",
        "severity": "CRITICAL",
        "tags": [
            "application-multi",
            "language-multi",
            "platform-multi",
            "attack-sqli",
            "OWASP_CRS",
            "capec/1000/152/248/66",
            "PCI/6.5.2",
            "paranoia-level/2"
        ]
    },
    {
        "comment": "# Rule Targeting logical inequalities that return TRUE (e.g. 1 != 2)\n#\n#\n# We use captures to check for (in)equality in the regexp. So TX.1 will capture the left hand side (LHS) of the inequality,\n# and TX.2 will capture the right hand side (RHS) of the logical query.\n#\n# Regular expression generated from util/regexp-assemble/data/942131.data.\n# To update the regular expression run the following shell script\n# (consult util/regexp-assemble/README.md for details):\n#   util/regexp-assemble/regexp-assemble.py update 942131\n#\n",
        "content": "SecRule ARGS_NAMES|ARGS|XML:/* \"@rx (?i)[\\s'\\\"`()]*?\\b([\\d\\w]+)\\b[\\s'\\\"`()]*?(?:not\\s+(?:r(?:egexp|like)|like)|is\\s+not|![<=>]|<[=>]?|>=?|\\^)[\\s'\\\"`()]*?\\b([\\d\\w]+)\\b\" \\\n    \"id:942131,\\\n    phase:2,\\\n    block,\\\n    capture,\\\n    t:none,t:urlDecodeUni,t:replaceComments,\\\n    msg:'SQL Injection Attack: SQL Boolean-based attack detected',\\\n    logdata:'Matched Data: %{TX.0} found within %{TX.942131_MATCHED_VAR_NAME}: %{MATCHED_VAR}',\\\n    tag:'application-multi',\\\n    tag:'language-multi',\\\n    tag:'platform-multi',\\\n    tag:'attack-sqli',\\\n    tag:'OWASP_CRS',\\\n    tag:'capec/1000/152/248/66',\\\n    tag:'PCI/6.5.2',\\\n    tag:'paranoia-level/2',\\\n    ver:'OWASP_CRS/3.4.0-dev',\\\n    severity:'CRITICAL',\\\n    multiMatch,\\\n    setvar:'tx.942131_lhs=%{TX.1}',\\\n    setvar:'tx.942131_matched_var_name=%{matched_var_name}',\\\n    chain\"\n    SecRule TX:942131_lhs \"!@streq %{TX.2}\" \\\n        \"t:none,\\\n        setvar:'tx.sql_injection_score=+%{tx.critical_anomaly_score}',\\\n        setvar:'tx.inbound_anomaly_score_pl2=+%{tx.critical_anomaly_score}'\"\n",
        "paranoia_level": "2",
        "rule_id": "942",
        "sec_rule_id": "942131",
        "severity": "CRITICAL",
        "tags": [
            "application-multi",
            "language-multi",
            "platform-multi",
            "attack-sqli",
            "OWASP_CRS",
            "capec/1000/152/248/66",
            "PCI/6.5.2",
            "paranoia-level/2"
        ]
    },
    {
        "comment": "#\n# -=[ SQL Function Names ]=-\n#\n# This rule has one less stricter sibling: 942151.\n# This rule is also triggered by the following exploit(s):\n# [ SAP CRM Java vulnerability CVE-2018-2380 - Exploit tested: https://www.exploit-db.com/exploits/44292 ]\n#\n# Regular expression generated from util/regexp-assemble/data/942150.data.\n# To update the regular expression run the following shell script\n# (consult util/regexp-assemble/README.md for details):\n#   util/regexp-assemble/regexp-assemble.py update 942150\n#\n",
        "content": "SecRule REQUEST_COOKIES|!REQUEST_COOKIES:/__utm/|REQUEST_COOKIES_NAMES|ARGS_NAMES|ARGS|XML:/* \"@rx (?i)\\b(?:r(?:e(?:p(?:lace|eat)|verse)|ight|ound)|c(?:h(?:ar(?:set)?|r)|(?:oun|as)t)|m(?:in(?:ute)?|o(?:nth|d)|ax)|l(?:o(?:cal|g)|ength|ast|n)|(?:u(?:pp|s)e|hou|yea)r|s(?:econd|leep|ign|um)|d(?:a(?:te|y)|efault)|f(?:ormat|ield|loor)|p(?:assword|ower|i)|a(?:(?:co|b)s|vg)|v(?:ersion|alues)|t(?:ime|an)|i[fn]|week|bin|now)\\W*\\(\" \\\n    \"id:942150,\\\n    phase:2,\\\n    block,\\\n    capture,\\\n    t:none,t:urlDecodeUni,t:lowercase,\\\n    msg:'SQL Injection Attack',\\\n    logdata:'Matched Data: %{TX.0} found within %{MATCHED_VAR_NAME}: %{MATCHED_VAR}',\\\n    tag:'application-multi',\\\n    tag:'language-multi',\\\n    tag:'platform-multi',\\\n    tag:'attack-sqli',\\\n    tag:'OWASP_CRS',\\\n    tag:'capec/1000/152/248/66',\\\n    tag:'PCI/6.5.2',\\\n    tag:'paranoia-level/2',\\\n    ctl:auditLogParts=+E,\\\n    ver:'OWASP_CRS/3.4.0-dev',\\\n    severity:'CRITICAL',\\\n    setvar:'tx.sql_injection_score=+%{tx.critical_anomaly_score}',\\\n    setvar:'tx.inbound_anomaly_score_pl2=+%{tx.critical_anomaly_score}'\"\n",
        "description": "SQL Injection Attack",
        "paranoia_level": "2",
        "rule_id": "942",
        "sec_rule_id": "942150",
        "severity": "CRITICAL",
        "tags": [
            "application-multi",
            "language-multi",
            "platform-multi",
            "attack-sqli",
            "OWASP_CRS",
            "capec/1000/152/248/66",
            "PCI/6.5.2",
            "paranoia-level/2"
        ]
    },
    {
        "comment": "# Regular expression generated from util/regexp-assemble/data/942180.data.\n# To update the regular expression run the following shell script\n# (consult util/regexp-assemble/README.md for details):\n#   util/regexp-assemble/regexp-assemble.py update 942180\n#\n",
        "content": "SecRule REQUEST_COOKIES|!REQUEST_COOKIES:/__utm/|REQUEST_COOKIES_NAMES|ARGS_NAMES|ARGS|XML:/* \"@rx (?i)(?:[\\\"'`](?:\\s*?(?:(?:between|x?or|and|div)[\\w\\s-]+\\s*?[+<>=(),-]\\s*?[\\d\\\"'`]|like(?:[\\w\\s-]+\\s*?[+<>=(),-]\\s*?[\\d\\\"'`]|\\W+[\\w\\\"'`(])|[!=|](?:[\\d\\s!=+-]+.*?[\\\"'`(].*?|[\\d\\s!=]+.*?\\d+)$|[^\\w\\s]?=\\s*?[\\\"'`])|(?:\\W*?[+=]+\\W*?|[<>~]+)[\\\"'`])|(?:/\\*)+[\\\"'`]+\\s?(?:[#{]|\\/\\*|--)?|\\d[\\\"'`]\\s+[\\\"'`]\\s+\\d|where\\s[\\s\\w\\.,-]+\\s=|^admin\\s*?[\\\"'`]|\\sis\\s*?0\\W)\" \\\n    \"id:942180,\\\n    phase:2,\\\n    block,\\\n    capture,\\\n    t:none,t:urlDecodeUni,\\\n    msg:'Detects basic SQL authentication bypass attempts 1/3',\\\n    logdata:'Matched Data: %{TX.0} found within %{MATCHED_VAR_NAME}: %{MATCHED_VAR}',\\\n    tag:'application-multi',\\\n    tag:'language-multi',\\\n    tag:'platform-multi',\\\n    tag:'attack-sqli',\\\n    tag:'OWASP_CRS',\\\n    tag:'capec/1000/152/248/66',\\\n    tag:'PCI/6.5.2',\\\n    tag:'paranoia-level/2',\\\n    ver:'OWASP_CRS/3.4.0-dev',\\\n    severity:'CRITICAL',\\\n    setvar:'tx.sql_injection_score=+%{tx.critical_anomaly_score}',\\\n    setvar:'tx.inbound_anomaly_score_pl2=+%{tx.critical_anomaly_score}'\"\n",
        "description": "Detects basic SQL authentication bypass attempts 1/3",
        "paranoia_level": "2",
        "rule_id": "942",
        "sec_rule_id": "942180",
        "severity": "CRITICAL",
        "tags": [
            "application-multi",
            "language-multi",
            "platform-multi",
            "attack-sqli",
            "OWASP_CRS",
            "capec/1000/152/248/66",
            "PCI/6.5.2",
            "paranoia-level/2"
        ]
    },
    {
        "comment": "# This rule is also triggered by the following exploit(s):\n# [ SAP CRM Java vulnerability CVE-2018-2380 - Exploit tested: https://www.exploit-db.com/exploits/44292 ]\n#\n# Regular expression generated from util/regexp-assemble/data/942200.data.\n# To update the regular expression run the following shell script\n# (consult util/regexp-assemble/README.md for details):\n#   util/regexp-assemble/regexp-assemble.py update 942200\n#\n",
        "content": "SecRule REQUEST_COOKIES|!REQUEST_COOKIES:/__utm/|REQUEST_COOKIES_NAMES|ARGS_NAMES|ARGS|XML:/* \"@rx (?i)(?:(?:(?:(?:trunc|cre|upd)at|renam)e|d(?:e(?:lete|sc)|rop)|(?:inser|selec)t|alter|load)\\s*?\\(\\s*?space\\s*?\\(|,.*?[)\\da-f\\\"'`][\\\"'`](?:[\\\"'`].*?[\\\"'`]|(?:\\r?\\n)?\\z|[^\\\"'`]+)|\\Wselect.+\\W*?from)\" \\\n    \"id:942200,\\\n    phase:2,\\\n    block,\\\n    capture,\\\n    t:none,t:urlDecodeUni,\\\n    msg:'Detects MySQL comment-/space-obfuscated injections and backtick termination',\\\n    logdata:'Matched Data: %{TX.0} found within %{MATCHED_VAR_NAME}: %{MATCHED_VAR}',\\\n    tag:'application-multi',\\\n    tag:'language-multi',\\\n    tag:'platform-multi',\\\n    tag:'attack-sqli',\\\n    tag:'OWASP_CRS',\\\n    tag:'capec/1000/152/248/66',\\\n    tag:'PCI/6.5.2',\\\n    tag:'paranoia-level/2',\\\n    ver:'OWASP_CRS/3.4.0-dev',\\\n    severity:'CRITICAL',\\\n    setvar:'tx.sql_injection_score=+%{tx.critical_anomaly_score}',\\\n    setvar:'tx.inbound_anomaly_score_pl2=+%{tx.critical_anomaly_score}'\"\n",
        "description": "Detects MySQL comment-/space-obfuscated injections and backtick termination",
        "paranoia_level": "2",
        "rule_id": "942",
        "sec_rule_id": "942200",
        "severity": "CRITICAL",
        "tags": [
            "application-multi",
            "language-multi",
            "platform-multi",
            "attack-sqli",
            "OWASP_CRS",
            "capec/1000/152/248/66",
            "PCI/6.5.2",
            "paranoia-level/2"
        ]
    },
    {
        "comment": "# This rule is also triggered by the following exploit(s):\n# [ SAP CRM Java vulnerability CVE-2018-2380 - Exploit tested: https://www.exploit-db.com/exploits/44292 ]\n#\n# Regular expression generated from util/regexp-assemble/data/942210.data.\n# To update the regular expression run the following shell script\n# (consult util/regexp-assemble/README.md for details):\n#   util/regexp-assemble/regexp-assemble.py update 942210\n#\n",
        "content": "SecRule REQUEST_COOKIES|!REQUEST_COOKIES:/__utm/|REQUEST_COOKIES_NAMES|ARGS_NAMES|ARGS|XML:/* \"@rx (?i)(?:(?:n(?:and|ot)|(?:x?x)?or|between|\\|\\||like|and|div|&&)[\\s(]+\\w+[\\s)]*?[!=+]+[\\s\\d]*?[\\\"'`=()]|\\d(?:\\s*?(?:between|like|x?or|and|div)\\s*?\\d+\\s*?[\\-+]|\\s+group\\s+by.+\\()|\\/\\w+;?\\s+(?:between|having|select|like|x?or|and|div)\\W|--\\s*?(?:(?:insert|update)\\s*?\\w{2,}|alter|drop)|#\\s*?(?:(?:insert|update)\\s*?\\w{2,}|alter|drop)|;\\s*?(?:(?:insert|update)\\s*?\\w{2,}|alter|drop)|@.+=\\s*?\\(\\s*?select|[^\\w]SET\\s*?@\\w+)\" \\\n    \"id:942210,\\\n    phase:2,\\\n    block,\\\n    capture,\\\n    t:none,t:urlDecodeUni,\\\n    msg:'Detects chained SQL injection attempts 1/2',\\\n    logdata:'Matched Data: %{TX.0} found within %{MATCHED_VAR_NAME}: %{MATCHED_VAR}',\\\n    tag:'application-multi',\\\n    tag:'language-multi',\\\n    tag:'platform-multi',\\\n    tag:'attack-sqli',\\\n    tag:'OWASP_CRS',\\\n    tag:'capec/1000/152/248/66',\\\n    tag:'PCI/6.5.2',\\\n    tag:'paranoia-level/2',\\\n    ver:'OWASP_CRS/3.4.0-dev',\\\n    severity:'CRITICAL',\\\n    setvar:'tx.sql_injection_score=+%{tx.critical_anomaly_score}',\\\n    setvar:'tx.inbound_anomaly_score_pl2=+%{tx.critical_anomaly_score}'\"\n",
        "description": "Detects chained SQL injection attempts 1/2",
        "paranoia_level": "2",
        "rule_id": "942",
        "sec_rule_id": "942210",
        "severity": "CRITICAL",
        "tags": [
            "application-multi",
            "language-multi",
            "platform-multi",
            "attack-sqli",
            "OWASP_CRS",
            "capec/1000/152/248/66",
            "PCI/6.5.2",
            "paranoia-level/2"
        ]
    },
    {
        "comment": "# Regular expression generated from util/regexp-assemble/data/942260.data.\n# To update the regular expression run the following shell script\n# (consult util/regexp-assemble/README.md for details):\n#   util/regexp-assemble/regexp-assemble.py update 942260\n#\n",
        "content": "SecRule REQUEST_COOKIES|!REQUEST_COOKIES:/__utm/|REQUEST_COOKIES_NAMES|ARGS_NAMES|ARGS|XML:/* \"@rx (?i)(?:[\\\"'`]\\s*?(?:(?:n(?:and|ot)|(?:x?x)?or|between|\\|\\||and|div|&&)\\s+[\\s\\w]+=\\s*?\\w+\\s*?having\\s+|like(?:\\s+[\\s\\w]+=\\s*?\\w+\\s*?having\\s+|\\W*?[\\\"'`\\d]))|select\\s+?[\\[\\]()\\s\\w\\.,\\\"'`-]+from\\s+|\\w\\s+like\\s+[\\\"'`]|like\\s*?[\\\"'`]%)\" \\\n    \"id:942260,\\\n    phase:2,\\\n    block,\\\n    capture,\\\n    t:none,t:urlDecodeUni,\\\n    msg:'Detects basic SQL authentication bypass attempts 2/3',\\\n    logdata:'Matched Data: %{TX.0} found within %{MATCHED_VAR_NAME}: %{MATCHED_VAR}',\\\n    tag:'application-multi',\\\n    tag:'language-multi',\\\n    tag:'platform-multi',\\\n    tag:'attack-sqli',\\\n    tag:'OWASP_CRS',\\\n    tag:'capec/1000/152/248/66',\\\n    tag:'PCI/6.5.2',\\\n    tag:'paranoia-level/2',\\\n    ver:'OWASP_CRS/3.4.0-dev',\\\n    severity:'CRITICAL',\\\n    setvar:'tx.sql_injection_score=+%{tx.critical_anomaly_score}',\\\n    setvar:'tx.inbound_anomaly_score_pl2=+%{tx.critical_anomaly_score}'\"\n",
        "description": "Detects basic SQL authentication bypass attempts 2/3",
        "paranoia_level": "2",
        "rule_id": "942",
        "sec_rule_id": "942260",
        "severity": "CRITICAL",
        "tags": [
            "application-multi",
            "language-multi",
            "platform-multi",
            "attack-sqli",
            "OWASP_CRS",
            "capec/1000/152/248/66",
            "PCI/6.5.2",
            "paranoia-level/2"
        ]
    },
    {
        "comment": "# Regular expression generated from util/regexp-assemble/data/942300.data.\n# To update the regular expression run the following shell script\n# (consult util/regexp-assemble/README.md for details):\n#   util/regexp-assemble/regexp-assemble.py update 942300\n#\n",
        "content": "SecRule REQUEST_COOKIES|!REQUEST_COOKIES:/__utm/|REQUEST_COOKIES_NAMES|ARGS_NAMES|ARGS|XML:/* \"@rx (?i)(?:\\b(?:(?:r(?:egexp|like)|n(?:and|ot)|(?:x?x)?or|like|and|div)\\s+\\s*?\\w+\\(|b(?:etween\\s+\\s*?\\w+\\(|inary\\s*?\\(\\s*?\\d)|cha?r\\s*?\\(\\s*?\\d)|\\)\\s*?when\\s*?\\d+\\s*?then|(?:\\|\\||&&)\\s+\\s*?\\w+\\(|[\\\"'`]\\s*?(?:[#{]|--)|\\/\\*!\\s?\\d+)\" \\\n    \"id:942300,\\\n    phase:2,\\\n    block,\\\n    capture,\\\n    t:none,t:urlDecodeUni,\\\n    msg:'Detects MySQL comments, conditions and ch(a)r injections',\\\n    logdata:'Matched Data: %{TX.0} found within %{MATCHED_VAR_NAME}: %{MATCHED_VAR}',\\\n    tag:'application-multi',\\\n    tag:'language-multi',\\\n    tag:'platform-multi',\\\n    tag:'attack-sqli',\\\n    tag:'OWASP_CRS',\\\n    tag:'capec/1000/152/248/66',\\\n    tag:'PCI/6.5.2',\\\n    tag:'paranoia-level/2',\\\n    ver:'OWASP_CRS/3.4.0-dev',\\\n    severity:'CRITICAL',\\\n    setvar:'tx.sql_injection_score=+%{tx.critical_anomaly_score}',\\\n    setvar:'tx.inbound_anomaly_score_pl2=+%{tx.critical_anomaly_score}'\"\n",
        "description": "Detects MySQL comments, conditions and ch(a)r injections",
        "paranoia_level": "2",
        "rule_id": "942",
        "sec_rule_id": "942300",
        "severity": "CRITICAL",
        "tags": [
            "application-multi",
            "language-multi",
            "platform-multi",
            "attack-sqli",
            "OWASP_CRS",
            "capec/1000/152/248/66",
            "PCI/6.5.2",
            "paranoia-level/2"
        ]
    },
    {
        "comment": "# Regular expression generated from util/regexp-assemble/data/942310.data.\n# To update the regular expression run the following shell script\n# (consult util/regexp-assemble/README.md for details):\n#   util/regexp-assemble/regexp-assemble.py update 942310\n#\n",
        "content": "SecRule REQUEST_COOKIES|!REQUEST_COOKIES:/__utm/|REQUEST_COOKIES_NAMES|ARGS_NAMES|ARGS|XML:/* \"@rx (?i)(?:(?:\\(\\s*?select\\s*?\\w+|order\\s+by\\s+if\\w*?|coalesce)\\s*?\\(|[\\\"'`](?:;\\s*?(?:begin|while|if)|[\\s\\d]+=\\s*?\\d)|\\w[\\\"'`]\\s*?(?:(?:[-+=|@]+\\s+?)+|[-+=|@]+)[\\d(]|[\\s(]+case\\d*?\\W.+[tw]hen[\\s(]|\\+\\s*?\\d+\\s*?\\+\\s*?@|@@\\w+\\s*?[^\\w\\s]|\\W!+[\\\"'`]\\w|\\*\\/from)\" \\\n    \"id:942310,\\\n    phase:2,\\\n    block,\\\n    capture,\\\n    t:none,t:urlDecodeUni,\\\n    msg:'Detects chained SQL injection attempts 2/2',\\\n    logdata:'Matched Data: %{TX.0} found within %{MATCHED_VAR_NAME}: %{MATCHED_VAR}',\\\n    tag:'application-multi',\\\n    tag:'language-multi',\\\n    tag:'platform-multi',\\\n    tag:'attack-sqli',\\\n    tag:'OWASP_CRS',\\\n    tag:'capec/1000/152/248/66',\\\n    tag:'PCI/6.5.2',\\\n    tag:'paranoia-level/2',\\\n    ver:'OWASP_CRS/3.4.0-dev',\\\n    severity:'CRITICAL',\\\n    setvar:'tx.sql_injection_score=+%{tx.critical_anomaly_score}',\\\n    setvar:'tx.inbound_anomaly_score_pl2=+%{tx.critical_anomaly_score}'\"\n",
        "description": "Detects chained SQL injection attempts 2/2",
        "paranoia_level": "2",
        "rule_id": "942",
        "sec_rule_id": "942310",
        "severity": "CRITICAL",
        "tags": [
            "application-multi",
            "language-multi",
            "platform-multi",
            "attack-sqli",
            "OWASP_CRS",
            "capec/1000/152/248/66",
            "PCI/6.5.2",
            "paranoia-level/2"
        ]
    },
    {
        "comment": "#\n# -=[ SQL Injection Probings ]=-\n#\n# This is a group of three similar rules aiming to detect SQL injection probings.\n#\n# 942330 PL 2\n# 942370 PL 2\n# 942490 PL 3\n# Regular expression generated from util/regexp-assemble/data/942330.data.\n# To update the regular expression run the following shell script\n# (consult util/regexp-assemble/README.md for details):\n#   util/regexp-assemble/regexp-assemble.py update 942330\n#\n",
        "content": "SecRule REQUEST_COOKIES|!REQUEST_COOKIES:/__utm/|REQUEST_COOKIES_NAMES|ARGS_NAMES|ARGS|XML:/* \"@rx (?i)(?:^(?:[\\\"'`\\x5c]*?(?:[^\\\"'`]+[\\\"'`]|[\\d\\\"'`]+)\\s*?(?:n(?:and|ot)|(?:x?x)?or|between|\\|\\||like|and|div|&&)\\s*?[\\w\\\"'`][+&!@(),.-]|.?[\\\"'`]$)|@(?:[\\w-]+\\s(?:between|like|x?or|and|div)\\s*?[^\\w\\s]|\\w+\\s+(?:between|like|x?or|and|div)\\s*?[\\\"'`\\d]+)|[\\\"'`]\\s*?(?:between|like|x?or|and|div)\\s*?[\\\"'`]?\\d|[^\\w\\s:]\\s*?\\d\\W+[^\\w\\s]\\s*?[\\\"'`].|[^\\w\\s]\\w+\\s*?[|-]\\s*?[\\\"'`]\\s*?\\w|\\Winformation_schema|\\x5cx(?:23|27|3d)|table_name\\W)\" \\\n    \"id:942330,\\\n    phase:2,\\\n    block,\\\n    capture,\\\n    t:none,t:urlDecodeUni,\\\n    msg:'Detects classic SQL injection probings 1/3',\\\n    logdata:'Matched Data: %{TX.0} found within %{MATCHED_VAR_NAME}: %{MATCHED_VAR}',\\\n    tag:'application-multi',\\\n    tag:'language-multi',\\\n    tag:'platform-multi',\\\n    tag:'attack-sqli',\\\n    tag:'OWASP_CRS',\\\n    tag:'capec/1000/152/248/66',\\\n    tag:'PCI/6.5.2',\\\n    tag:'paranoia-level/2',\\\n    ver:'OWASP_CRS/3.4.0-dev',\\\n    severity:'CRITICAL',\\\n    setvar:'tx.sql_injection_score=+%{tx.critical_anomaly_score}',\\\n    setvar:'tx.inbound_anomaly_score_pl2=+%{tx.critical_anomaly_score}'\"\n",
        "description": "Detects classic SQL injection probings 1/2",
        "paranoia_level": "2",
        "rule_id": "942",
        "sec_rule_id": "942330",
        "severity": "CRITICAL",
        "tags": [
            "application-multi",
            "language-multi",
            "platform-multi",
            "attack-sqli",
            "OWASP_CRS",
            "capec/1000/152/248/66",
            "PCI/6.5.2",
            "paranoia-level/2"
        ]
    },
    {
        "comment": "# Regular expression generated from util/regexp-assemble/data/942340.data.\n# To update the regular expression run the following shell script\n# (consult util/regexp-assemble/README.md for details):\n#   util/regexp-assemble/regexp-assemble.py update 942340\n#\n# Note that part of 942340.data is already optimized, to avoid a\n# Regexp::Assemble behaviour, where the regex is not optimized very nicely.\n#\n",
        "content": "SecRule REQUEST_COOKIES|!REQUEST_COOKIES:/__utm/|REQUEST_COOKIES_NAMES|ARGS_NAMES|ARGS|XML:/* \"@rx (?i)(?:[\\\"'`](?:\\s*?(?:is\\s*?(?:[\\d.]+\\s*?\\W.*?[\\\"'`]|\\d.+[\\\"'`]?\\w)|\\d\\s*?(?:--|#))|(?:\\W+[\\w+-]+\\s*?=\\s*?\\d\\W+|\\|?[\\w-]{3,}[^\\w\\s.,]+)[\\\"'`]|[\\%&<>^=]+\\d\\s*?(?:between|like|x?or|and|div|=))|(?i:n?and|x?x?or|div|like|between|not|\\|\\||\\&\\&)\\s+[\\s\\w+]+(?:sounds\\s+like\\s*?[\\\"'`]|regexp\\s*?\\(|[=\\d]+x)|in\\s*?\\(+\\s*?select)\" \\\n    \"id:942340,\\\n    phase:2,\\\n    block,\\\n    capture,\\\n    t:none,t:urlDecodeUni,\\\n    msg:'Detects basic SQL authentication bypass attempts 3/3',\\\n    logdata:'Matched Data: %{TX.0} found within %{MATCHED_VAR_NAME}: %{MATCHED_VAR}',\\\n    tag:'application-multi',\\\n    tag:'language-multi',\\\n    tag:'platform-multi',\\\n    tag:'attack-sqli',\\\n    tag:'OWASP_CRS',\\\n    tag:'capec/1000/152/248/66',\\\n    tag:'PCI/6.5.2',\\\n    tag:'paranoia-level/2',\\\n    ver:'OWASP_CRS/3.4.0-dev',\\\n    severity:'CRITICAL',\\\n    setvar:'tx.sql_injection_score=+%{tx.critical_anomaly_score}',\\\n    setvar:'tx.inbound_anomaly_score_pl2=+%{tx.critical_anomaly_score}'\"\n",
        "description": "Detects basic SQL authentication bypass attempts 3/3",
        "paranoia_level": "2",
        "rule_id": "942",
        "sec_rule_id": "942340",
        "severity": "CRITICAL",
        "tags": [
            "application-multi",
            "language-multi",
            "platform-multi",
            "attack-sqli",
            "OWASP_CRS",
            "capec/1000/152/248/66",
            "PCI/6.5.2",
            "paranoia-level/2"
        ]
    },
    {
        "comment": "# This rule is a stricter sibling of 942360.\n# The keywords 'alter' and 'union' led to false positives.\n# Therefore they have been moved to PL2 and the keywords have been extended on PL1.\n#\n",
        "content": "SecRule REQUEST_COOKIES|!REQUEST_COOKIES:/__utm/|REQUEST_COOKIES_NAMES|ARGS_NAMES|ARGS|XML:/* \"@rx (?i:^[\\W\\d]+\\s*?(?:alter|union)\\b)\" \\\n    \"id:942361,\\\n    phase:2,\\\n    block,\\\n    capture,\\\n    t:none,t:urlDecodeUni,\\\n    msg:'Detects basic SQL injection based on keyword alter or union',\\\n    logdata:'Matched Data: %{TX.0} found within %{MATCHED_VAR_NAME}: %{MATCHED_VAR}',\\\n    tag:'application-multi',\\\n    tag:'language-multi',\\\n    tag:'platform-multi',\\\n    tag:'attack-sqli',\\\n    tag:'OWASP_CRS',\\\n    tag:'capec/1000/152/248/66',\\\n    tag:'PCI/6.5.2',\\\n    tag:'paranoia-level/2',\\\n    ver:'OWASP_CRS/3.4.0-dev',\\\n    severity:'CRITICAL',\\\n    setvar:'tx.sql_injection_score=+%{tx.critical_anomaly_score}',\\\n    setvar:'tx.inbound_anomaly_score_pl2=+%{tx.critical_anomaly_score}'\"\n",
        "paranoia_level": "2",
        "rule_id": "942",
        "sec_rule_id": "942361",
        "severity": "CRITICAL",
        "tags": [
            "application-multi",
            "language-multi",
            "platform-multi",
            "attack-sqli",
            "OWASP_CRS",
            "capec/1000/152/248/66",
            "PCI/6.5.2",
            "paranoia-level/2"
        ]
    },
    {
        "comment": "# This rule is a stricter sibling of 942360.\n# The loose word boudaries and light context led to false positives.\n# Because the stricter variant does miss quite a few legitimate payloads, the loose version was moved to PL2.\n#\n# Regular expression generated from util/regexp-assemble/data/942362.data.\n# To update the regular expression run the following shell script\n# (consult util/regexp-assemble/README.md for details):\n#   util/regexp-assemble/regexp-assemble.py update 942362\n#\n",
        "content": "SecRule REQUEST_COOKIES|!REQUEST_COOKIES:/__utm/|REQUEST_COOKIES_NAMES|ARGS_NAMES|ARGS|XML:/* \"@rx (?i)(?:^[\\W\\d]+\\s*?(?:(?:alter\\s*(?:a(?:(?:pplication\\s*rol|ggregat)e|s(?:ymmetric\\s*ke|sembl)y|u(?:thorization|dit)|vailability\\s*group)|c(?:r(?:yptographic\\s*provider|edential)|o(?:l(?:latio|um)|nversio)n|ertificate|luster)|s(?:e(?:rv(?:ice|er)|curity|quence|ssion|arch)|y(?:mmetric\\s*key|nonym)|togroup|chema)|m(?:a(?:s(?:ter\\s*key|k)|terialized)|e(?:ssage\\s*type|thod)|odule)|l(?:o(?:g(?:file\\s*group|in)|ckdown)|a(?:ngua|r)ge|ibrary)|t(?:(?:abl(?:espac)?|yp)e|r(?:igger|usted)|hreshold|ext)|p(?:a(?:rtition|ckage)|ro(?:cedur|fil)e|ermission)|d(?:i(?:mension|skgroup)|atabase|efault|omain)|r(?:o(?:l(?:lback|e)|ute)|e(?:sourc|mot)e)|f(?:u(?:lltext|nction)|lashback|oreign)|e(?:xte(?:nsion|rnal)|(?:ndpoi|ve)nt)|in(?:dex(?:type)?|memory|stance)|b(?:roker\\s*priority|ufferpool)|x(?:ml\\s*schema|srobject)|w(?:ork(?:load)?|rapper)|hi(?:erarchy|stogram)|o(?:perator|utline)|(?:nicknam|queu)e|us(?:age|er)|group|java|view)|u(?:nion\\s*(?:(?:distin|sele)ct|all)|pdate)|d(?:e(?:lete|sc)|rop)|(?:truncat|renam)e|(?:inser|selec)t|load)\\b|create\\s+\\w+)|(?:(?:(?:trunc|cre|upd)at|renam)e|(?:inser|selec)t|de(?:lete|sc)|alter|load)\\s+(?:group_concat|load_file|char)\\s?\\(?|[\\d\\W]\\s+as\\b\\s*[\\\"'`\\w]+\\s*\\bfrom|[\\s(]load_file\\s*?\\(|[\\\"'`]\\s+regexp\\W|end\\s*?\\);)\" \\\n    \"id:942362,\\\n    phase:2,\\\n    block,\\\n    capture,\\\n    t:none,t:urlDecodeUni,\\\n    msg:'Detects concatenated basic SQL injection and SQLLFI attempts',\\\n    logdata:'Matched Data: %{TX.0} found within %{MATCHED_VAR_NAME}: %{MATCHED_VAR}',\\\n    tag:'application-multi',\\\n    tag:'language-multi',\\\n    tag:'platform-multi',\\\n    tag:'attack-sqli',\\\n    tag:'paranoia-level/2',\\\n    tag:'OWASP_CRS',\\\n    tag:'capec/1000/152/248/66',\\\n    tag:'PCI/6.5.2',\\\n    ver:'OWASP_CRS/3.4.0-dev',\\\n    severity:'CRITICAL',\\\n    setvar:'tx.sql_injection_score=+%{tx.critical_anomaly_score}',\\\n    setvar:'tx.inbound_anomaly_score_pl1=+%{tx.critical_anomaly_score}'\"\n",
        "paranoia_level": "2",
        "rule_id": "942",
        "sec_rule_id": "942362",
        "severity": "CRITICAL",
        "tags": [
            "application-multi",
            "language-multi",
            "platform-multi",
            "attack-sqli",
            "paranoia-level/2",
            "OWASP_CRS",
            "capec/1000/152/248/66",
            "PCI/6.5.2"
        ]
    },
    {
        "comment": "# This rule is a sibling of 942330. See that rule for a description and overview.\n#\n# This rule is also triggered by the following exploit(s):\n# [ SAP CRM Java vulnerability CVE-2018-2380 - Exploit tested: https://www.exploit-db.com/exploits/44292 ]\n#\n# Regular expression generated from util/regexp-assemble/data/942370.data.\n# To update the regular expression run the following shell script\n# (consult util/regexp-assemble/README.md for details):\n#   util/regexp-assemble/regexp-assemble.py update 942370\n#\n",
        "content": "SecRule REQUEST_COOKIES|!REQUEST_COOKIES:/__utm/|REQUEST_COOKIES_NAMES|ARGS_NAMES|ARGS|XML:/* \"@rx (?i)(?:[\\\"'`](?:\\s*?(?:(?:\\*.+(?:(?:an|i)d|between|like|x?or|div)\\W*?[\\\"'`]|(?:between|like|x?or|and|div)\\s[^\\d]+[\\w-]+.*?)\\d|[^\\w\\s?]+\\s*?[^\\w\\s]+\\s*?[\\\"'`]|[^\\w\\s]+\\s*?[\\W\\d].*?(?:--|#))|.*?\\*\\s*?\\d)|[()\\*<>%+-][\\w-]+[^\\w\\s]+[\\\"'`][^,]|\\^[\\\"'`])\" \\\n    \"id:942370,\\\n    phase:2,\\\n    block,\\\n    capture,\\\n    t:none,t:urlDecodeUni,\\\n    msg:'Detects classic SQL injection probings 2/3',\\\n    logdata:'Matched Data: %{TX.0} found within %{MATCHED_VAR_NAME}: %{MATCHED_VAR}',\\\n    tag:'application-multi',\\\n    tag:'language-multi',\\\n    tag:'platform-multi',\\\n    tag:'attack-sqli',\\\n    tag:'OWASP_CRS',\\\n    tag:'capec/1000/152/248/66',\\\n    tag:'PCI/6.5.2',\\\n    tag:'paranoia-level/2',\\\n    ver:'OWASP_CRS/3.4.0-dev',\\\n    severity:'CRITICAL',\\\n    setvar:'tx.sql_injection_score=+%{tx.critical_anomaly_score}',\\\n    setvar:'tx.inbound_anomaly_score_pl2=+%{tx.critical_anomaly_score}'\"\n",
        "description": "Detects classic SQL injection probings 2/2",
        "paranoia_level": "2",
        "rule_id": "942",
        "sec_rule_id": "942370",
        "severity": "CRITICAL",
        "tags": [
            "application-multi",
            "language-multi",
            "platform-multi",
            "attack-sqli",
            "OWASP_CRS",
            "capec/1000/152/248/66",
            "PCI/6.5.2",
            "paranoia-level/2"
        ]
    },
    {
        "comment": "# Regular expression generated from util/regexp-assemble/data/942380.data.\n# To update the regular expression run the following shell script\n# (consult util/regexp-assemble/README.md for details):\n#   util/regexp-assemble/regexp-assemble.py update 942380\n#\n",
        "content": "SecRule REQUEST_COOKIES|!REQUEST_COOKIES:/__utm/|!REQUEST_COOKIES:/_pk_ref/|REQUEST_COOKIES_NAMES|ARGS_NAMES|ARGS|XML:/* \"@rx (?i)(?:\\b(?:having\\b(?: ?(?:[\\'\\\"][^=]{1,10}[\\'\\\" ?[=<>]+|\\d{1,10} ?[=<>]+)|\\s+(?:'[^=]{1,10}'|\\d{1,10})\\s*?[=<>])|ex(?:ecute(?:\\s{1,5}[\\w\\.$]{1,5}\\s{0,3}|\\()|ists\\s*?\\(\\s*?select\\b)|(?:create\\s+?table.{0,20}?|like\\W*?char\\W*?)\\()|exists\\s(?:s(?:elect\\S(?:if(?:null)?\\s\\(|concat|top)|ystem\\s\\()|\\bhaving\\b\\s+\\d{1,10}|'[^=]{1,10}'|\\sselect)|select.*?case|from.*?limit|order\\sby)\" \\\n    \"id:942380,\\\n    phase:2,\\\n    block,\\\n    capture,\\\n    t:none,t:urlDecodeUni,\\\n    msg:'SQL Injection Attack',\\\n    logdata:'Matched Data: %{TX.0} found within %{MATCHED_VAR_NAME}: %{MATCHED_VAR}',\\\n    tag:'application-multi',\\\n    tag:'language-multi',\\\n    tag:'platform-multi',\\\n    tag:'attack-sqli',\\\n    tag:'OWASP_CRS',\\\n    tag:'capec/1000/152/248/66',\\\n    tag:'PCI/6.5.2',\\\n    tag:'paranoia-level/2',\\\n    ctl:auditLogParts=+E,\\\n    ver:'OWASP_CRS/3.4.0-dev',\\\n    severity:'CRITICAL',\\\n    setvar:'tx.sql_injection_score=+%{tx.critical_anomaly_score}',\\\n    setvar:'tx.inbound_anomaly_score_pl2=+%{tx.critical_anomaly_score}'\"\n",
        "description": "SQL Injection Attack",
        "paranoia_level": "2",
        "rule_id": "942",
        "sec_rule_id": "942380",
        "severity": "CRITICAL",
        "tags": [
            "application-multi",
            "language-multi",
            "platform-multi",
            "attack-sqli",
            "OWASP_CRS",
            "capec/1000/152/248/66",
            "PCI/6.5.2",
            "paranoia-level/2"
        ]
    },
    {
        "comment": "# Regular expression generated from util/regexp-assemble/data/942390.data.\n# To update the regular expression run the following shell script\n# (consult util/regexp-assemble/README.md for details):\n#   util/regexp-assemble/regexp-assemble.py update 942390\n#\n",
        "content": "SecRule REQUEST_COOKIES|!REQUEST_COOKIES:/__utm/|!REQUEST_COOKIES:/_pk_ref/|REQUEST_COOKIES_NAMES|ARGS_NAMES|ARGS|XML:/* \"@rx (?i)(?:\\b(?:or\\b(?:\\s+(?:'[^=]{1,10}'(?:\\s*?[=<>])?|\\d{1,10}(?:\\s*?[=<>])?)|\\s?(?:[\\'\\\"][^=]{1,10}[\\'\\\"]|\\d{1,10})\\s?[=<>]+)|xor\\b\\s+(?:'[^=]{1,10}'(?:\\s*?[=<>])?|\\d{1,10}(?:\\s*?[=<>])?))|'\\s+x?or\\s+.{1,20}[+\\-!<>=])\" \\\n    \"id:942390,\\\n    phase:2,\\\n    block,\\\n    capture,\\\n    t:none,t:urlDecodeUni,\\\n    msg:'SQL Injection Attack',\\\n    logdata:'Matched Data: %{TX.0} found within %{MATCHED_VAR_NAME}: %{MATCHED_VAR}',\\\n    tag:'application-multi',\\\n    tag:'language-multi',\\\n    tag:'platform-multi',\\\n    tag:'attack-sqli',\\\n    tag:'OWASP_CRS',\\\n    tag:'capec/1000/152/248/66',\\\n    tag:'PCI/6.5.2',\\\n    tag:'paranoia-level/2',\\\n    ctl:auditLogParts=+E,\\\n    ver:'OWASP_CRS/3.4.0-dev',\\\n    severity:'CRITICAL',\\\n    setvar:'tx.sql_injection_score=+%{tx.critical_anomaly_score}',\\\n    setvar:'tx.inbound_anomaly_score_pl2=+%{tx.critical_anomaly_score}'\"\n",
        "description": "SQL Injection Attack",
        "paranoia_level": "2",
        "rule_id": "942",
        "sec_rule_id": "942390",
        "severity": "CRITICAL",
        "tags": [
            "application-multi",
            "language-multi",
            "platform-multi",
            "attack-sqli",
            "OWASP_CRS",
            "capec/1000/152/248/66",
            "PCI/6.5.2",
            "paranoia-level/2"
        ]
    },
    {
        "comment": "# Regular expression generated from util/regexp-assemble/data/942400.data.\n# To update the regular expression run the following shell script\n# (consult util/regexp-assemble/README.md for details):\n#   util/regexp-assemble/regexp-assemble.py update 942400\n#\n",
        "content": "SecRule REQUEST_COOKIES|!REQUEST_COOKIES:/__utm/|!REQUEST_COOKIES:/_pk_ref/|REQUEST_COOKIES_NAMES|ARGS_NAMES|ARGS|XML:/* \"@rx (?i)\\band\\b(?: ?(?:[\\'\\\"][^=]{1,10}[\\'\\\"]|\\d{1,10}) ?[=<>]+|\\s+(?:\\d{1,10}\\s*?[=<>]|'[^=]{1,10}'))\" \\\n    \"id:942400,\\\n    phase:2,\\\n    block,\\\n    capture,\\\n    t:none,t:urlDecodeUni,\\\n    msg:'SQL Injection Attack',\\\n    logdata:'Matched Data: %{TX.0} found within %{MATCHED_VAR_NAME}: %{MATCHED_VAR}',\\\n    tag:'application-multi',\\\n    tag:'language-multi',\\\n    tag:'platform-multi',\\\n    tag:'attack-sqli',\\\n    tag:'OWASP_CRS',\\\n    tag:'capec/1000/152/248/66',\\\n    tag:'PCI/6.5.2',\\\n    tag:'paranoia-level/2',\\\n    ctl:auditLogParts=+E,\\\n    ver:'OWASP_CRS/3.4.0-dev',\\\n    severity:'CRITICAL',\\\n    setvar:'tx.sql_injection_score=+%{tx.critical_anomaly_score}',\\\n    setvar:'tx.inbound_anomaly_score_pl2=+%{tx.critical_anomaly_score}'\"\n",
        "description": "SQL Injection Attack",
        "paranoia_level": "2",
        "rule_id": "942",
        "sec_rule_id": "942400",
        "severity": "CRITICAL",
        "tags": [
            "application-multi",
            "language-multi",
            "platform-multi",
            "attack-sqli",
            "OWASP_CRS",
            "capec/1000/152/248/66",
            "PCI/6.5.2",
            "paranoia-level/2"
        ]
    },
    {
        "comment": "# The former rule id 942410 was split into three new rules: 942410, 942470, 942480\n#\n# This rule is also triggered by the following exploit(s):\n# [ SAP CRM Java vulnerability CVE-2018-2380 - Exploit tested: https://www.exploit-db.com/exploits/44292 ]\n#\n# Regular expression generated from util/regexp-assemble/data/942410.data.\n# To update the regular expression run the following shell script\n# (consult util/regexp-assemble/README.md for details):\n#   util/regexp-assemble/regexp-assemble.py update 942410\n#\n",
        "content": "SecRule REQUEST_COOKIES|!REQUEST_COOKIES:/__utm/|!REQUEST_COOKIES:/_pk_ref/|REQUEST_COOKIES_NAMES|ARGS_NAMES|ARGS|XML:/* \"@rx (?i)\\b(?:c(?:o(?:n(?:v(?:ert(?:_tz)?)?|cat(?:_ws)?|nection_id)|(?:mpres)?s|ercibility|(?:un)?t|alesce)|ur(?:rent_(?:time(?:stamp)?|date|user)|(?:dat|tim)e)|h(?:ar(?:(?:acter)?_length|set)?|r)|iel(?:ing)?|ast|r32)|s(?:t(?:d(?:dev(?:_(?:sam|po)p)?)?|r(?:_to_date|cmp))|u(?:b(?:str(?:ing(?:_index)?)?|(?:dat|tim)e)|m)|e(?:c(?:_to_time|ond)|ssion_user)|ys(?:tem_user|date)|ha[12]?|oundex|chema|ig?n|leep|pace|qrt)|i(?:s(?:_(?:ipv(?:4(?:_(?:compat|mapped))?|6)|n(?:ot(?:_null)?|ull)|(?:free|used)_lock)|null)?|n(?:et(?:6_(?:aton|ntoa)|_(?:aton|ntoa))|s(?:ert|tr)|terval)?|f(?:null)?)|d(?:a(?:t(?:e(?:_(?:format|add|sub)|diff)?|abase)|y(?:of(?:month|week|year)|name)?)|e(?:(?:s_(?:de|en)cryp|faul)t|grees|code)|count|ump)|l(?:o(?:ca(?:l(?:timestamp)?|te)|g(?:10|2)?|ad_file|wer)|ast(?:_(?:insert_id|day))?|e(?:(?:as|f)t|ngth)|case|trim|pad|n)|u(?:n(?:compress(?:ed_length)?|ix_timestamp|hex)|tc_(?:time(?:stamp)?|date)|p(?:datexml|per)|uid(?:_short)?|case|ser)|r(?:a(?:wto(?:nhex(?:toraw)?|hex)|dians|nd)|e(?:p(?:lace|eat)|lease_lock|verse)|o(?:w_count|und)|ight|trim|pad)|t(?:ime(?:_(?:format|to_sec)|stamp(?:diff|add)?|diff)?|o_(?:(?:second|day)s|base64|n?char)|r(?:uncate|im)|an)|m(?:a(?:ke(?:_set|date)|ster_pos_wait|x)|i(?:(?:crosecon)?d|n(?:ute)?)|o(?:nth(?:name)?|d)|d5)|f(?:i(?:eld(?:_in_set)?|nd_in_set)|rom_(?:unixtime|base64|days)|o(?:und_rows|rmat)|loor)|p(?:o(?:w(?:er)?|sition)|eriod_(?:diff|add)|rocedure_analyse|assword|g_sleep|i)|a(?:s(?:cii(?:str)?|in)|es_(?:de|en)crypt|dd(?:dat|tim)e|(?:co|b)s|tan2?|vg)|b(?:i(?:t_(?:length|count|x?or|and)|n(?:_to_num)?)|enchmark)|e(?:x(?:tract(?:value)?|p(?:ort_set)?)|nc(?:rypt|ode)|lt)|g(?:r(?:oup_conca|eates)t|et_(?:format|lock))|v(?:a(?:r(?:_(?:sam|po)p|iance)|lues)|ersion)|o(?:(?:ld_passwo)?rd|ct(?:et_length)?)|we(?:ek(?:ofyear|day)?|ight_string)|n(?:o(?:t_in|w)|ame_const|ullif)|h(?:ex(?:toraw)?|our)|qu(?:arter|ote)|year(?:week)?|xmltype)\\W*?\\(\" \\\n    \"id:942410,\\\n    phase:2,\\\n    block,\\\n    capture,\\\n    t:none,t:urlDecodeUni,\\\n    msg:'SQL Injection Attack',\\\n    logdata:'Matched Data: %{TX.0} found within %{MATCHED_VAR_NAME}: %{MATCHED_VAR}',\\\n    tag:'application-multi',\\\n    tag:'language-multi',\\\n    tag:'platform-multi',\\\n    tag:'attack-sqli',\\\n    tag:'OWASP_CRS',\\\n    tag:'capec/1000/152/248/66',\\\n    tag:'PCI/6.5.2',\\\n    tag:'paranoia-level/2',\\\n    ctl:auditLogParts=+E,\\\n    ver:'OWASP_CRS/3.4.0-dev',\\\n    severity:'CRITICAL',\\\n    setvar:'tx.sql_injection_score=+%{tx.critical_anomaly_score}',\\\n    setvar:'tx.inbound_anomaly_score_pl2=+%{tx.critical_anomaly_score}'\"\n",
        "description": "SQL Injection Attack",
        "paranoia_level": "2",
        "rule_id": "942",
        "sec_rule_id": "942410",
        "severity": "CRITICAL",
        "tags": [
            "application-multi",
            "language-multi",
            "platform-multi",
            "attack-sqli",
            "OWASP_CRS",
            "capec/1000/152/248/66",
            "PCI/6.5.2",
            "paranoia-level/2"
        ]
    },
    {
        "comment": "# The former rule id 942410 was split into three new rules: 942410, 942470, 942480\n#\n# Regular expression generated from util/regexp-assemble/data/942470.data.\n# To update the regular expression run the following shell script\n# (consult util/regexp-assemble/README.md for details):\n#   util/regexp-assemble/regexp-assemble.py update 942470\n#\n",
        "content": "SecRule REQUEST_COOKIES|!REQUEST_COOKIES:/__utm/|!REQUEST_COOKIES:/_pk_ref/|REQUEST_COOKIES_NAMES|ARGS_NAMES|ARGS|XML:/* \"@rx (?i)(?:xp_(?:reg(?:re(?:movemultistring|ad)|delete(?:value|key)|enum(?:value|key)s|addmultistring|write)|(?:servicecontro|cmdshel)l|e(?:xecresultset|numdsn)|ntsec(?:_enumdomains)?|terminate(?:_process)?|availablemedia|loginconfig|filelist|dirtree|makecab)|s(?:p_(?:(?:addextendedpro|sqlexe)c|p(?:assword|repare)|replwritetovarbin|is_srvrolemember|execute(?:sql)?|makewebtask|oacreate|help)|ql_(?:longvarchar|variant))|open(?:owa_util|rowset|query)|(?:n?varcha|tbcreato)r|autonomous_transaction|db(?:a_users|ms_java)|utl_(?:file|http))\" \\\n    \"id:942470,\\\n    phase:2,\\\n    block,\\\n    capture,\\\n    t:none,t:urlDecodeUni,\\\n    msg:'SQL Injection Attack',\\\n    logdata:'Matched Data: %{TX.0} found within %{MATCHED_VAR_NAME}: %{MATCHED_VAR}',\\\n    tag:'application-multi',\\\n    tag:'language-multi',\\\n    tag:'platform-multi',\\\n    tag:'attack-sqli',\\\n    tag:'OWASP_CRS',\\\n    tag:'capec/1000/152/248/66',\\\n    tag:'PCI/6.5.2',\\\n    tag:'paranoia-level/2',\\\n    ctl:auditLogParts=+E,\\\n    ver:'OWASP_CRS/3.4.0-dev',\\\n    severity:'CRITICAL',\\\n    setvar:'tx.sql_injection_score=+%{tx.critical_anomaly_score}',\\\n    setvar:'tx.inbound_anomaly_score_pl2=+%{tx.critical_anomaly_score}'\"\n",
        "paranoia_level": "2",
        "rule_id": "942",
        "sec_rule_id": "942470",
        "severity": "CRITICAL",
        "tags": [
            "application-multi",
            "language-multi",
            "platform-multi",
            "attack-sqli",
            "OWASP_CRS",
            "capec/1000/152/248/66",
            "PCI/6.5.2",
            "paranoia-level/2"
        ]
    },
    {
        "comment": "# The former rule id 942410 was split into three new rules: 942410, 942470, 942480\n#\n# Regular expression generated from util/regexp-assemble/data/942480.data.\n# To update the regular expression run the following shell script\n# (consult util/regexp-assemble/README.md for details):\n#   util/regexp-assemble/regexp-assemble.py update 942480\n#\n",
        "content": "SecRule REQUEST_COOKIES|!REQUEST_COOKIES:/__utm/|!REQUEST_COOKIES:/_pk_ref/|REQUEST_COOKIES_NAMES|ARGS_NAMES|ARGS|XML:/* \"@rx (?i)(?:\\b(?:(?:s(?:elect\\b.{1,100}?\\b(?:(?:(?:length|count)\\b.{1,100}?|.*?\\bdump\\b.*)\\bfrom|to(?:p\\b.{1,100}?\\bfrom|_(?:numbe|cha)r)|(?:from\\b.{1,100}?\\bwher|data_typ)e|instr)|ys_context)|in(?:to\\b\\W*?\\b(?:dump|out)file|sert\\b\\W*?\\binto|ner\\b\\W*?\\bjoin)|u(?:nion\\b.{1,100}?\\bselect|tl_inaddr)|group\\b.*?\\bby\\b.{1,100}?\\bhaving|d(?:elete\\b\\W*?\\bfrom|bms_\\w+\\.)|load\\b\\W*?\\bdata\\b.*?\\binfile)\\b|print\\b\\W*?\\@\\@)|(?:;\\W*?\\b(?:shutdown|drop)|collation\\W*?\\(a|\\@\\@version)\\b|'(?:s(?:qloledb|a)|msdasql|dbo)')\" \\\n    \"id:942480,\\\n    phase:2,\\\n    block,\\\n    capture,\\\n    t:none,t:urlDecodeUni,\\\n    msg:'SQL Injection Attack',\\\n    logdata:'Matched Data: %{TX.0} found within %{MATCHED_VAR_NAME}: %{MATCHED_VAR}',\\\n    tag:'application-multi',\\\n    tag:'language-multi',\\\n    tag:'platform-multi',\\\n    tag:'attack-sqli',\\\n    tag:'OWASP_CRS',\\\n    tag:'capec/1000/152/248/66',\\\n    tag:'PCI/6.5.2',\\\n    tag:'paranoia-level/2',\\\n    ctl:auditLogParts=+E,\\\n    ver:'OWASP_CRS/3.4.0-dev',\\\n    severity:'CRITICAL',\\\n    setvar:'tx.sql_injection_score=+%{tx.critical_anomaly_score}',\\\n    setvar:'tx.inbound_anomaly_score_pl2=+%{tx.critical_anomaly_score}'\"\n",
        "paranoia_level": "2",
        "rule_id": "942",
        "sec_rule_id": "942480",
        "severity": "CRITICAL",
        "tags": [
            "application-multi",
            "language-multi",
            "platform-multi",
            "attack-sqli",
            "OWASP_CRS",
            "capec/1000/152/248/66",
            "PCI/6.5.2",
            "paranoia-level/2"
        ]
    },
    {
        "comment": "#\n# [ SQL Injection Character Anomaly Usage ]\n#\n# This rule is also triggered by the following exploit(s):\n# [ SAP CRM Java vulnerability CVE-2018-2380 - Exploit tested: https://www.exploit-db.com/exploits/44292 ]\n#\n# This rules attempts to gauge when there is an excessive use of\n# meta-characters within a single parameter payload.\n#\n# Expect a lot of false positives with this rule.\n# The most likely false positive instances will be free-form text fields.\n# This will make it necessary to disable the rule for certain known parameters.\n# The following directive is an example to switch off the rule globally for\n# the parameter foo. Place this instruction in your configuration after\n# the include directive for the Core Rules Set.\n#\n# SecRuleUpdateTargetById 942430 \"!ARGS:foo\"\n#\n",
        "content": "SecRule ARGS_NAMES|ARGS|XML:/* \"@rx ((?:[~!@#\\$%\\^&\\*\\(\\)\\-\\+=\\{\\}\\[\\]\\|:;\\\"'\u00c2\u00b4\u00e2\u20ac\u2122\u00e2\u20ac\u02dc`<>][^~!@#\\$%\\^&\\*\\(\\)\\-\\+=\\{\\}\\[\\]\\|:;\\\"'\u00c2\u00b4\u00e2\u20ac\u2122\u00e2\u20ac\u02dc`<>]*?){12})\" \\\n    \"id:942430,\\\n    phase:2,\\\n    block,\\\n    capture,\\\n    t:none,t:urlDecodeUni,\\\n    msg:'Restricted SQL Character Anomaly Detection (args): # of special characters exceeded (12)',\\\n    logdata:'Matched Data: %{TX.1} found within %{MATCHED_VAR_NAME}: %{MATCHED_VAR}',\\\n    tag:'application-multi',\\\n    tag:'language-multi',\\\n    tag:'platform-multi',\\\n    tag:'attack-sqli',\\\n    tag:'OWASP_CRS',\\\n    tag:'capec/1000/152/248/66',\\\n    tag:'PCI/6.5.2',\\\n    tag:'paranoia-level/2',\\\n    ver:'OWASP_CRS/3.4.0-dev',\\\n    severity:'WARNING',\\\n    setvar:'tx.inbound_anomaly_score_pl2=+%{tx.warning_anomaly_score}',\\\n    setvar:'tx.sql_injection_score=+%{tx.warning_anomaly_score}'\"\n",
        "description": "Restricted SQL Character Anomaly Detection (args): # of special characters exceeded (12)",
        "paranoia_level": "2",
        "rule_id": "942",
        "sec_rule_id": "942430",
        "severity": "WARNING",
        "tags": [
            "application-multi",
            "language-multi",
            "platform-multi",
            "attack-sqli",
            "OWASP_CRS",
            "capec/1000/152/248/66",
            "PCI/6.5.2",
            "paranoia-level/2"
        ]
    },
    {
        "comment": "#\n# -=[ Detect SQL Comment Sequences ]=-\n#\n# Example Payloads Detected:\n# -------------------------\n# OR 1#\n# DROP sampletable;--\n# admin'--\n# DROP/*comment*/sampletable\n# DR/**/OP/*bypass deny listing*/sampletable\n# SELECT/*avoid-spaces*/password/**/FROM/**/Members\n# SELECT /*!32302 1/0, */ 1 FROM tablename\n# \u00e2\u20ac\u02dc or 1=1#\n# \u00e2\u20ac\u02dc or 1=1-- -\n# \u00e2\u20ac\u02dc or 1=1/*\n# ' or 1=1;\\x00\n# 1='1' or-- -\n# ' /*!50000or*/1='1\n# ' /*!or*/1='1\n# 0/**/union/*!50000select*/table_name`foo`/**/\n# -------------------------\n#\n# Regular expression generated from util/regexp-assemble/data/942440.data.\n# To update the regular expression run the following shell script\n# (consult util/regexp-assemble/README.md for details):\n#   util/regexp-assemble/regexp-assemble.py update 942440\n#\n",
        "content": "SecRule REQUEST_COOKIES|!REQUEST_COOKIES:/__utm/|!REQUEST_COOKIES:/_pk_ref/|REQUEST_COOKIES_NAMES|ARGS_NAMES|ARGS|XML:/* \"@rx (?:--(?:[^-]*?-|\\s)|[^&-]#.*?\\s|;?\\x00|[';]--|\\/\\*!?|\\*\\/)\" \\\n    \"id:942440,\\\n    phase:2,\\\n    block,\\\n    capture,\\\n    t:none,t:urlDecodeUni,\\\n    msg:'SQL Comment Sequence Detected',\\\n    logdata:'Matched Data: %{TX.0} found within %{MATCHED_VAR_NAME}: %{MATCHED_VAR}',\\\n    tag:'application-multi',\\\n    tag:'language-multi',\\\n    tag:'platform-multi',\\\n    tag:'attack-sqli',\\\n    tag:'OWASP_CRS',\\\n    tag:'capec/1000/152/248/66',\\\n    tag:'PCI/6.5.2',\\\n    tag:'paranoia-level/2',\\\n    ver:'OWASP_CRS/3.4.0-dev',\\\n    severity:'CRITICAL',\\\n    chain\"\n    SecRule MATCHED_VARS \"!@rx ^ey[A-Z-a-z0-9-_]+[.]ey[A-Z-a-z0-9-_]+[.][A-Z-a-z0-9-_]+$\" \"t:none,\\\n        setvar:'tx.inbound_anomaly_score_pl2=+%{tx.critical_anomaly_score}',\\\n        setvar:'tx.sql_injection_score=+%{tx.critical_anomaly_score}'\"\n",
        "description": "SQL Comment Sequence Detected.",
        "paranoia_level": "2",
        "rule_id": "942",
        "sec_rule_id": "942440",
        "severity": "CRITICAL",
        "tags": [
            "application-multi",
            "language-multi",
            "platform-multi",
            "attack-sqli",
            "OWASP_CRS",
            "capec/1000/152/248/66",
            "PCI/6.5.2",
            "paranoia-level/2"
        ]
    },
    {
        "comment": "#\n# -=[ SQL Hex Evasion Methods ]=-\n#\n",
        "content": "SecRule REQUEST_COOKIES|!REQUEST_COOKIES:/__utm/|!REQUEST_COOKIES:/_pk_ref/|REQUEST_COOKIES_NAMES|ARGS_NAMES|ARGS|XML:/* \"@rx (?i:\\b0x[a-f\\d]{3,})\" \\\n    \"id:942450,\\\n    phase:2,\\\n    block,\\\n    capture,\\\n    t:none,t:urlDecodeUni,\\\n    msg:'SQL Hex Encoding Identified',\\\n    logdata:'Matched Data: %{TX.0} found within %{MATCHED_VAR_NAME}: %{MATCHED_VAR}',\\\n    tag:'application-multi',\\\n    tag:'language-multi',\\\n    tag:'platform-multi',\\\n    tag:'attack-sqli',\\\n    tag:'OWASP_CRS',\\\n    tag:'capec/1000/152/248/66',\\\n    tag:'PCI/6.5.2',\\\n    tag:'paranoia-level/2',\\\n    ver:'OWASP_CRS/3.4.0-dev',\\\n    severity:'CRITICAL',\\\n    setvar:'tx.sql_injection_score=+%{tx.critical_anomaly_score}',\\\n    setvar:'tx.inbound_anomaly_score_pl2=+%{tx.critical_anomaly_score}'\"\n",
        "description": "SQL Hex Encoding Identified",
        "paranoia_level": "2",
        "rule_id": "942",
        "sec_rule_id": "942450",
        "severity": "CRITICAL",
        "tags": [
            "application-multi",
            "language-multi",
            "platform-multi",
            "attack-sqli",
            "OWASP_CRS",
            "capec/1000/152/248/66",
            "PCI/6.5.2",
            "paranoia-level/2"
        ]
    },
    {
        "comment": "#\n# -=[ Detect SQLi bypass: backticks ]=-\n#\n# Quotes and backticks can be used to bypass SQLi detection.\n#\n# Example:\n# GET http://localhost/test.php?id=9999%20or+{`if`(2=(select+2+from+wp_users+where+user_login='admin'))}\n#\n# The minimum text between the ticks or backticks must be 2 (if, for example) and a maximum of 29.\n# 29 is a compromise: The lower this number (29), the lower the probability of FP and the higher the probability of false negatives.\n# In tests we got a minimum number of FP with {2,29}.\n#\n# Base64 encoding detection:\n# (?:[A-Za-z0-9+/]{4})+ #match any number of 4-letter blocks of the base64 char set\n# (?:[A-Za-z0-9+/]{2}== #match 2-letter block of the base64 char set followed by \"==\", together forming a 4-letter block\n# |                     # or\n# [A-Za-z0-9+/]{3}=     #match 3-letter block of the base64 char set followed by \"=\", together forming a 4-letter block\n# )?\n#\n# The minimal string that triggers this regexp is: `if`\n#\n# The rule 942510 is related to 942110 which catches a single ' or `\n#\n# The rule 942511 is similar to this rule, but triggers on normal quotes\n# ('if'). That rule runs in paranoia level 3 or higher since it is prone to\n# false positives in natural text.\n#\n",
        "content": "SecRule REQUEST_COOKIES|!REQUEST_COOKIES:/__utm/|REQUEST_COOKIES_NAMES|ARGS_NAMES|ARGS|XML:/* \"@rx (?:`(?:(?:[\\w\\s=_\\-+{}()<@]){2,29}|(?:[A-Za-z0-9+/]{4})+(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?)`)\" \\\n    \"id:942510,\\\n    phase:2,\\\n    block,\\\n    capture,\\\n    t:none,t:urlDecodeUni,\\\n    msg:'SQLi bypass attempt by ticks or backticks detected',\\\n    logdata:'Matched Data: %{TX.0} found within %{MATCHED_VAR_NAME}: %{MATCHED_VAR}',\\\n    tag:'application-multi',\\\n    tag:'language-multi',\\\n    tag:'platform-multi',\\\n    tag:'attack-sqli',\\\n    tag:'OWASP_CRS',\\\n    tag:'capec/1000/152/248/66',\\\n    tag:'PCI/6.5.2',\\\n    tag:'paranoia-level/2',\\\n    ver:'OWASP_CRS/3.4.0-dev',\\\n    severity:'CRITICAL',\\\n    setvar:'tx.sql_injection_score=+%{tx.critical_anomaly_score}',\\\n    setvar:'tx.inbound_anomaly_score_pl2=+%{tx.critical_anomaly_score}'\"\n",
        "paranoia_level": "2",
        "rule_id": "942",
        "sec_rule_id": "942510",
        "severity": "CRITICAL",
        "tags": [
            "application-multi",
            "language-multi",
            "platform-multi",
            "attack-sqli",
            "OWASP_CRS",
            "capec/1000/152/248/66",
            "PCI/6.5.2",
            "paranoia-level/2"
        ]
    },
    {
        "comment": "",
        "content": "SecRule TX:DETECTION_PARANOIA_LEVEL \"@lt 3\" \"id:942015,phase:1,pass,nolog,skipAfter:END-REQUEST-942-APPLICATION-ATTACK-SQLI\"\n",
        "rule_id": "942",
        "sec_rule_id": "942015"
    },
    {
        "comment": "",
        "content": "SecRule TX:DETECTION_PARANOIA_LEVEL \"@lt 3\" \"id:942016,phase:2,pass,nolog,skipAfter:END-REQUEST-942-APPLICATION-ATTACK-SQLI\"\n",
        "rule_id": "942",
        "sec_rule_id": "942016"
    },
    {
        "comment": "#\n# [ SQL HAVING queries ]\n#\n# This pattern was split off from rule 942250 due to frequent\n# false positives in English text. Testing showed that SQL\n# injections with HAVING should be detected by libinjection\n# (rule 942100).\n#\n# This is a stricter sibling of rule 942250.\n#\n",
        "content": "SecRule REQUEST_COOKIES|!REQUEST_COOKIES:/__utm/|REQUEST_COOKIES_NAMES|ARGS_NAMES|ARGS|XML:/* \"@rx (?i)\\W+\\d*?\\s*?\\bhaving\\b\\s*?[^\\s\\-]\" \\\n    \"id:942251,\\\n    phase:2,\\\n    block,\\\n    capture,\\\n    t:none,t:urlDecodeUni,\\\n    msg:'Detects HAVING injections',\\\n    logdata:'Matched Data: %{TX.0} found within %{MATCHED_VAR_NAME}: %{MATCHED_VAR}',\\\n    tag:'application-multi',\\\n    tag:'language-multi',\\\n    tag:'platform-multi',\\\n    tag:'attack-sqli',\\\n    tag:'OWASP_CRS',\\\n    tag:'capec/1000/152/248/66',\\\n    tag:'PCI/6.5.2',\\\n    tag:'paranoia-level/3',\\\n    ver:'OWASP_CRS/3.4.0-dev',\\\n    severity:'CRITICAL',\\\n    setvar:'tx.sql_injection_score=+%{tx.critical_anomaly_score}',\\\n    setvar:'tx.inbound_anomaly_score_pl3=+%{tx.critical_anomaly_score}'\"\n",
        "description": "Detects HAVING injections",
        "paranoia_level": "3",
        "rule_id": "942",
        "sec_rule_id": "942251",
        "severity": "CRITICAL",
        "tags": [
            "application-multi",
            "language-multi",
            "platform-multi",
            "attack-sqli",
            "OWASP_CRS",
            "capec/1000/152/248/66",
            "PCI/6.5.2",
            "paranoia-level/3"
        ]
    },
    {
        "comment": "# This rule is a stricter sibling of 942330. See that rule for a\n# description and overview.\n#\n",
        "content": "SecRule REQUEST_COOKIES|!REQUEST_COOKIES:/__utm/|REQUEST_COOKIES_NAMES|ARGS_NAMES|ARGS|XML:/* \"@rx [\\\"'`][\\s\\d]*?[^\\w\\s]\\W*?\\d\\W*?.*?[\\\"'`\\d]\" \\\n    \"id:942490,\\\n    phase:2,\\\n    block,\\\n    capture,\\\n    t:none,t:urlDecodeUni,\\\n    msg:'Detects classic SQL injection probings 3/3',\\\n    logdata:'Matched Data: %{TX.0} found within %{MATCHED_VAR_NAME}: %{MATCHED_VAR}',\\\n    tag:'application-multi',\\\n    tag:'language-multi',\\\n    tag:'platform-multi',\\\n    tag:'attack-sqli',\\\n    tag:'OWASP_CRS',\\\n    tag:'capec/1000/152/248/66',\\\n    tag:'PCI/6.5.2',\\\n    tag:'paranoia-level/3',\\\n    ver:'OWASP_CRS/3.4.0-dev',\\\n    severity:'CRITICAL',\\\n    setvar:'tx.sql_injection_score=+%{tx.critical_anomaly_score}',\\\n    setvar:'tx.inbound_anomaly_score_pl3=+%{tx.critical_anomaly_score}'\"\n",
        "paranoia_level": "3",
        "rule_id": "942",
        "sec_rule_id": "942490",
        "severity": "CRITICAL",
        "tags": [
            "application-multi",
            "language-multi",
            "platform-multi",
            "attack-sqli",
            "OWASP_CRS",
            "capec/1000/152/248/66",
            "PCI/6.5.2",
            "paranoia-level/3"
        ]
    },
    {
        "comment": "#\n# [ SQL Injection Character Anomaly Usage ]\n#\n# This rule attempts to gauge when there is an excessive use of\n# meta-characters within a single parameter payload.\n#\n# It is similar to 942430, but focuses on Cookies instead of\n# GET/POST parameters.\n#\n# Expect a lot of false positives with this rule.\n# The most likely false positive instances will be complex session ids.\n# This will make it necessary to disable the rule for certain known cookies.\n# The following directive is an example to switch off the rule globally for\n# the cookie foo_id. Place this instruction in your configuration after\n# the include directive for the Core Rules Set.\n#\n# SecRuleUpdateTargetById 942420 \"!REQUEST_COOKIES:foo_id\"\n#\n",
        "content": "SecRule REQUEST_COOKIES|!REQUEST_COOKIES:/__utm/|!REQUEST_COOKIES:/_pk_ref/|REQUEST_COOKIES_NAMES \"@rx ((?:[~!@#\\$%\\^&\\*\\(\\)\\-\\+=\\{\\}\\[\\]\\|:;\\\"'\u00c2\u00b4\u00e2\u20ac\u2122\u00e2\u20ac\u02dc`<>][^~!@#\\$%\\^&\\*\\(\\)\\-\\+=\\{\\}\\[\\]\\|:;\\\"'\u00c2\u00b4\u00e2\u20ac\u2122\u00e2\u20ac\u02dc`<>]*?){8})\" \\\n    \"id:942420,\\\n    phase:1,\\\n    block,\\\n    capture,\\\n    t:none,t:urlDecodeUni,\\\n    msg:'Restricted SQL Character Anomaly Detection (cookies): # of special characters exceeded (8)',\\\n    logdata:'Matched Data: %{TX.1} found within %{MATCHED_VAR_NAME}: %{MATCHED_VAR}',\\\n    tag:'application-multi',\\\n    tag:'language-multi',\\\n    tag:'platform-multi',\\\n    tag:'attack-sqli',\\\n    tag:'OWASP_CRS',\\\n    tag:'capec/1000/152/248/66',\\\n    tag:'PCI/6.5.2',\\\n    tag:'paranoia-level/3',\\\n    ver:'OWASP_CRS/3.4.0-dev',\\\n    severity:'WARNING',\\\n    setvar:'tx.inbound_anomaly_score_pl3=+%{tx.warning_anomaly_score}',\\\n    setvar:'tx.sql_injection_score=+%{tx.warning_anomaly_score}'\"\n",
        "description": "Restricted SQL Character Anomaly Detection (cookies): # of special characters exceeded (8)",
        "paranoia_level": "3",
        "rule_id": "942",
        "sec_rule_id": "942420",
        "severity": "WARNING",
        "tags": [
            "application-multi",
            "language-multi",
            "platform-multi",
            "attack-sqli",
            "OWASP_CRS",
            "capec/1000/152/248/66",
            "PCI/6.5.2",
            "paranoia-level/3"
        ]
    },
    {
        "comment": "#\n# This is a stricter sibling of rule 942430.\n#\n# This rule is also triggered by the following exploit(s):\n# [ SAP CRM Java vulnerability CVE-2018-2380 - Exploit tested: https://www.exploit-db.com/exploits/44292 ]\n#\n",
        "content": "SecRule ARGS_NAMES|ARGS|XML:/* \"@rx ((?:[~!@#\\$%\\^&\\*\\(\\)\\-\\+=\\{\\}\\[\\]\\|:;\\\"'\u00c2\u00b4\u00e2\u20ac\u2122\u00e2\u20ac\u02dc`<>][^~!@#\\$%\\^&\\*\\(\\)\\-\\+=\\{\\}\\[\\]\\|:;\\\"'\u00c2\u00b4\u00e2\u20ac\u2122\u00e2\u20ac\u02dc`<>]*?){6})\" \\\n    \"id:942431,\\\n    phase:2,\\\n    block,\\\n    capture,\\\n    t:none,t:urlDecodeUni,\\\n    msg:'Restricted SQL Character Anomaly Detection (args): # of special characters exceeded (6)',\\\n    logdata:'Matched Data: %{TX.1} found within %{MATCHED_VAR_NAME}: %{MATCHED_VAR}',\\\n    tag:'application-multi',\\\n    tag:'language-multi',\\\n    tag:'platform-multi',\\\n    tag:'attack-sqli',\\\n    tag:'OWASP_CRS',\\\n    tag:'capec/1000/152/248/66',\\\n    tag:'PCI/6.5.2',\\\n    tag:'paranoia-level/3',\\\n    ver:'OWASP_CRS/3.4.0-dev',\\\n    severity:'WARNING',\\\n    setvar:'tx.inbound_anomaly_score_pl3=+%{tx.warning_anomaly_score}',\\\n    setvar:'tx.sql_injection_score=+%{tx.warning_anomaly_score}'\"\n",
        "description": "Restricted SQL Character Anomaly Detection (args): # of special characters exceeded (6)",
        "paranoia_level": "3",
        "rule_id": "942",
        "sec_rule_id": "942431",
        "severity": "WARNING",
        "tags": [
            "application-multi",
            "language-multi",
            "platform-multi",
            "attack-sqli",
            "OWASP_CRS",
            "capec/1000/152/248/66",
            "PCI/6.5.2",
            "paranoia-level/3"
        ]
    },
    {
        "comment": "#\n# [ Repetitive Non-Word Characters ]\n#\n# This rule attempts to identify when multiple (4 or more) non-word characters\n# are repeated in sequence.\n#\n# The pattern may occur in some normal texts, e.g. \"foo....\" will match.\n#\n",
        "content": "SecRule ARGS \"@rx \\W{4}\" \\\n    \"id:942460,\\\n    phase:2,\\\n    block,\\\n    capture,\\\n    t:none,t:urlDecodeUni,\\\n    msg:'Meta-Character Anomaly Detection Alert - Repetitive Non-Word Characters',\\\n    logdata:'Matched Data: %{TX.0} found within %{MATCHED_VAR_NAME}: %{MATCHED_VAR}',\\\n    tag:'application-multi',\\\n    tag:'language-multi',\\\n    tag:'platform-multi',\\\n    tag:'attack-sqli',\\\n    tag:'OWASP_CRS',\\\n    tag:'capec/1000/152/248/66',\\\n    tag:'PCI/6.5.2',\\\n    tag:'paranoia-level/3',\\\n    ver:'OWASP_CRS/3.4.0-dev',\\\n    severity:'WARNING',\\\n    setvar:'tx.sql_injection_score=+%{tx.warning_anomaly_score}',\\\n    setvar:'tx.inbound_anomaly_score_pl3=+%{tx.warning_anomaly_score}'\"\n",
        "description": "Meta-Character Anomaly Detection Alert - Repetitive Non-Word Characters",
        "paranoia_level": "3",
        "rule_id": "942",
        "sec_rule_id": "942460",
        "severity": "WARNING",
        "tags": [
            "application-multi",
            "language-multi",
            "platform-multi",
            "attack-sqli",
            "OWASP_CRS",
            "capec/1000/152/248/66",
            "PCI/6.5.2",
            "paranoia-level/3"
        ]
    },
    {
        "comment": "#\n# This is a sibling of rule 942100 that adds checking of the last path segment.\n#\n# libinjection is more likely to fail when passing the full path. E.g. the following\n# string produces a match:\n# 999999.1 union select unhex(hex(version())) -- and 1=1\n# while this doesn't:\n# /999999.1 union select unhex(hex(version())) -- and 1=1\\.\n# Therefore, we capture the last segment of the path and only match that with\n# libinjection. Incidentally, the last path segment is also the most likely\n# to be used for injection, other segments will most likely not be affected.\n#\n",
        "content": "SecRule REQUEST_BASENAME \"@detectSQLi\" \\\n    \"id:942101,\\\n    phase:1,\\\n    block,\\\n    capture,\\\n    t:none,t:utf8toUnicode,t:urlDecodeUni,t:removeNulls,\\\n    msg:'SQL Injection Attack Detected via libinjection',\\\n    logdata:'Matched Data: %{TX.0} found within %{MATCHED_VAR_NAME}: %{MATCHED_VAR}',\\\n    tag:'application-multi',\\\n    tag:'language-multi',\\\n    tag:'platform-multi',\\\n    tag:'attack-sqli',\\\n    tag:'OWASP_CRS',\\\n    tag:'capec/1000/152/248/66',\\\n    tag:'PCI/6.5.2',\\\n    tag:'paranoia-level/3',\\\n    ver:'OWASP_CRS/3.4.0-dev',\\\n    severity:'CRITICAL',\\\n    setvar:'tx.sql_injection_score=+%{tx.critical_anomaly_score}',\\\n    setvar:'tx.inbound_anomaly_score_pl3=+%{tx.critical_anomaly_score}'\"\n",
        "paranoia_level": "3",
        "rule_id": "942",
        "sec_rule_id": "942101",
        "severity": "CRITICAL",
        "tags": [
            "application-multi",
            "language-multi",
            "platform-multi",
            "attack-sqli",
            "OWASP_CRS",
            "capec/1000/152/248/66",
            "PCI/6.5.2",
            "paranoia-level/3"
        ]
    },
    {
        "comment": "#\n# -=[ Detect SQLi bypass: quotes ]=-\n#\n# Quotes and backticks can be used to bypass SQLi detection.\n#\n# Example:\n# GET http://localhost/test.php?id=9999%20or+{`if`(2=(select+2+from+wp_users+where+user_login='admin'))}\n#\n# The minimum text between the ticks or backticks must be 2 (if, for example) and a maximum of 29.\n# 29 is a compromise: The lower this number (29), the lower the probability of FP and the higher the probability of false negatives.\n# In tests we got a minimum number of FP with {2,29}.\n#\n# Base64 encoding detection:\n# (?:[A-Za-z0-9+/]{4})+ #match any number of 4-letter blocks of the base64 char set\n# (?:[A-Za-z0-9+/]{2}== #match 2-letter block of the base64 char set followed by \"==\", together forming a 4-letter block\n# |                     # or\n# [A-Za-z0-9+/]{3}=     #match 3-letter block of the base64 char set followed by \"=\", together forming a 4-letter block\n# )?\n#\n# The minimal string that triggers this regexp is: 'if'\n#\n# The rule 942511 is related to 942110 which catches a single ' or `\n#\n# The rule 942510 is similar to this rule, but triggers on backticks\n# (`if`). That rule runs in paranoia level 2 or higher since the risk of\n# false positives in natural text is still present but lower than this\n# rule.\n#\n",
        "content": "SecRule REQUEST_COOKIES|!REQUEST_COOKIES:/__utm/|REQUEST_COOKIES_NAMES|ARGS_NAMES|ARGS|XML:/* \"@rx (?:'(?:(?:[\\w\\s=_\\-+{}()<@]){2,29}|(?:[A-Za-z0-9+/]{4})+(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?)')\" \\\n    \"id:942511,\\\n    phase:2,\\\n    block,\\\n    capture,\\\n    t:none,t:urlDecodeUni,\\\n    msg:'SQLi bypass attempt by ticks detected',\\\n    logdata:'Matched Data: %{TX.0} found within %{MATCHED_VAR_NAME}: %{MATCHED_VAR}',\\\n    tag:'application-multi',\\\n    tag:'language-multi',\\\n    tag:'platform-multi',\\\n    tag:'attack-sqli',\\\n    tag:'OWASP_CRS',\\\n    tag:'capec/1000/152/248/66',\\\n    tag:'PCI/6.5.2',\\\n    tag:'paranoia-level/3',\\\n    ver:'OWASP_CRS/3.4.0-dev',\\\n    severity:'CRITICAL',\\\n    setvar:'tx.sql_injection_score=+%{tx.critical_anomaly_score}',\\\n    setvar:'tx.inbound_anomaly_score_pl3=+%{tx.critical_anomaly_score}'\"\n",
        "paranoia_level": "3",
        "rule_id": "942",
        "sec_rule_id": "942511",
        "severity": "CRITICAL",
        "tags": [
            "application-multi",
            "language-multi",
            "platform-multi",
            "attack-sqli",
            "OWASP_CRS",
            "capec/1000/152/248/66",
            "PCI/6.5.2",
            "paranoia-level/3"
        ]
    },
    {
        "comment": "",
        "content": "SecRule TX:DETECTION_PARANOIA_LEVEL \"@lt 4\" \"id:942017,phase:1,pass,nolog,skipAfter:END-REQUEST-942-APPLICATION-ATTACK-SQLI\"\n",
        "rule_id": "942",
        "sec_rule_id": "942017"
    },
    {
        "comment": "",
        "content": "SecRule TX:DETECTION_PARANOIA_LEVEL \"@lt 4\" \"id:942018,phase:2,pass,nolog,skipAfter:END-REQUEST-942-APPLICATION-ATTACK-SQLI\"\n",
        "rule_id": "942",
        "sec_rule_id": "942018"
    },
    {
        "comment": "#\n# [ SQL Injection Character Anomaly Usage ]\n#\n# This is a stricter sibling of rule 942420.\n#\n",
        "content": "SecRule REQUEST_COOKIES|!REQUEST_COOKIES:/__utm/|!REQUEST_COOKIES:/_pk_ref/|REQUEST_COOKIES_NAMES \"@rx ((?:[~!@#\\$%\\^&\\*\\(\\)\\-\\+=\\{\\}\\[\\]\\|:;\\\"'\u00c2\u00b4\u00e2\u20ac\u2122\u00e2\u20ac\u02dc`<>][^~!@#\\$%\\^&\\*\\(\\)\\-\\+=\\{\\}\\[\\]\\|:;\\\"'\u00c2\u00b4\u00e2\u20ac\u2122\u00e2\u20ac\u02dc`<>]*?){3})\" \\\n    \"id:942421,\\\n    phase:1,\\\n    block,\\\n    capture,\\\n    t:none,t:urlDecodeUni,\\\n    msg:'Restricted SQL Character Anomaly Detection (cookies): # of special characters exceeded (3)',\\\n    logdata:'Matched Data: %{TX.1} found within %{MATCHED_VAR_NAME}: %{MATCHED_VAR}',\\\n    tag:'application-multi',\\\n    tag:'language-multi',\\\n    tag:'platform-multi',\\\n    tag:'attack-sqli',\\\n    tag:'OWASP_CRS',\\\n    tag:'capec/1000/152/248/66',\\\n    tag:'PCI/6.5.2',\\\n    tag:'paranoia-level/4',\\\n    ver:'OWASP_CRS/3.4.0-dev',\\\n    severity:'WARNING',\\\n    setvar:'tx.inbound_anomaly_score_pl4=+%{tx.warning_anomaly_score}',\\\n    setvar:'tx.sql_injection_score=+%{tx.warning_anomaly_score}'\"\n",
        "description": "Restricted SQL Character Anomaly Detection (cookies): # of special characters exceeded (3)",
        "paranoia_level": "4",
        "rule_id": "942",
        "sec_rule_id": "942421",
        "severity": "WARNING",
        "tags": [
            "application-multi",
            "language-multi",
            "platform-multi",
            "attack-sqli",
            "OWASP_CRS",
            "capec/1000/152/248/66",
            "PCI/6.5.2",
            "paranoia-level/4"
        ]
    },
    {
        "comment": "#\n# This is a stricter sibling of rule 942430.\n#\n# This rule is also triggered by the following exploit(s):\n# [ SAP CRM Java vulnerability CVE-2018-2380 - Exploit tested: https://www.exploit-db.com/exploits/44292 ]\n#\n",
        "content": "SecRule ARGS_NAMES|ARGS|XML:/* \"@rx ((?:[~!@#\\$%\\^&\\*\\(\\)\\-\\+=\\{\\}\\[\\]\\|:;\\\"'\u00c2\u00b4\u00e2\u20ac\u2122\u00e2\u20ac\u02dc`<>][^~!@#\\$%\\^&\\*\\(\\)\\-\\+=\\{\\}\\[\\]\\|:;\\\"'\u00c2\u00b4\u00e2\u20ac\u2122\u00e2\u20ac\u02dc`<>]*?){2})\" \\\n    \"id:942432,\\\n    phase:2,\\\n    block,\\\n    capture,\\\n    t:none,t:urlDecodeUni,\\\n    msg:'Restricted SQL Character Anomaly Detection (args): # of special characters exceeded (2)',\\\n    logdata:'Matched Data: %{TX.1} found within %{MATCHED_VAR_NAME}: %{MATCHED_VAR}',\\\n    tag:'application-multi',\\\n    tag:'language-multi',\\\n    tag:'platform-multi',\\\n    tag:'attack-sqli',\\\n    tag:'OWASP_CRS',\\\n    tag:'capec/1000/152/248/66',\\\n    tag:'PCI/6.5.2',\\\n    tag:'paranoia-level/4',\\\n    ver:'OWASP_CRS/3.4.0-dev',\\\n    severity:'WARNING',\\\n    setvar:'tx.inbound_anomaly_score_pl4=+%{tx.warning_anomaly_score}',\\\n    setvar:'tx.sql_injection_score=+%{tx.warning_anomaly_score}'\"\n",
        "description": "Restricted SQL Character Anomaly Detection (args): # of special characters exceeded (2)",
        "paranoia_level": "4",
        "rule_id": "942",
        "sec_rule_id": "942432",
        "severity": "WARNING",
        "tags": [
            "application-multi",
            "language-multi",
            "platform-multi",
            "attack-sqli",
            "OWASP_CRS",
            "capec/1000/152/248/66",
            "PCI/6.5.2",
            "paranoia-level/4"
        ]
    },
    {
        "comment": "#\n# -= Paranoia Level 0 (empty) =- (apply unconditionally)\n#\n",
        "content": "SecRule TX:DETECTION_PARANOIA_LEVEL \"@lt 1\" \"id:943011,phase:1,pass,nolog,skipAfter:END-REQUEST-943-APPLICATION-ATTACK-SESSION-FIXATION\"\n",
        "rule_id": "943",
        "sec_rule_id": "943011"
    },
    {
        "comment": "",
        "content": "SecRule TX:DETECTION_PARANOIA_LEVEL \"@lt 1\" \"id:943012,phase:2,pass,nolog,skipAfter:END-REQUEST-943-APPLICATION-ATTACK-SESSION-FIXATION\"\n",
        "rule_id": "943",
        "sec_rule_id": "943012"
    },
    {
        "comment": "#\n# Session fixation\n#\n# -=[ References ]=-\n# http://projects.webappsec.org/Session-Fixation\n# http://projects.webappsec.org/w/page/13246960/Session%20Fixation\n# http://capec.mitre.org/data/definitions/61.html\n#\n",
        "content": "SecRule REQUEST_COOKIES|!REQUEST_COOKIES:/__utm/|REQUEST_COOKIES_NAMES|ARGS_NAMES|ARGS|XML:/* \"@rx (?i:\\.cookie\\b.*?;\\W*?(?:expires|domain)\\W*?=|\\bhttp-equiv\\W+set-cookie\\b)\" \\\n    \"id:943100,\\\n    phase:2,\\\n    block,\\\n    capture,\\\n    t:none,t:urlDecodeUni,\\\n    msg:'Possible Session Fixation Attack: Setting Cookie Values in HTML',\\\n    logdata:'Matched Data: %{TX.0} found within %{MATCHED_VAR_NAME}: %{MATCHED_VAR}',\\\n    tag:'application-multi',\\\n    tag:'language-multi',\\\n    tag:'platform-multi',\\\n    tag:'attack-fixation',\\\n    tag:'paranoia-level/1',\\\n    tag:'OWASP_CRS',\\\n    tag:'capec/1000/225/21/593/61',\\\n    ctl:auditLogParts=+E,\\\n    ver:'OWASP_CRS/3.4.0-dev',\\\n    severity:'CRITICAL',\\\n    setvar:'tx.session_fixation_score=+%{tx.critical_anomaly_score}',\\\n    setvar:'tx.inbound_anomaly_score_pl1=+%{tx.critical_anomaly_score}'\"\n",
        "description": "Possible Session Fixation Attack: Setting Cookie Values in HTML",
        "paranoia_level": "1",
        "rule_id": "943",
        "sec_rule_id": "943100",
        "severity": "CRITICAL",
        "tags": [
            "application-multi",
            "language-multi",
            "platform-multi",
            "attack-fixation",
            "paranoia-level/1",
            "OWASP_CRS",
            "capec/1000/225/21/593/61"
        ]
    },
    {
        "comment": "",
        "content": "SecRule ARGS_NAMES \"@rx ^(?:jsessionid|aspsessionid|asp\\.net_sessionid|phpsession|phpsessid|weblogicsession|session_id|session-id|cfid|cftoken|cfsid|jservsession|jwsession)$\" \\\n    \"id:943110,\\\n    phase:2,\\\n    block,\\\n    capture,\\\n    t:none,t:lowercase,\\\n    msg:'Possible Session Fixation Attack: SessionID Parameter Name with Off-Domain Referer',\\\n    logdata:'Matched Data: %{TX.0} found within %{MATCHED_VAR_NAME}: %{MATCHED_VAR}',\\\n    tag:'application-multi',\\\n    tag:'language-multi',\\\n    tag:'platform-multi',\\\n    tag:'attack-fixation',\\\n    tag:'paranoia-level/1',\\\n    tag:'OWASP_CRS',\\\n    tag:'capec/1000/225/21/593/61',\\\n    ctl:auditLogParts=+E,\\\n    ver:'OWASP_CRS/3.4.0-dev',\\\n    severity:'CRITICAL',\\\n    chain\"\n    SecRule REQUEST_HEADERS:Referer \"@rx ^(?:ht|f)tps?://(.*?)/\" \\\n        \"capture,\\\n        chain\"\n        SecRule TX:1 \"!@endsWith %{request_headers.host}\" \\\n            \"setvar:'tx.session_fixation_score=+%{tx.critical_anomaly_score}',\\\n            setvar:'tx.inbound_anomaly_score_pl1=+%{tx.critical_anomaly_score}'\"\n",
        "description": "Possible Session Fixation Attack: SessionID Parameter Name with Off-Domain Referer",
        "paranoia_level": "1",
        "rule_id": "943",
        "sec_rule_id": "943110",
        "severity": "CRITICAL",
        "tags": [
            "application-multi",
            "language-multi",
            "platform-multi",
            "attack-fixation",
            "paranoia-level/1",
            "OWASP_CRS",
            "capec/1000/225/21/593/61"
        ]
    },
    {
        "comment": "",
        "content": "SecRule ARGS_NAMES \"@rx ^(?:jsessionid|aspsessionid|asp\\.net_sessionid|phpsession|phpsessid|weblogicsession|session_id|session-id|cfid|cftoken|cfsid|jservsession|jwsession)$\" \\\n    \"id:943120,\\\n    phase:2,\\\n    block,\\\n    capture,\\\n    t:none,t:lowercase,\\\n    msg:'Possible Session Fixation Attack: SessionID Parameter Name with No Referer',\\\n    logdata:'Matched Data: %{TX.0} found within %{MATCHED_VAR_NAME}: %{MATCHED_VAR}',\\\n    tag:'application-multi',\\\n    tag:'language-multi',\\\n    tag:'platform-multi',\\\n    tag:'attack-fixation',\\\n    tag:'paranoia-level/1',\\\n    tag:'OWASP_CRS',\\\n    tag:'capec/1000/225/21/593/61',\\\n    ctl:auditLogParts=+E,\\\n    ver:'OWASP_CRS/3.4.0-dev',\\\n    severity:'CRITICAL',\\\n    chain\"\n    SecRule &REQUEST_HEADERS:Referer \"@eq 0\" \\\n        \"setvar:'tx.session_fixation_score=+%{tx.critical_anomaly_score}',\\\n        setvar:'tx.inbound_anomaly_score_pl1=+%{tx.critical_anomaly_score}'\"\n",
        "description": "Possible Session Fixation Attack: SessionID Parameter Name with No Referer",
        "paranoia_level": "1",
        "rule_id": "943",
        "sec_rule_id": "943120",
        "severity": "CRITICAL",
        "tags": [
            "application-multi",
            "language-multi",
            "platform-multi",
            "attack-fixation",
            "paranoia-level/1",
            "OWASP_CRS",
            "capec/1000/225/21/593/61"
        ]
    },
    {
        "comment": "",
        "content": "SecRule TX:DETECTION_PARANOIA_LEVEL \"@lt 2\" \"id:943013,phase:1,pass,nolog,skipAfter:END-REQUEST-943-APPLICATION-ATTACK-SESSION-FIXATION\"\n",
        "rule_id": "943",
        "sec_rule_id": "943013"
    },
    {
        "comment": "",
        "content": "SecRule TX:DETECTION_PARANOIA_LEVEL \"@lt 2\" \"id:943014,phase:2,pass,nolog,skipAfter:END-REQUEST-943-APPLICATION-ATTACK-SESSION-FIXATION\"\n",
        "rule_id": "943",
        "sec_rule_id": "943014"
    },
    {
        "comment": "#\n# -= Paranoia Level 2 =- (apply only when tx.detection_paranoia_level is sufficiently high: 2 or higher)\n#\n",
        "content": "SecRule TX:DETECTION_PARANOIA_LEVEL \"@lt 3\" \"id:943015,phase:1,pass,nolog,skipAfter:END-REQUEST-943-APPLICATION-ATTACK-SESSION-FIXATION\"\n",
        "rule_id": "943",
        "sec_rule_id": "943015"
    },
    {
        "comment": "",
        "content": "SecRule TX:DETECTION_PARANOIA_LEVEL \"@lt 3\" \"id:943016,phase:2,pass,nolog,skipAfter:END-REQUEST-943-APPLICATION-ATTACK-SESSION-FIXATION\"\n",
        "rule_id": "943",
        "sec_rule_id": "943016"
    },
    {
        "comment": "#\n# -= Paranoia Level 3 =- (apply only when tx.detection_paranoia_level is sufficiently high: 3 or higher)\n#\n",
        "content": "SecRule TX:DETECTION_PARANOIA_LEVEL \"@lt 4\" \"id:943017,phase:1,pass,nolog,skipAfter:END-REQUEST-943-APPLICATION-ATTACK-SESSION-FIXATION\"\n",
        "rule_id": "943",
        "sec_rule_id": "943017"
    },
    {
        "comment": "",
        "content": "SecRule TX:DETECTION_PARANOIA_LEVEL \"@lt 4\" \"id:943018,phase:2,pass,nolog,skipAfter:END-REQUEST-943-APPLICATION-ATTACK-SESSION-FIXATION\"\n",
        "rule_id": "943",
        "sec_rule_id": "943018"
    },
    {
        "comment": "#\n# -= Paranoia Level 0 (empty) =- (apply unconditionally)\n#\n# Many rules check request bodies, use \"SecRequestBodyAccess On\" to enable it on main modsecurity configuration file.\n",
        "content": "SecRule TX:DETECTION_PARANOIA_LEVEL \"@lt 1\" \"id:944011,phase:1,pass,nolog,skipAfter:END-REQUEST-944-APPLICATION-ATTACK-JAVA\"\n",
        "rule_id": "944",
        "sec_rule_id": "944011"
    },
    {
        "comment": "",
        "content": "SecRule TX:DETECTION_PARANOIA_LEVEL \"@lt 1\" \"id:944012,phase:2,pass,nolog,skipAfter:END-REQUEST-944-APPLICATION-ATTACK-JAVA\"\n",
        "rule_id": "944",
        "sec_rule_id": "944012"
    },
    {
        "comment": "#\n# -= Paranoia Level 1 (default) =- (apply only when tx.detection_paranoia_level is sufficiently high: 1 or higher)\n#\n# This rule is also triggered by an Apache Struts exploit:\n# [ Apache Struts vulnerability CVE-2017-5638 - Exploit tested: https://github.com/xsscx/cve-2017-5638 ]\n#\n# This rule is also triggered by an Apache Struts Remote Code Execution exploit:\n# [ Apache Struts vulnerability CVE-2017-9791 - Exploit tested: https://www.exploit-db.com/exploits/42324 ]\n#\n# This rule is also triggered by an Apache Struts Remote Code Execution exploit:\n# [ Apache Struts vulnerability CVE-2017-9805 - Exploit tested: https://www.exploit-db.com/exploits/42627 ]\n#\n# This rule is also triggered by an Oracle WebLogic Remote Command Execution exploit:\n# [ Oracle WebLogic vulnerability CVE-2017-10271 - Exploit tested: https://www.exploit-db.com/exploits/43458 ]\n#\n",
        "content": "SecRule ARGS|ARGS_NAMES|REQUEST_COOKIES|!REQUEST_COOKIES:/__utm/|REQUEST_COOKIES_NAMES|REQUEST_BODY|REQUEST_HEADERS|XML:/*|XML://@* \\\n    \"@rx java\\.lang\\.(?:runtime|processbuilder)\" \\\n    \"id:944100,\\\n    phase:2,\\\n    block,\\\n    t:none,t:lowercase,\\\n    msg:'Remote Command Execution: Suspicious Java class detected',\\\n    logdata:'Matched Data: %{MATCHED_VAR} found within %{MATCHED_VAR_NAME}',\\\n    tag:'application-multi',\\\n    tag:'language-java',\\\n    tag:'platform-multi',\\\n    tag:'attack-rce',\\\n    tag:'OWASP_CRS',\\\n    tag:'capec/1000/152/137/6',\\\n    tag:'PCI/6.5.2',\\\n    tag:'paranoia-level/1',\\\n    ver:'OWASP_CRS/3.4.0-dev',\\\n    severity:'CRITICAL',\\\n    setvar:'tx.rce_score=+%{tx.critical_anomaly_score}',\\\n    setvar:'tx.inbound_anomaly_score_pl1=+%{tx.critical_anomaly_score}'\"\n",
        "paranoia_level": "1",
        "rule_id": "944",
        "sec_rule_id": "944100",
        "severity": "CRITICAL",
        "tags": [
            "application-multi",
            "language-java",
            "platform-multi",
            "attack-rce",
            "OWASP_CRS",
            "capec/1000/152/137/6",
            "PCI/6.5.2",
            "paranoia-level/1"
        ]
    },
    {
        "comment": "# This rule is also triggered by the following exploit(s):\n# [ Apache Struts vulnerability CVE-2017-5638 - Exploit tested: https://github.com/xsscx/cve-2017-5638 ]\n# [ Apache Struts vulnerability CVE-2017-9791 - Exploit tested: https://www.exploit-db.com/exploits/42324 ]\n# [ Apache Struts vulnerability CVE-2017-9805 - Exploit tested: https://www.exploit-db.com/exploits/42627 ]\n# [ Java deserialization vulnerability/Apache Struts (CVE-2017-9805) ]\n# [ Java deserialization vulnerability/Oracle Weblogic (CVE-2017-10271) ]\n# [ SAP CRM Java vulnerability CVE-2018-2380 - Exploit tested: https://www.exploit-db.com/exploits/44292 ]\n#\n# Generic rule to detect processbuilder or runtime calls, if any of those is found and the same target contains\n# java. unmarshaller or base64data to trigger a potential payload execution\n# tested with https://www.exploit-db.com/exploits/42627/ and https://www.exploit-db.com/exploits/43458/\n",
        "content": "SecRule ARGS|ARGS_NAMES|REQUEST_COOKIES|!REQUEST_COOKIES:/__utm/|REQUEST_COOKIES_NAMES|REQUEST_BODY|REQUEST_HEADERS|XML:/*|XML://@* \\\n    \"@rx (?:runtime|processbuilder)\" \\\n    \"id:944110,\\\n    phase:2,\\\n    block,\\\n    t:none,t:lowercase,\\\n    msg:'Remote Command Execution: Java process spawn (CVE-2017-9805)',\\\n    logdata:'Matched Data: %{MATCHED_VAR} found within %{MATCHED_VAR_NAME}',\\\n    tag:'application-multi',\\\n    tag:'language-java',\\\n    tag:'platform-multi',\\\n    tag:'attack-rce',\\\n    tag:'OWASP_CRS',\\\n    tag:'capec/1000/152/248',\\\n    tag:'PCI/6.5.2',\\\n    tag:'paranoia-level/1',\\\n    ver:'OWASP_CRS/3.4.0-dev',\\\n    severity:'CRITICAL',\\\n    chain\"\n    SecRule ARGS|ARGS_NAMES|REQUEST_COOKIES|!REQUEST_COOKIES:/__utm/|REQUEST_COOKIES_NAMES|REQUEST_BODY|REQUEST_HEADERS|XML:/*|XML://@* \"@rx (?:unmarshaller|base64data|java\\.)\" \\\n        \"setvar:'tx.rce_score=+%{tx.critical_anomaly_score}',\\\n        setvar:'tx.inbound_anomaly_score_pl1=+%{tx.critical_anomaly_score}'\"\n",
        "paranoia_level": "1",
        "rule_id": "944",
        "sec_rule_id": "944110",
        "severity": "CRITICAL",
        "tags": [
            "application-multi",
            "language-java",
            "platform-multi",
            "attack-rce",
            "OWASP_CRS",
            "capec/1000/152/248",
            "PCI/6.5.2",
            "paranoia-level/1"
        ]
    },
    {
        "comment": "# Magic bytes detected and payload included possibly RCE vulnerable classes detected and process execution methods detected\n# anomaly score set to critical as all conditions indicate the request try to perform RCE.\n",
        "content": "SecRule ARGS|ARGS_NAMES|REQUEST_COOKIES|!REQUEST_COOKIES:/__utm/|REQUEST_COOKIES_NAMES|REQUEST_BODY|REQUEST_HEADERS|XML:/*|XML://@* \\\n    \"@rx (?:clonetransformer|forclosure|instantiatefactory|instantiatetransformer|invokertransformer|prototypeclonefactory|prototypeserializationfactory|whileclosure|getproperty|filewriter|xmldecoder)\" \\\n    \"id:944120,\\\n    phase:2,\\\n    block,\\\n    t:none,t:lowercase,\\\n    msg:'Remote Command Execution: Java serialization (CVE-2015-4852)',\\\n    logdata:'Matched Data: %{MATCHED_VAR} found within %{MATCHED_VAR_NAME}',\\\n    tag:'application-multi',\\\n    tag:'language-java',\\\n    tag:'platform-multi',\\\n    tag:'attack-rce',\\\n    tag:'OWASP_CRS',\\\n    tag:'capec/1000/152/248',\\\n    tag:'PCI/6.5.2',\\\n    tag:'paranoia-level/1',\\\n    ver:'OWASP_CRS/3.4.0-dev',\\\n    severity:'CRITICAL',\\\n    chain\"\n    SecRule MATCHED_VARS \"@rx (?:runtime|processbuilder)\" \\\n        \"setvar:'tx.rce_score=+%{tx.critical_anomaly_score}',\\\n        setvar:'tx.inbound_anomaly_score_pl1=+%{tx.critical_anomaly_score}'\"\n",
        "paranoia_level": "1",
        "rule_id": "944",
        "sec_rule_id": "944120",
        "severity": "CRITICAL",
        "tags": [
            "application-multi",
            "language-java",
            "platform-multi",
            "attack-rce",
            "OWASP_CRS",
            "capec/1000/152/248",
            "PCI/6.5.2",
            "paranoia-level/1"
        ]
    },
    {
        "comment": "# This rule is also triggered by the following exploit(s):\n# [ Apache Struts vulnerability CVE-2017-5638 - Exploit tested: https://github.com/mazen160/struts-pwn ]\n# [ Apache Struts vulnerability CVE-2017-5638 - Exploit tested: https://github.com/xsscx/cve-2017-5638 ]\n# [ Apache Struts vulnerability CVE-2017-9791 - Exploit tested: https://www.exploit-db.com/exploits/42324 ]\n# [ Apache Struts vulnerability CVE-2017-9805 - Exploit tested: https://www.exploit-db.com/exploits/42627 ]\n# [ Oracle WebLogic vulnerability CVE-2017-10271 - Exploit tested: https://www.exploit-db.com/exploits/43458 ]\n# [ Apache Struts vulnerability CVE-2018-11776 - Exploit tested: https://www.exploit-db.com/exploits/45262 ]\n# [ Apache Struts vulnerability CVE-2018-11776 - Exploit tested: https://www.exploit-db.com/exploits/45260 ]\n#\n",
        "content": "SecRule ARGS|ARGS_NAMES|REQUEST_COOKIES|!REQUEST_COOKIES:/__utm/|REQUEST_COOKIES_NAMES|REQUEST_BODY|REQUEST_FILENAME|REQUEST_HEADERS|XML:/*|XML://@* \\\n    \"@pmFromFile java-classes.data\" \\\n    \"id:944130,\\\n    phase:2,\\\n    block,\\\n    t:none,\\\n    msg:'Suspicious Java class detected',\\\n    logdata:'Matched Data: %{MATCHED_VAR} found within %{MATCHED_VAR_NAME}',\\\n    tag:'application-multi',\\\n    tag:'language-java',\\\n    tag:'platform-multi',\\\n    tag:'attack-rce',\\\n    tag:'OWASP_CRS',\\\n    tag:'capec/1000/152/248',\\\n    tag:'PCI/6.5.2',\\\n    tag:'paranoia-level/1',\\\n    ver:'OWASP_CRS/3.4.0-dev',\\\n    severity:'CRITICAL',\\\n    setvar:'tx.rce_score=+%{tx.critical_anomaly_score}',\\\n    setvar:'tx.inbound_anomaly_score_pl1=+%{tx.critical_anomaly_score}'\"\n",
        "paranoia_level": "1",
        "rule_id": "944",
        "sec_rule_id": "944130",
        "severity": "CRITICAL",
        "tags": [
            "application-multi",
            "language-java",
            "platform-multi",
            "attack-rce",
            "OWASP_CRS",
            "capec/1000/152/248",
            "PCI/6.5.2",
            "paranoia-level/1"
        ]
    },
    {
        "comment": "#\n# [ Java Script Uploads ]\n#\n# Block file uploads with filenames ending in Java scripts (.jsp, .jspx)\n#\n# Many application contain Unrestricted File Upload vulnerabilities.\n# https://owasp.org/www-community/vulnerabilities/Unrestricted_File_Upload\n#\n# Attackers may use such a vulnerability to achieve remote code execution\n# by uploading a script file. If the upload storage location is predictable\n# and not adequately protected, the attacker may then request the uploaded\n# file and have the code within it executed on the server.\n#\n# Some AJAX uploaders use the nonstandard request headers X-Filename,\n# X_Filename, or X-File-Name to transmit the file name to the server;\n# scan these request headers as well as multipart/form-data file names.\n#\n",
        "content": "SecRule FILES|REQUEST_HEADERS:X-Filename|REQUEST_HEADERS:X_Filename|REQUEST_HEADERS:X.Filename|REQUEST_HEADERS:X-File-Name \"@rx .*\\.(?:jsp|jspx)\\.*$\" \\\n    \"id:944140,\\\n    phase:2,\\\n    block,\\\n    capture,\\\n    t:none,t:lowercase,\\\n    msg:'Java Injection Attack: Java Script File Upload Found',\\\n    logdata:'Matched Data: %{TX.0} found within %{MATCHED_VAR_NAME}: %{MATCHED_VAR}',\\\n    tag:'application-multi',\\\n    tag:'language-java',\\\n    tag:'platform-multi',\\\n    tag:'attack-injection-java',\\\n    tag:'paranoia-level/1',\\\n    tag:'OWASP_CRS',\\\n    tag:'capec/1000/152/242',\\\n    ctl:auditLogParts=+E,\\\n    ver:'OWASP_CRS/3.4.0-dev',\\\n    severity:'CRITICAL',\\\n    setvar:'tx.rce_score=+%{tx.critical_anomaly_score}',\\\n    setvar:'tx.anomaly_score_pl1=+%{tx.critical_anomaly_score}'\"\n",
        "paranoia_level": "1",
        "rule_id": "944",
        "sec_rule_id": "944140",
        "severity": "CRITICAL",
        "tags": [
            "application-multi",
            "language-java",
            "platform-multi",
            "attack-injection-java",
            "paranoia-level/1",
            "OWASP_CRS",
            "capec/1000/152/242"
        ]
    },
    {
        "comment": "# Log4J / Log4Shell Defense\n#\n# This addresses exploits against the Log4J library described in several CVEs:\n# * CVE-2021-44228\n# * CVE-2021-44832\n# * CVE-2021-45046\n# * CVE-2021-45105\n#\n# See https://coreruleset.org/20211213/crs-and-log4j-log4shell-cve-2021-44228/\n#\n# This rule attempts to detect two things:\n# * Nested use of ${\n# * use of ${jndi:... without the closing bracket\n#\n# Rule 932130 is also essential for defense since there are certain\n# bypasses of the log4j rules that can be caught by 932130.\n#\n# The payload is not displayed in the alert message since log4j could\n# potentially be executed on the logviewer.\n#\n# This rule has stricter siblings: 944151 (PL2), 944152 (PL4)\n#\n# Regular expression generated from util/regexp-assemble/data/944150.data.\n# To update the regular expression run the following shell script\n# (consult util/regexp-assemble/README.md for details):\n#   util/regexp-assemble/regexp-assemble.py update 944150\n#\n",
        "content": "SecRule REQUEST_LINE|ARGS|ARGS_NAMES|REQUEST_COOKIES|REQUEST_COOKIES_NAMES|REQUEST_HEADERS|XML:/*|XML://@* \"@rx (?i)(?:\\$|&dollar;?)(?:\\{|&(?:lbrace|lcub);?)(?:[^}]{0,15}(?:\\$|&dollar;?)(?:\\{|&(?:lbrace|lcub);?)|(?:jndi|ctx))\" \\\n    \"id:944150,\\\n    phase:2,\\\n    block,\\\n    t:none,t:urlDecodeUni,t:jsDecode,t:htmlEntityDecode,\\\n    log,\\\n    msg:'Potential Remote Command Execution: Log4j / Log4shell',\\\n    tag:'application-multi',\\\n    tag:'language-java',\\\n    tag:'platform-multi',\\\n    tag:'attack-rce',\\\n    tag:'OWASP_CRS',\\\n    tag:'capec/1000/152/137/6',\\\n    tag:'PCI/6.5.2',\\\n    tag:'paranoia-level/1',\\\n    ver:'OWASP_CRS/3.4.0-dev',\\\n    severity:'CRITICAL',\\\n    setvar:'tx.rce_score=+%{tx.critical_anomaly_score}',\\\n    setvar:'tx.anomaly_score_pl1=+%{tx.critical_anomaly_score}'\"\n",
        "paranoia_level": "1",
        "rule_id": "944",
        "sec_rule_id": "944150",
        "severity": "CRITICAL",
        "tags": [
            "application-multi",
            "language-java",
            "platform-multi",
            "attack-rce",
            "OWASP_CRS",
            "capec/1000/152/137/6",
            "PCI/6.5.2",
            "paranoia-level/1"
        ]
    },
    {
        "comment": "",
        "content": "SecRule TX:DETECTION_PARANOIA_LEVEL \"@lt 2\" \"id:944013,phase:1,pass,nolog,skipAfter:END-REQUEST-944-APPLICATION-ATTACK-JAVA\"\n",
        "rule_id": "944",
        "sec_rule_id": "944013"
    },
    {
        "comment": "",
        "content": "SecRule TX:DETECTION_PARANOIA_LEVEL \"@lt 2\" \"id:944014,phase:2,pass,nolog,skipAfter:END-REQUEST-944-APPLICATION-ATTACK-JAVA\"\n",
        "rule_id": "944",
        "sec_rule_id": "944014"
    },
    {
        "comment": "# This is a stricter sibling of 944150.\n# It is a re-iteration of said rule without the curly bracket distance limiter\n# between the nested \"${\". This is prone to backtracking and therefore a potential\n# DoS problem for backtracking regular expression engines (e.g. PCRE2), but it also avoids evasions that fill the space between the nested\n# elements with arbitrary data.\n#\n# Regular expression generated from util/regexp-assemble/data/944151.data.\n# To update the regular expression run the following shell script\n# (consult util/regexp-assemble/README.md for details):\n#   util/regexp-assemble/regexp-assemble.py update 944151\n#\n",
        "content": "SecRule REQUEST_LINE|ARGS|ARGS_NAMES|REQUEST_COOKIES|REQUEST_COOKIES_NAMES|REQUEST_HEADERS|XML:/*|XML://@* \"@rx (?i)(?:\\$|&dollar;?)(?:\\{|&(?:lbrace|lcub);?)(?:[^}]*(?:\\$|&dollar;?)(?:\\{|&(?:lbrace|lcub);?)|(?:jndi|ctx))\" \\\n    \"id:944151,\\\n    phase:2,\\\n    block,\\\n    t:none,t:urlDecodeUni,t:jsDecode,t:htmlEntityDecode,\\\n    log,\\\n    msg:'Potential Remote Command Execution: Log4j / Log4shell',\\\n    tag:'application-multi',\\\n    tag:'language-java',\\\n    tag:'platform-multi',\\\n    tag:'attack-rce',\\\n    tag:'OWASP_CRS',\\\n    tag:'capec/1000/152/137/6',\\\n    tag:'PCI/6.5.2',\\\n    tag:'paranoia-level/2',\\\n    ver:'OWASP_CRS/3.4.0-dev',\\\n    severity:'CRITICAL',\\\n    setvar:'tx.rce_score=+%{tx.critical_anomaly_score}',\\\n    setvar:'tx.anomaly_score_pl2=+%{tx.critical_anomaly_score}'\"\n",
        "paranoia_level": "2",
        "rule_id": "944",
        "sec_rule_id": "944151",
        "severity": "CRITICAL",
        "tags": [
            "application-multi",
            "language-java",
            "platform-multi",
            "attack-rce",
            "OWASP_CRS",
            "capec/1000/152/137/6",
            "PCI/6.5.2",
            "paranoia-level/2"
        ]
    },
    {
        "comment": "# [ Java deserialization vulnerability/Apache Commons (CVE-2015-4852) ]\n#\n# Detect exploitation of \"Java deserialization\" Apache Commons.\n#\n# Based on rules by @spartantri.\n# https://spartantri.com/ModSecurity/?p=44\n#\n# Interesting references about the vulnerability\n# https://foxglovesecurity.com/2015/11/06/what-do-weblogic-websphere-jboss-jenkins-opennms-and-your-application-have-in-common-this-vulnerability/\n# https://github.com/GrrrDog/Java-Deserialization-Cheat-Sheet\n#\n# Potential false positives with random fields, the anomaly level is set low to avoid blocking request\n",
        "content": "SecRule ARGS|ARGS_NAMES|REQUEST_COOKIES|!REQUEST_COOKIES:/__utm/|REQUEST_COOKIES_NAMES|REQUEST_BODY|REQUEST_HEADERS|XML:/*|XML://@* \\\n    \"@rx \\xac\\xed\\x00\\x05\" \\\n    \"id:944200,\\\n    phase:2,\\\n    block,\\\n    msg:'Magic bytes Detected, probable java serialization in use',\\\n    logdata:'Matched Data: %{MATCHED_VAR} found within %{MATCHED_VAR_NAME}',\\\n    tag:'application-multi',\\\n    tag:'language-java',\\\n    tag:'platform-multi',\\\n    tag:'attack-rce',\\\n    tag:'OWASP_CRS',\\\n    tag:'capec/1000/152/248',\\\n    tag:'PCI/6.5.2',\\\n    tag:'paranoia-level/2',\\\n    ver:'OWASP_CRS/3.4.0-dev',\\\n    severity:'CRITICAL',\\\n    setvar:'tx.rce_score=+%{tx.critical_anomaly_score}',\\\n    setvar:'tx.inbound_anomaly_score_pl2=+%{tx.critical_anomaly_score}'\"\n",
        "paranoia_level": "2",
        "rule_id": "944",
        "sec_rule_id": "944200",
        "severity": "CRITICAL",
        "tags": [
            "application-multi",
            "language-java",
            "platform-multi",
            "attack-rce",
            "OWASP_CRS",
            "capec/1000/152/248",
            "PCI/6.5.2",
            "paranoia-level/2"
        ]
    },
    {
        "comment": "# Detecting possible base64 text to match encoded magic bytes \\xac\\xed\\x00\\x05 with padding encoded in base64 strings are rO0ABQ KztAAU Cs7QAF\n",
        "content": "SecRule ARGS|ARGS_NAMES|REQUEST_COOKIES|!REQUEST_COOKIES:/__utm/|REQUEST_COOKIES_NAMES|REQUEST_BODY|REQUEST_HEADERS|XML:/*|XML://@* \\\n    \"@rx (?:rO0ABQ|KztAAU|Cs7QAF)\" \\\n    \"id:944210,\\\n    phase:2,\\\n    block,\\\n    msg:'Magic bytes Detected Base64 Encoded, probable java serialization in use',\\\n    logdata:'Matched Data: %{MATCHED_VAR} found within %{MATCHED_VAR_NAME}',\\\n    tag:'application-multi',\\\n    tag:'language-java',\\\n    tag:'platform-multi',\\\n    tag:'attack-rce',\\\n    tag:'OWASP_CRS',\\\n    tag:'capec/1000/152/248',\\\n    tag:'PCI/6.5.2',\\\n    tag:'paranoia-level/2',\\\n    ver:'OWASP_CRS/3.4.0-dev',\\\n    severity:'CRITICAL',\\\n    setvar:'tx.rce_score=+%{tx.critical_anomaly_score}',\\\n    setvar:'tx.inbound_anomaly_score_pl2=+%{tx.critical_anomaly_score}'\"\n",
        "paranoia_level": "2",
        "rule_id": "944",
        "sec_rule_id": "944210",
        "severity": "CRITICAL",
        "tags": [
            "application-multi",
            "language-java",
            "platform-multi",
            "attack-rce",
            "OWASP_CRS",
            "capec/1000/152/248",
            "PCI/6.5.2",
            "paranoia-level/2"
        ]
    },
    {
        "comment": "",
        "content": "SecRule ARGS|ARGS_NAMES|REQUEST_COOKIES|!REQUEST_COOKIES:/__utm/|REQUEST_COOKIES_NAMES|REQUEST_BODY|REQUEST_HEADERS|XML:/*|XML://@* \\\n    \"@rx (?:clonetransformer|forclosure|instantiatefactory|instantiatetransformer|invokertransformer|prototypeclonefactory|prototypeserializationfactory|whileclosure|getproperty|filewriter|xmldecoder)\" \\\n    \"id:944240,\\\n    phase:2,\\\n    block,\\\n    t:none,t:lowercase,\\\n    msg:'Remote Command Execution: Java serialization (CVE-2015-4852)',\\\n    logdata:'Matched Data: %{MATCHED_VAR} found within %{MATCHED_VAR_NAME}',\\\n    tag:'application-multi',\\\n    tag:'language-java',\\\n    tag:'platform-multi',\\\n    tag:'attack-rce',\\\n    tag:'OWASP_CRS',\\\n    tag:'capec/1000/152/248',\\\n    tag:'PCI/6.5.2',\\\n    tag:'paranoia-level/2',\\\n    ver:'OWASP_CRS/3.4.0-dev',\\\n    severity:'CRITICAL',\\\n    setvar:'tx.rce_score=+%{tx.critical_anomaly_score}',\\\n    setvar:'tx.inbound_anomaly_score_pl2=+%{tx.critical_anomaly_score}'\"\n",
        "paranoia_level": "2",
        "rule_id": "944",
        "sec_rule_id": "944240",
        "severity": "CRITICAL",
        "tags": [
            "application-multi",
            "language-java",
            "platform-multi",
            "attack-rce",
            "OWASP_CRS",
            "capec/1000/152/248",
            "PCI/6.5.2",
            "paranoia-level/2"
        ]
    },
    {
        "comment": "# This rule is also triggered by the following exploit(s):\n# [ SAP CRM Java vulnerability CVE-2018-2380 - Exploit tested: https://www.exploit-db.com/exploits/44292 ]\n#\n",
        "content": "SecRule ARGS|ARGS_NAMES|REQUEST_COOKIES|!REQUEST_COOKIES:/__utm/|REQUEST_COOKIES_NAMES|REQUEST_BODY|REQUEST_HEADERS|XML:/*|XML://@* \\\n    \"@rx java\\b.+(?:runtime|processbuilder)\" \\\n    \"id:944250,\\\n    phase:2,\\\n    block,\\\n    t:lowercase,\\\n    msg:'Remote Command Execution: Suspicious Java method detected',\\\n    logdata:'Matched Data: %{MATCHED_VAR} found within %{MATCHED_VAR_NAME}',\\\n    tag:'application-multi',\\\n    tag:'language-java',\\\n    tag:'platform-multi',\\\n    tag:'attack-rce',\\\n    tag:'OWASP_CRS',\\\n    tag:'capec/1000/152/248',\\\n    tag:'PCI/6.5.2',\\\n    tag:'paranoia-level/2',\\\n    ver:'OWASP_CRS/3.4.0-dev',\\\n    severity:'CRITICAL',\\\n    setvar:'tx.rce_score=+%{tx.critical_anomaly_score}',\\\n    setvar:'tx.inbound_anomaly_score_pl2=+%{tx.critical_anomaly_score}'\"\n",
        "paranoia_level": "2",
        "rule_id": "944",
        "sec_rule_id": "944250",
        "severity": "CRITICAL",
        "tags": [
            "application-multi",
            "language-java",
            "platform-multi",
            "attack-rce",
            "OWASP_CRS",
            "capec/1000/152/248",
            "PCI/6.5.2",
            "paranoia-level/2"
        ]
    },
    {
        "comment": "# This rule is also triggered by the following exploit(s):\n# - https://www.rapid7.com/blog/post/2022/03/30/spring4shell-zero-day-vulnerability-in-spring-framework/\n# - https://www.ironcastle.net/possible-new-java-spring-framework-vulnerability-wed-mar-30th/\n#\n",
        "content": "SecRule ARGS|ARGS_NAMES|REQUEST_COOKIES|!REQUEST_COOKIES:/__utm/|REQUEST_COOKIES_NAMES|REQUEST_BODY|REQUEST_HEADERS|XML:/*|XML://@* \\\n    \"@rx (?:class\\.module\\.classLoader\\.resources\\.context\\.parent\\.pipeline|springframework\\.context\\.support\\.FileSystemXmlApplicationContext)\" \\\n    \"id:944260,\\\n    phase:2,\\\n    block,\\\n    t:urlDecodeUni,\\\n    msg:'Remote Command Execution: Malicious class-loading payload',\\\n    logdata:'Matched Data: %{MATCHED_VAR} found within %{MATCHED_VAR_NAME}',\\\n    tag:'application-multi',\\\n    tag:'language-java',\\\n    tag:'platform-multi',\\\n    tag:'attack-rce',\\\n    tag:'OWASP_CRS',\\\n    tag:'capec/1000/152/248',\\\n    tag:'PCI/6.5.2',\\\n    tag:'paranoia-level/2',\\\n    ver:'OWASP_CRS/3.4.0-dev',\\\n    severity:'CRITICAL',\\\n    setvar:'tx.rce_score=+%{tx.critical_anomaly_score}',\\\n    setvar:'tx.anomaly_score_pl2=+%{tx.critical_anomaly_score}'\"\n",
        "paranoia_level": "2",
        "rule_id": "944",
        "sec_rule_id": "944260",
        "severity": "CRITICAL",
        "tags": [
            "application-multi",
            "language-java",
            "platform-multi",
            "attack-rce",
            "OWASP_CRS",
            "capec/1000/152/248",
            "PCI/6.5.2",
            "paranoia-level/2"
        ]
    },
    {
        "comment": "",
        "content": "SecRule TX:DETECTION_PARANOIA_LEVEL \"@lt 3\" \"id:944015,phase:1,pass,nolog,skipAfter:END-REQUEST-944-APPLICATION-ATTACK-JAVA\"\n",
        "rule_id": "944",
        "sec_rule_id": "944015"
    },
    {
        "comment": "",
        "content": "SecRule TX:DETECTION_PARANOIA_LEVEL \"@lt 3\" \"id:944016,phase:2,pass,nolog,skipAfter:END-REQUEST-944-APPLICATION-ATTACK-JAVA\"\n",
        "rule_id": "944",
        "sec_rule_id": "944016"
    },
    {
        "comment": "#\n# -= Paranoia Level 3 =- (apply only when tx.detection_paranoia_level is sufficiently high: 3 or higher)\n#\n# Interesting keywords for possibly RCE on vulnerable classes and methods base64 encoded\n# Keywords = ['runtime', 'processbuilder', 'clonetransformer', 'forclosure', 'instantiatefactory', 'instantiatetransformer', 'invokertransformer', 'prototypeclonefactory', 'prototypeserializationfactory', 'whileclosure']\n#for item in keywords:\n#   pad='\\x00'\n#   for padding in xrange(3):\n#     print base64.b64encode(''.join([pad*padding,item])).replace('=','')[padding:],\n#cnVudGltZQ HJ1bnRpbWU BydW50aW1l cHJvY2Vzc2J1aWxkZXI HByb2Nlc3NidWlsZGVy Bwcm9jZXNzYnVpbGRlcg Y2xvbmV0cmFuc2Zvcm1lcg GNsb25ldHJhbnNmb3JtZXI BjbG9uZXRyYW5zZm9ybWVy Zm9yY2xvc3VyZQ GZvcmNsb3N1cmU Bmb3JjbG9zdXJl aW5zdGFudGlhdGVmYWN0b3J5 Gluc3RhbnRpYXRlZmFjdG9yeQ BpbnN0YW50aWF0ZWZhY3Rvcnk aW5zdGFudGlhdGV0cmFuc2Zvcm1lcg Gluc3RhbnRpYXRldHJhbnNmb3JtZXI BpbnN0YW50aWF0ZXRyYW5zZm9ybWVy aW52b2tlcnRyYW5zZm9ybWVy Gludm9rZXJ0cmFuc2Zvcm1lcg BpbnZva2VydHJhbnNmb3JtZXI cHJvdG90eXBlY2xvbmVmYWN0b3J5 HByb3RvdHlwZWNsb25lZmFjdG9yeQ Bwcm90b3R5cGVjbG9uZWZhY3Rvcnk cHJvdG90eXBlc2VyaWFsaXphdGlvbmZhY3Rvcnk HByb3RvdHlwZXNlcmlhbGl6YXRpb25mYWN0b3J5 Bwcm90b3R5cGVzZXJpYWxpemF0aW9uZmFjdG9yeQ d2hpbGVjbG9zdXJl HdoaWxlY2xvc3VyZQ B3aGlsZWNsb3N1cmU\n",
        "content": "SecRule ARGS|ARGS_NAMES|REQUEST_COOKIES|!REQUEST_COOKIES:/__utm/|REQUEST_COOKIES_NAMES|REQUEST_BODY|REQUEST_HEADERS|XML:/*|XML://@* \\\n    \"@rx (?:cnVudGltZQ|HJ1bnRpbWU|BydW50aW1l|cHJvY2Vzc2J1aWxkZXI|HByb2Nlc3NidWlsZGVy|Bwcm9jZXNzYnVpbGRlcg|Y2xvbmV0cmFuc2Zvcm1lcg|GNsb25ldHJhbnNmb3JtZXI|BjbG9uZXRyYW5zZm9ybWVy|Zm9yY2xvc3VyZQ|GZvcmNsb3N1cmU|Bmb3JjbG9zdXJl|aW5zdGFudGlhdGVmYWN0b3J5|Gluc3RhbnRpYXRlZmFjdG9yeQ|BpbnN0YW50aWF0ZWZhY3Rvcnk|aW5zdGFudGlhdGV0cmFuc2Zvcm1lcg|Gluc3RhbnRpYXRldHJhbnNmb3JtZXI|BpbnN0YW50aWF0ZXRyYW5zZm9ybWVy|aW52b2tlcnRyYW5zZm9ybWVy|Gludm9rZXJ0cmFuc2Zvcm1lcg|BpbnZva2VydHJhbnNmb3JtZXI|cHJvdG90eXBlY2xvbmVmYWN0b3J5|HByb3RvdHlwZWNsb25lZmFjdG9yeQ|Bwcm90b3R5cGVjbG9uZWZhY3Rvcnk|cHJvdG90eXBlc2VyaWFsaXphdGlvbmZhY3Rvcnk|HByb3RvdHlwZXNlcmlhbGl6YXRpb25mYWN0b3J5|Bwcm90b3R5cGVzZXJpYWxpemF0aW9uZmFjdG9yeQ|d2hpbGVjbG9zdXJl|HdoaWxlY2xvc3VyZQ|B3aGlsZWNsb3N1cmU)\" \\\n    \"id:944300,\\\n    phase:2,\\\n    block,\\\n    t:none,\\\n    msg:'Base64 encoded string matched suspicious keyword',\\\n    logdata:'Matched Data: %{MATCHED_VAR} found within %{MATCHED_VAR_NAME}',\\\n    tag:'application-multi',\\\n    tag:'language-java',\\\n    tag:'platform-multi',\\\n    tag:'attack-rce',\\\n    tag:'OWASP_CRS',\\\n    tag:'capec/1000/152/248',\\\n    tag:'PCI/6.5.2',\\\n    tag:'paranoia-level/3',\\\n    ver:'OWASP_CRS/3.4.0-dev',\\\n    severity:'CRITICAL',\\\n    setvar:'tx.rce_score=+%{tx.critical_anomaly_score}',\\\n    setvar:'tx.inbound_anomaly_score_pl3=+%{tx.critical_anomaly_score}'\"\n",
        "paranoia_level": "3",
        "rule_id": "944",
        "sec_rule_id": "944300",
        "severity": "CRITICAL",
        "tags": [
            "application-multi",
            "language-java",
            "platform-multi",
            "attack-rce",
            "OWASP_CRS",
            "capec/1000/152/248",
            "PCI/6.5.2",
            "paranoia-level/3"
        ]
    },
    {
        "comment": "",
        "content": "SecRule TX:DETECTION_PARANOIA_LEVEL \"@lt 4\" \"id:944017,phase:1,pass,nolog,skipAfter:END-REQUEST-944-APPLICATION-ATTACK-JAVA\"\n",
        "rule_id": "944",
        "sec_rule_id": "944017"
    },
    {
        "comment": "",
        "content": "SecRule TX:DETECTION_PARANOIA_LEVEL \"@lt 4\" \"id:944018,phase:2,pass,nolog,skipAfter:END-REQUEST-944-APPLICATION-ATTACK-JAVA\"\n",
        "rule_id": "944",
        "sec_rule_id": "944018"
    },
    {
        "comment": "# This is a stricter sibling of 944150.\n# It simply checks for the existance of `${`, taking into account the same encoding evasions\n# as 944150.\n#\n# Regular expression generated from util/regexp-assemble/data/944152.data.\n# To update the regular expression run the following shell script\n# (consult util/regexp-assemble/README.md for details):\n#   util/regexp-assemble/regexp-assemble.py update 944152\n#\n",
        "content": "SecRule REQUEST_LINE|ARGS|ARGS_NAMES|REQUEST_COOKIES|REQUEST_COOKIES_NAMES|REQUEST_HEADERS|XML:/*|XML://@* \"@rx (?i)(?:\\$|&dollar;?)(?:\\{|&(?:lbrace|lcub);?)\" \\\n    \"id:944152,\\\n    phase:2,\\\n    block,\\\n    t:none,t:urlDecodeUni,t:jsDecode,t:htmlEntityDecode,\\\n    log,\\\n    msg:'Potential Remote Command Execution: Log4j / Log4shell',\\\n    tag:'application-multi',\\\n    tag:'language-java',\\\n    tag:'platform-multi',\\\n    tag:'attack-rce',\\\n    tag:'OWASP_CRS',\\\n    tag:'capec/1000/152/137/6',\\\n    tag:'PCI/6.5.2',\\\n    tag:'paranoia-level/4',\\\n    ver:'OWASP_CRS/3.4.0-dev',\\\n    severity:'CRITICAL',\\\n    setvar:'tx.rce_score=+%{tx.critical_anomaly_score}',\\\n    setvar:'tx.anomaly_score_pl4=+%{tx.critical_anomaly_score}'\"\n",
        "paranoia_level": "4",
        "rule_id": "944",
        "sec_rule_id": "944152",
        "severity": "CRITICAL",
        "tags": [
            "application-multi",
            "language-java",
            "platform-multi",
            "attack-rce",
            "OWASP_CRS",
            "capec/1000/152/137/6",
            "PCI/6.5.2",
            "paranoia-level/4"
        ]
    },
    {
        "comment": "# Summing up the blocking and detection anomaly scores in phase 1\n# even when early blocking is disabled, we need to sum up the scores in phase 1\n# this prevents bugs in phase 5 if Apache skips phases because of error handling\n# See: https://github.com/coreruleset/coreruleset/issues/2319#issuecomment-1047503932\n",
        "content": "SecRule TX:BLOCKING_PARANOIA_LEVEL \"@ge 1\" \\\n    \"id:949052,\\\n    phase:1,\\\n    pass,\\\n    t:none,\\\n    nolog,\\\n    setvar:'tx.blocking_inbound_anomaly_score=+%{tx.inbound_anomaly_score_pl1}'\"\n",
        "rule_id": "949",
        "sec_rule_id": "949052"
    },
    {
        "comment": "",
        "content": "SecRule TX:DETECTION_PARANOIA_LEVEL \"@ge 1\" \\\n    \"id:949152,\\\n    phase:1,\\\n    pass,\\\n    t:none,\\\n    nolog,\\\n    setvar:'tx.detection_inbound_anomaly_score=+%{tx.inbound_anomaly_score_pl1}'\"\n",
        "rule_id": "949",
        "sec_rule_id": "949152"
    },
    {
        "comment": "",
        "content": "SecRule TX:BLOCKING_PARANOIA_LEVEL \"@ge 2\" \\\n    \"id:949053,\\\n    phase:1,\\\n    pass,\\\n    t:none,\\\n    nolog,\\\n    setvar:'tx.blocking_inbound_anomaly_score=+%{tx.inbound_anomaly_score_pl2}'\"\n",
        "rule_id": "949",
        "sec_rule_id": "949053"
    },
    {
        "comment": "",
        "content": "SecRule TX:DETECTION_PARANOIA_LEVEL \"@ge 2\" \\\n    \"id:949153,\\\n    phase:1,\\\n    pass,\\\n    t:none,\\\n    nolog,\\\n    setvar:'tx.detection_inbound_anomaly_score=+%{tx.inbound_anomaly_score_pl2}'\"\n",
        "rule_id": "949",
        "sec_rule_id": "949153"
    },
    {
        "comment": "",
        "content": "SecRule TX:BLOCKING_PARANOIA_LEVEL \"@ge 3\" \\\n    \"id:949054,\\\n    phase:1,\\\n    pass,\\\n    t:none,\\\n    nolog,\\\n    setvar:'tx.blocking_inbound_anomaly_score=+%{tx.inbound_anomaly_score_pl3}'\"\n",
        "rule_id": "949",
        "sec_rule_id": "949054"
    },
    {
        "comment": "",
        "content": "SecRule TX:DETECTION_PARANOIA_LEVEL \"@ge 3\" \\\n    \"id:949154,\\\n    phase:1,\\\n    pass,\\\n    t:none,\\\n    nolog,\\\n    setvar:'tx.detection_inbound_anomaly_score=+%{tx.inbound_anomaly_score_pl3}'\"\n",
        "rule_id": "949",
        "sec_rule_id": "949154"
    },
    {
        "comment": "",
        "content": "SecRule TX:BLOCKING_PARANOIA_LEVEL \"@ge 4\" \\\n    \"id:949055,\\\n    phase:1,\\\n    pass,\\\n    t:none,\\\n    nolog,\\\n    setvar:'tx.blocking_inbound_anomaly_score=+%{tx.inbound_anomaly_score_pl4}'\"\n",
        "rule_id": "949",
        "sec_rule_id": "949055"
    },
    {
        "comment": "",
        "content": "SecRule TX:DETECTION_PARANOIA_LEVEL \"@ge 4\" \\\n    \"id:949155,\\\n    phase:1,\\\n    pass,\\\n    t:none,\\\n    nolog,\\\n    setvar:'tx.detection_inbound_anomaly_score=+%{tx.inbound_anomaly_score_pl4}'\"\n",
        "rule_id": "949",
        "sec_rule_id": "949155"
    },
    {
        "comment": "# at start of phase 2, we reset the aggregate scores to 0 to prevent duplicate counting of per-PL scores\n# this is necessary because the per-PL scores are counted across phases\n",
        "content": "SecAction \"id:949059,\\\n    phase:2,\\\n    pass,\\\n    t:none,\\\n    nolog,\\\n    setvar:'tx.blocking_inbound_anomaly_score=0'\"\n",
        "rule_id": "949",
        "sec_rule_id": "949059"
    },
    {
        "comment": "",
        "content": "SecAction \"id:949159,\\\n    phase:2,\\\n    pass,\\\n    t:none,\\\n    nolog,\\\n    setvar:'tx.detection_inbound_anomaly_score=0'\"\n",
        "rule_id": "949",
        "sec_rule_id": "949159"
    },
    {
        "comment": "# Summing up the blocking and detection anomaly scores in phase 2\n",
        "content": "SecRule TX:BLOCKING_PARANOIA_LEVEL \"@ge 1\" \\\n    \"id:949060,\\\n    phase:2,\\\n    pass,\\\n    t:none,\\\n    nolog,\\\n    setvar:'tx.blocking_inbound_anomaly_score=+%{tx.inbound_anomaly_score_pl1}'\"\n",
        "rule_id": "949",
        "sec_rule_id": "949060"
    },
    {
        "comment": "",
        "content": "SecRule TX:DETECTION_PARANOIA_LEVEL \"@ge 1\" \\\n    \"id:949160,\\\n    phase:2,\\\n    pass,\\\n    t:none,\\\n    nolog,\\\n    setvar:'tx.detection_inbound_anomaly_score=+%{tx.inbound_anomaly_score_pl1}'\"\n",
        "rule_id": "949",
        "sec_rule_id": "949160"
    },
    {
        "comment": "",
        "content": "SecRule TX:BLOCKING_PARANOIA_LEVEL \"@ge 2\" \\\n    \"id:949061,\\\n    phase:2,\\\n    pass,\\\n    t:none,\\\n    nolog,\\\n    setvar:'tx.blocking_inbound_anomaly_score=+%{tx.inbound_anomaly_score_pl2}'\"\n",
        "rule_id": "949",
        "sec_rule_id": "949061"
    },
    {
        "comment": "",
        "content": "SecRule TX:DETECTION_PARANOIA_LEVEL \"@ge 2\" \\\n    \"id:949161,\\\n    phase:2,\\\n    pass,\\\n    t:none,\\\n    nolog,\\\n    setvar:'tx.detection_inbound_anomaly_score=+%{tx.inbound_anomaly_score_pl2}'\"\n",
        "rule_id": "949",
        "sec_rule_id": "949161"
    },
    {
        "comment": "",
        "content": "SecRule TX:BLOCKING_PARANOIA_LEVEL \"@ge 3\" \\\n    \"id:949062,\\\n    phase:2,\\\n    pass,\\\n    t:none,\\\n    nolog,\\\n    setvar:'tx.blocking_inbound_anomaly_score=+%{tx.inbound_anomaly_score_pl3}'\"\n",
        "rule_id": "949",
        "sec_rule_id": "949062"
    },
    {
        "comment": "",
        "content": "SecRule TX:DETECTION_PARANOIA_LEVEL \"@ge 3\" \\\n    \"id:949162,\\\n    phase:2,\\\n    pass,\\\n    t:none,\\\n    nolog,\\\n    setvar:'tx.detection_inbound_anomaly_score=+%{tx.inbound_anomaly_score_pl3}'\"\n",
        "rule_id": "949",
        "sec_rule_id": "949162"
    },
    {
        "comment": "",
        "content": "SecRule TX:BLOCKING_PARANOIA_LEVEL \"@ge 4\" \\\n    \"id:949063,\\\n    phase:2,\\\n    pass,\\\n    t:none,\\\n    nolog,\\\n    setvar:'tx.blocking_inbound_anomaly_score=+%{tx.inbound_anomaly_score_pl4}'\"\n",
        "rule_id": "949",
        "sec_rule_id": "949063"
    },
    {
        "comment": "",
        "content": "SecRule TX:DETECTION_PARANOIA_LEVEL \"@ge 4\" \\\n    \"id:949163,\\\n    phase:2,\\\n    pass,\\\n    t:none,\\\n    nolog,\\\n    setvar:'tx.detection_inbound_anomaly_score=+%{tx.inbound_anomaly_score_pl4}'\"\n",
        "rule_id": "949",
        "sec_rule_id": "949163"
    },
    {
        "comment": "# if early blocking is active, check threshold in phase 1\n",
        "content": "SecRule TX:BLOCKING_INBOUND_ANOMALY_SCORE \"@ge %{tx.inbound_anomaly_score_threshold}\" \\\n    \"id:949111,\\\n    phase:1,\\\n    deny,\\\n    t:none,\\\n    msg:'Inbound Anomaly Score Exceeded in phase 1 (Total Score: %{TX.BLOCKING_INBOUND_ANOMALY_SCORE})',\\\n    tag:'anomaly-evaluation',\\\n    ver:'OWASP_CRS/3.4.0-dev',\\\n    chain\"\n    SecRule TX:EARLY_BLOCKING \"@eq 1\"\n",
        "rule_id": "949",
        "sec_rule_id": "949111",
        "tags": [
            "anomaly-evaluation"
        ]
    },
    {
        "comment": "# always check threshold in phase 2\n",
        "content": "SecRule TX:BLOCKING_INBOUND_ANOMALY_SCORE \"@ge %{tx.inbound_anomaly_score_threshold}\" \\\n    \"id:949110,\\\n    phase:2,\\\n    deny,\\\n    t:none,\\\n    msg:'Inbound Anomaly Score Exceeded (Total Score: %{TX.BLOCKING_INBOUND_ANOMALY_SCORE})',\\\n    tag:'anomaly-evaluation',\\\n    ver:'OWASP_CRS/3.4.0-dev'\"\n",
        "description": "Check of inbound anomaly score",
        "rule_id": "949",
        "sec_rule_id": "949110",
        "tags": [
            "anomaly-evaluation"
        ]
    },
    {
        "comment": "",
        "content": "SecRule TX:DETECTION_PARANOIA_LEVEL \"@lt 1\" \"id:949011,phase:1,pass,nolog,skipAfter:END-REQUEST-949-BLOCKING-EVALUATION\"\n",
        "rule_id": "949",
        "sec_rule_id": "949011"
    },
    {
        "comment": "",
        "content": "SecRule TX:DETECTION_PARANOIA_LEVEL \"@lt 1\" \"id:949012,phase:2,pass,nolog,skipAfter:END-REQUEST-949-BLOCKING-EVALUATION\"\n",
        "rule_id": "949",
        "sec_rule_id": "949012"
    },
    {
        "comment": "#\n# -= Paranoia Level 1 (default) =- (apply only when tx.detection_paranoia_level is sufficiently high: 1 or higher)\n#\n",
        "content": "SecRule TX:DETECTION_PARANOIA_LEVEL \"@lt 2\" \"id:949013,phase:1,pass,nolog,skipAfter:END-REQUEST-949-BLOCKING-EVALUATION\"\n",
        "rule_id": "949",
        "sec_rule_id": "949013"
    },
    {
        "comment": "",
        "content": "SecRule TX:DETECTION_PARANOIA_LEVEL \"@lt 2\" \"id:949014,phase:2,pass,nolog,skipAfter:END-REQUEST-949-BLOCKING-EVALUATION\"\n",
        "rule_id": "949",
        "sec_rule_id": "949014"
    },
    {
        "comment": "#\n# -= Paranoia Level 2 =- (apply only when tx.detection_paranoia_level is sufficiently high: 2 or higher)\n#\n",
        "content": "SecRule TX:DETECTION_PARANOIA_LEVEL \"@lt 3\" \"id:949015,phase:1,pass,nolog,skipAfter:END-REQUEST-949-BLOCKING-EVALUATION\"\n",
        "rule_id": "949",
        "sec_rule_id": "949015"
    },
    {
        "comment": "",
        "content": "SecRule TX:DETECTION_PARANOIA_LEVEL \"@lt 3\" \"id:949016,phase:2,pass,nolog,skipAfter:END-REQUEST-949-BLOCKING-EVALUATION\"\n",
        "rule_id": "949",
        "sec_rule_id": "949016"
    },
    {
        "comment": "#\n# -= Paranoia Level 3 =- (apply only when tx.detection_paranoia_level is sufficiently high: 3 or higher)\n#\n",
        "content": "SecRule TX:DETECTION_PARANOIA_LEVEL \"@lt 4\" \"id:949017,phase:1,pass,nolog,skipAfter:END-REQUEST-949-BLOCKING-EVALUATION\"\n",
        "rule_id": "949",
        "sec_rule_id": "949017"
    },
    {
        "comment": "",
        "content": "SecRule TX:DETECTION_PARANOIA_LEVEL \"@lt 4\" \"id:949018,phase:2,pass,nolog,skipAfter:END-REQUEST-949-BLOCKING-EVALUATION\"\n",
        "rule_id": "949",
        "sec_rule_id": "949018"
    },
    {
        "comment": "#\n# -= Paranoia Level 0 (empty) =- (apply unconditionally)\n#\n",
        "content": "SecRule TX:DETECTION_PARANOIA_LEVEL \"@lt 1\" \"id:950020,phase:3,pass,nolog,skipAfter:END-RESPONSE-950-DATA-LEAKAGES\"\n",
        "rule_id": "950",
        "sec_rule_id": "950020"
    },
    {
        "comment": "",
        "content": "SecRule TX:DETECTION_PARANOIA_LEVEL \"@lt 1\" \"id:950021,phase:4,pass,nolog,skipAfter:END-RESPONSE-950-DATA-LEAKAGES\"\n",
        "rule_id": "950",
        "sec_rule_id": "950021"
    },
    {
        "comment": "#\n# -=[ Directory Listing ]=-\n#\n",
        "content": "SecRule RESPONSE_BODY \"@rx (?:<(?:TITLE>Index of.*?<H|title>Index of.*?<h)1>Index of|>\\[To Parent Directory\\]</[Aa]><br>)\" \\\n    \"id:950130,\\\n    phase:4,\\\n    block,\\\n    capture,\\\n    t:none,\\\n    msg:'Directory Listing',\\\n    logdata:'Matched Data: %{TX.0} found within %{MATCHED_VAR_NAME}',\\\n    tag:'application-multi',\\\n    tag:'language-multi',\\\n    tag:'platform-multi',\\\n    tag:'attack-disclosure',\\\n    tag:'paranoia-level/1',\\\n    tag:'OWASP_CRS',\\\n    tag:'capec/1000/118/116/54/127',\\\n    tag:'PCI/6.5.6',\\\n    ctl:auditLogParts=+E,\\\n    ver:'OWASP_CRS/3.4.0-dev',\\\n    severity:'ERROR',\\\n    setvar:'tx.outbound_anomaly_score_pl1=+%{tx.error_anomaly_score}'\"\n",
        "description": "Directory Listing",
        "paranoia_level": "1",
        "rule_id": "950",
        "sec_rule_id": "950130",
        "severity": "ERROR",
        "tags": [
            "application-multi",
            "language-multi",
            "platform-multi",
            "attack-disclosure",
            "paranoia-level/1",
            "OWASP_CRS",
            "capec/1000/118/116/54/127",
            "PCI/6.5.6"
        ]
    },
    {
        "comment": "#\n# -=[ CGI Source Code Leakage ]=-\n#\n# A CGI script begins normally with #! and the interpreter,\n# for example:\n#\n# #!/usr/bin/perl\n# #!/usr/bin/python\n# #!/usr/bin/ruby\n#\n# If the CGI script processors or MIME type handlers are misconfigured,\n# the script's source code could be erroneously returned to the client.\n",
        "content": "SecRule RESPONSE_BODY \"@rx ^#\\!\\s?/\" \\\n    \"id:950140,\\\n    phase:4,\\\n    block,\\\n    capture,\\\n    t:none,\\\n    msg:'CGI source code leakage',\\\n    logdata:'Matched Data: %{TX.0} found within %{MATCHED_VAR_NAME}',\\\n    tag:'application-multi',\\\n    tag:'language-multi',\\\n    tag:'platform-multi',\\\n    tag:'attack-disclosure',\\\n    tag:'paranoia-level/1',\\\n    tag:'OWASP_CRS',\\\n    tag:'capec/1000/118/116',\\\n    tag:'PCI/6.5.6',\\\n    ctl:auditLogParts=+E,\\\n    ver:'OWASP_CRS/3.4.0-dev',\\\n    severity:'ERROR',\\\n    setvar:'tx.outbound_anomaly_score_pl1=+%{tx.error_anomaly_score}'\"\n",
        "paranoia_level": "1",
        "rule_id": "950",
        "sec_rule_id": "950140",
        "severity": "ERROR",
        "tags": [
            "application-multi",
            "language-multi",
            "platform-multi",
            "attack-disclosure",
            "paranoia-level/1",
            "OWASP_CRS",
            "capec/1000/118/116",
            "PCI/6.5.6"
        ]
    },
    {
        "comment": "",
        "content": "SecRule TX:DETECTION_PARANOIA_LEVEL \"@lt 2\" \"id:950013,phase:3,pass,nolog,skipAfter:END-RESPONSE-950-DATA-LEAKAGES\"\n",
        "rule_id": "950",
        "sec_rule_id": "950013"
    },
    {
        "comment": "",
        "content": "SecRule TX:DETECTION_PARANOIA_LEVEL \"@lt 2\" \"id:950014,phase:4,pass,nolog,skipAfter:END-RESPONSE-950-DATA-LEAKAGES\"\n",
        "rule_id": "950",
        "sec_rule_id": "950014"
    },
    {
        "comment": "#\n# -=[ The application is not available - 5xx level status code ]=-\n#\n",
        "content": "SecRule RESPONSE_STATUS \"@rx ^5\\d{2}$\" \\\n    \"id:950100,\\\n    phase:3,\\\n    block,\\\n    capture,\\\n    t:none,\\\n    msg:'The Application Returned a 500-Level Status Code',\\\n    logdata:'Matched Data: %{TX.0} found within %{MATCHED_VAR_NAME}',\\\n    tag:'application-multi',\\\n    tag:'language-multi',\\\n    tag:'platform-multi',\\\n    tag:'attack-disclosure',\\\n    tag:'PCI/6.5.6',\\\n    tag:'paranoia-level/2',\\\n    tag:'OWASP_CRS',\\\n    tag:'capec/1000/152',\\\n    ctl:auditLogParts=+E,\\\n    ver:'OWASP_CRS/3.4.0-dev',\\\n    severity:'ERROR',\\\n    setvar:'tx.outbound_anomaly_score_pl2=+%{tx.error_anomaly_score}'\"\n",
        "description": "The Application Returned a 500-Level Status Code",
        "paranoia_level": "2",
        "rule_id": "950",
        "sec_rule_id": "950100",
        "severity": "ERROR",
        "tags": [
            "application-multi",
            "language-multi",
            "platform-multi",
            "attack-disclosure",
            "PCI/6.5.6",
            "paranoia-level/2",
            "OWASP_CRS",
            "capec/1000/152"
        ]
    },
    {
        "comment": "",
        "content": "SecRule TX:DETECTION_PARANOIA_LEVEL \"@lt 3\" \"id:950015,phase:3,pass,nolog,skipAfter:END-RESPONSE-950-DATA-LEAKAGES\"\n",
        "rule_id": "950",
        "sec_rule_id": "950015"
    },
    {
        "comment": "",
        "content": "SecRule TX:DETECTION_PARANOIA_LEVEL \"@lt 3\" \"id:950016,phase:4,pass,nolog,skipAfter:END-RESPONSE-950-DATA-LEAKAGES\"\n",
        "rule_id": "950",
        "sec_rule_id": "950016"
    },
    {
        "comment": "#\n# -= Paranoia Level 3 =- (apply only when tx.detection_paranoia_level is sufficiently high: 3 or higher)\n#\n",
        "content": "SecRule TX:DETECTION_PARANOIA_LEVEL \"@lt 4\" \"id:950017,phase:3,pass,nolog,skipAfter:END-RESPONSE-950-DATA-LEAKAGES\"\n",
        "rule_id": "950",
        "sec_rule_id": "950017"
    },
    {
        "comment": "",
        "content": "SecRule TX:DETECTION_PARANOIA_LEVEL \"@lt 4\" \"id:950022,phase:4,pass,nolog,skipAfter:END-RESPONSE-950-DATA-LEAKAGES\"\n",
        "rule_id": "950",
        "sec_rule_id": "950022"
    },
    {
        "comment": "#\n# -= Paranoia Level 0 (empty) =- (apply unconditionally)\n#\n",
        "content": "SecRule TX:DETECTION_PARANOIA_LEVEL \"@lt 1\" \"id:951011,phase:3,pass,nolog,skipAfter:END-RESPONSE-951-DATA-LEAKAGES-SQL\"\n",
        "rule_id": "951",
        "sec_rule_id": "951011"
    },
    {
        "comment": "",
        "content": "SecRule TX:DETECTION_PARANOIA_LEVEL \"@lt 1\" \"id:951012,phase:4,pass,nolog,skipAfter:END-RESPONSE-951-DATA-LEAKAGES-SQL\"\n",
        "rule_id": "951",
        "sec_rule_id": "951012"
    },
    {
        "comment": "#\n# -=[ SQL Error Leakages ]=-\n#\n# Ref: https://raw.github.com/sqlmapproject/sqlmap/master/xml/errors.xml\n# Ref: https://github.com/Arachni/arachni/tree/master/components/checks/active/sql_injection/regexps\n#\n",
        "content": "SecRule RESPONSE_BODY \"@pmFromFile sql-errors.data\" \\\n    \"id:951100,\\\n    phase:4,\\\n    pass,\\\n    t:none,\\\n    nolog,\\\n    tag:'application-multi',\\\n    tag:'language-multi',\\\n    tag:'platform-multi',\\\n    tag:'attack-disclosure',\\\n    tag:'paranoia-level/1',\\\n    tag:'OWASP_CRS',\\\n    tag:'capec/1000/118/116/54',\\\n    ver:'OWASP_CRS/3.4.0-dev',\\\n    setvar:'tx.sql_error_match=1'\"\n",
        "paranoia_level": "1",
        "rule_id": "951",
        "sec_rule_id": "951100",
        "tags": [
            "application-multi",
            "language-multi",
            "platform-multi",
            "attack-disclosure",
            "paranoia-level/1",
            "OWASP_CRS",
            "capec/1000/118/116/54"
        ]
    },
    {
        "comment": "",
        "content": "SecRule TX:sql_error_match \"@eq 1\" \\\n    \"id:951110,\\\n    phase:4,\\\n    block,\\\n    capture,\\\n    t:none,\\\n    msg:'Microsoft Access SQL Information Leakage',\\\n    logdata:'Matched Data: %{TX.0} found within %{MATCHED_VAR_NAME}',\\\n    tag:'application-multi',\\\n    tag:'language-multi',\\\n    tag:'platform-msaccess',\\\n    tag:'attack-disclosure',\\\n    tag:'paranoia-level/1',\\\n    tag:'OWASP_CRS',\\\n    tag:'capec/1000/118/116/54',\\\n    ctl:auditLogParts=+E,\\\n    ver:'OWASP_CRS/3.4.0-dev',\\\n    severity:'CRITICAL',\\\n    chain\"\n    SecRule RESPONSE_BODY \"@rx (?i:JET Database Engine|Access Database Engine|\\[Microsoft\\]\\[ODBC Microsoft Access Driver\\])\" \\\n        \"capture,\\\n        setvar:'tx.outbound_anomaly_score_pl1=+%{tx.critical_anomaly_score}',\\\n        setvar:'tx.sql_injection_score=+%{tx.critical_anomaly_score}'\"\n",
        "description": "Microsoft Access SQL Information Leakage",
        "paranoia_level": "1",
        "rule_id": "951",
        "sec_rule_id": "951110",
        "severity": "CRITICAL",
        "tags": [
            "application-multi",
            "language-multi",
            "platform-msaccess",
            "attack-disclosure",
            "paranoia-level/1",
            "OWASP_CRS",
            "capec/1000/118/116/54"
        ]
    },
    {
        "comment": "",
        "content": "SecRule TX:sql_error_match \"@eq 1\" \\\n    \"id:951120,\\\n    phase:4,\\\n    block,\\\n    capture,\\\n    t:none,\\\n    msg:'Oracle SQL Information Leakage',\\\n    logdata:'Matched Data: %{TX.0} found within %{MATCHED_VAR_NAME}',\\\n    tag:'application-multi',\\\n    tag:'language-multi',\\\n    tag:'platform-oracle',\\\n    tag:'attack-disclosure',\\\n    tag:'paranoia-level/1',\\\n    tag:'OWASP_CRS',\\\n    tag:'capec/1000/118/116/54',\\\n    ctl:auditLogParts=+E,\\\n    ver:'OWASP_CRS/3.4.0-dev',\\\n    severity:'CRITICAL',\\\n    chain\"\n    SecRule RESPONSE_BODY \"@rx (?i:ORA-[0-9][0-9][0-9][0-9]|java\\.sql\\.SQLException|Oracle error|Oracle.*Driver|Warning.*oci_.*|Warning.*ora_.*)\" \\\n        \"capture,\\\n        setvar:'tx.outbound_anomaly_score_pl1=+%{tx.critical_anomaly_score}',\\\n        setvar:'tx.sql_injection_score=+%{tx.critical_anomaly_score}'\"\n",
        "description": "Oracle SQL Information Leakage",
        "paranoia_level": "1",
        "rule_id": "951",
        "sec_rule_id": "951120",
        "severity": "CRITICAL",
        "tags": [
            "application-multi",
            "language-multi",
            "platform-oracle",
            "attack-disclosure",
            "paranoia-level/1",
            "OWASP_CRS",
            "capec/1000/118/116/54"
        ]
    },
    {
        "comment": "",
        "content": "SecRule TX:sql_error_match \"@eq 1\" \\\n    \"id:951130,\\\n    phase:4,\\\n    block,\\\n    capture,\\\n    t:none,\\\n    msg:'DB2 SQL Information Leakage',\\\n    logdata:'Matched Data: %{TX.0} found within %{MATCHED_VAR_NAME}',\\\n    tag:'application-multi',\\\n    tag:'language-multi',\\\n    tag:'platform-db2',\\\n    tag:'attack-disclosure',\\\n    tag:'paranoia-level/1',\\\n    tag:'OWASP_CRS',\\\n    tag:'capec/1000/118/116/54',\\\n    ctl:auditLogParts=+E,\\\n    ver:'OWASP_CRS/3.4.0-dev',\\\n    severity:'CRITICAL',\\\n    chain\"\n    SecRule RESPONSE_BODY \"@rx (?i:DB2 SQL error:|\\[IBM\\]\\[CLI Driver\\]\\[DB2/6000\\]|CLI Driver.*DB2|DB2 SQL error|db2_\\w+\\()\" \\\n        \"capture,\\\n        setvar:'tx.outbound_anomaly_score_pl1=+%{tx.critical_anomaly_score}',\\\n        setvar:'tx.sql_injection_score=+%{tx.critical_anomaly_score}'\"\n",
        "description": "DB2 SQL Information Leakage",
        "paranoia_level": "1",
        "rule_id": "951",
        "sec_rule_id": "951130",
        "severity": "CRITICAL",
        "tags": [
            "application-multi",
            "language-multi",
            "platform-db2",
            "attack-disclosure",
            "paranoia-level/1",
            "OWASP_CRS",
            "capec/1000/118/116/54"
        ]
    },
    {
        "comment": "",
        "content": "SecRule TX:sql_error_match \"@eq 1\" \\\n    \"id:951140,\\\n    phase:4,\\\n    block,\\\n    capture,\\\n    t:none,\\\n    msg:'EMC SQL Information Leakage',\\\n    logdata:'Matched Data: %{TX.0} found within %{MATCHED_VAR_NAME}',\\\n    tag:'application-multi',\\\n    tag:'language-multi',\\\n    tag:'platform-emc',\\\n    tag:'attack-disclosure',\\\n    tag:'paranoia-level/1',\\\n    tag:'OWASP_CRS',\\\n    tag:'capec/1000/118/116/54',\\\n    ctl:auditLogParts=+E,\\\n    ver:'OWASP_CRS/3.4.0-dev',\\\n    severity:'CRITICAL',\\\n    chain\"\n    SecRule RESPONSE_BODY \"@rx (?i:\\[DM_QUERY_E_SYNTAX\\]|has occurred in the vicinity of:)\" \\\n        \"capture,\\\n        setvar:'tx.outbound_anomaly_score_pl1=+%{tx.critical_anomaly_score}',\\\n        setvar:'tx.sql_injection_score=+%{tx.critical_anomaly_score}'\"\n",
        "description": "EMC SQL Information Leakage",
        "paranoia_level": "1",
        "rule_id": "951",
        "sec_rule_id": "951140",
        "severity": "CRITICAL",
        "tags": [
            "application-multi",
            "language-multi",
            "platform-emc",
            "attack-disclosure",
            "paranoia-level/1",
            "OWASP_CRS",
            "capec/1000/118/116/54"
        ]
    },
    {
        "comment": "",
        "content": "SecRule TX:sql_error_match \"@eq 1\" \\\n    \"id:951150,\\\n    phase:4,\\\n    block,\\\n    capture,\\\n    t:none,\\\n    msg:'firebird SQL Information Leakage',\\\n    logdata:'Matched Data: %{TX.0} found within %{MATCHED_VAR_NAME}',\\\n    tag:'application-multi',\\\n    tag:'language-multi',\\\n    tag:'platform-firebird',\\\n    tag:'attack-disclosure',\\\n    tag:'paranoia-level/1',\\\n    tag:'OWASP_CRS',\\\n    tag:'capec/1000/118/116/54',\\\n    ctl:auditLogParts=+E,\\\n    ver:'OWASP_CRS/3.4.0-dev',\\\n    severity:'CRITICAL',\\\n    chain\"\n    SecRule RESPONSE_BODY \"@rx (?i)Dynamic SQL Error\" \\\n        \"capture,\\\n        setvar:'tx.outbound_anomaly_score_pl1=+%{tx.critical_anomaly_score}',\\\n        setvar:'tx.sql_injection_score=+%{tx.critical_anomaly_score}'\"\n",
        "description": "firebird SQL Information Leakage",
        "paranoia_level": "1",
        "rule_id": "951",
        "sec_rule_id": "951150",
        "severity": "CRITICAL",
        "tags": [
            "application-multi",
            "language-multi",
            "platform-firebird",
            "attack-disclosure",
            "paranoia-level/1",
            "OWASP_CRS",
            "capec/1000/118/116/54"
        ]
    },
    {
        "comment": "",
        "content": "SecRule TX:sql_error_match \"@eq 1\" \\\n    \"id:951160,\\\n    phase:4,\\\n    block,\\\n    capture,\\\n    t:none,\\\n    msg:'Frontbase SQL Information Leakage',\\\n    logdata:'Matched Data: %{TX.0} found within %{MATCHED_VAR_NAME}',\\\n    tag:'application-multi',\\\n    tag:'language-multi',\\\n    tag:'platform-frontbase',\\\n    tag:'attack-disclosure',\\\n    tag:'paranoia-level/1',\\\n    tag:'OWASP_CRS',\\\n    tag:'capec/1000/118/116/54',\\\n    ctl:auditLogParts=+E,\\\n    ver:'OWASP_CRS/3.4.0-dev',\\\n    severity:'CRITICAL',\\\n    chain\"\n    SecRule RESPONSE_BODY \"@rx (?i)Exception (?:condition )?\\d+\\. Transaction rollback\\.\" \\\n        \"capture,\\\n        setvar:'tx.outbound_anomaly_score_pl1=+%{tx.critical_anomaly_score}',\\\n        setvar:'tx.sql_injection_score=+%{tx.critical_anomaly_score}'\"\n",
        "description": "Frontbase SQL Information Leakage",
        "paranoia_level": "1",
        "rule_id": "951",
        "sec_rule_id": "951160",
        "severity": "CRITICAL",
        "tags": [
            "application-multi",
            "language-multi",
            "platform-frontbase",
            "attack-disclosure",
            "paranoia-level/1",
            "OWASP_CRS",
            "capec/1000/118/116/54"
        ]
    },
    {
        "comment": "",
        "content": "SecRule TX:sql_error_match \"@eq 1\" \\\n    \"id:951170,\\\n    phase:4,\\\n    block,\\\n    capture,\\\n    t:none,\\\n    msg:'hsqldb SQL Information Leakage',\\\n    logdata:'Matched Data: %{TX.0} found within %{MATCHED_VAR_NAME}',\\\n    tag:'application-multi',\\\n    tag:'language-multi',\\\n    tag:'platform-hsqldb',\\\n    tag:'attack-disclosure',\\\n    tag:'paranoia-level/1',\\\n    tag:'OWASP_CRS',\\\n    tag:'capec/1000/118/116/54',\\\n    ctl:auditLogParts=+E,\\\n    ver:'OWASP_CRS/3.4.0-dev',\\\n    severity:'CRITICAL',\\\n    chain\"\n    SecRule RESPONSE_BODY \"@rx (?i)org\\.hsqldb\\.jdbc\" \\\n        \"capture,\\\n        setvar:'tx.outbound_anomaly_score_pl1=+%{tx.critical_anomaly_score}',\\\n        setvar:'tx.sql_injection_score=+%{tx.critical_anomaly_score}'\"\n",
        "description": "hsqldb SQL Information Leakage",
        "paranoia_level": "1",
        "rule_id": "951",
        "sec_rule_id": "951170",
        "severity": "CRITICAL",
        "tags": [
            "application-multi",
            "language-multi",
            "platform-hsqldb",
            "attack-disclosure",
            "paranoia-level/1",
            "OWASP_CRS",
            "capec/1000/118/116/54"
        ]
    },
    {
        "comment": "",
        "content": "SecRule TX:sql_error_match \"@eq 1\" \\\n    \"id:951180,\\\n    phase:4,\\\n    block,\\\n    capture,\\\n    t:none,\\\n    msg:'informix SQL Information Leakage',\\\n    logdata:'Matched Data: %{TX.0} found within %{MATCHED_VAR_NAME}',\\\n    tag:'application-multi',\\\n    tag:'language-multi',\\\n    tag:'platform-informix',\\\n    tag:'attack-disclosure',\\\n    tag:'paranoia-level/1',\\\n    tag:'OWASP_CRS',\\\n    tag:'capec/1000/118/116/54',\\\n    ctl:auditLogParts=+E,\\\n    ver:'OWASP_CRS/3.4.0-dev',\\\n    severity:'CRITICAL',\\\n    chain\"\n    SecRule RESPONSE_BODY \"@rx (?i:An illegal character has been found in the statement|com\\.informix\\.jdbc|Exception.*Informix)\" \\\n        \"capture,\\\n        setvar:'tx.outbound_anomaly_score_pl1=+%{tx.critical_anomaly_score}',\\\n        setvar:'tx.sql_injection_score=+%{tx.critical_anomaly_score}'\"\n",
        "description": "informix SQL Information Leakage",
        "paranoia_level": "1",
        "rule_id": "951",
        "sec_rule_id": "951180",
        "severity": "CRITICAL",
        "tags": [
            "application-multi",
            "language-multi",
            "platform-informix",
            "attack-disclosure",
            "paranoia-level/1",
            "OWASP_CRS",
            "capec/1000/118/116/54"
        ]
    },
    {
        "comment": "",
        "content": "SecRule TX:sql_error_match \"@eq 1\" \\\n    \"id:951190,\\\n    phase:4,\\\n    block,\\\n    capture,\\\n    t:none,\\\n    msg:'ingres SQL Information Leakage',\\\n    logdata:'Matched Data: %{TX.0} found within %{MATCHED_VAR_NAME}',\\\n    tag:'application-multi',\\\n    tag:'language-multi',\\\n    tag:'platform-ingres',\\\n    tag:'attack-disclosure',\\\n    tag:'paranoia-level/1',\\\n    tag:'OWASP_CRS',\\\n    tag:'capec/1000/118/116/54',\\\n    ctl:auditLogParts=+E,\\\n    ver:'OWASP_CRS/3.4.0-dev',\\\n    severity:'CRITICAL',\\\n    chain\"\n    SecRule RESPONSE_BODY \"@rx (?i:Warning.*ingres_|Ingres SQLSTATE|Ingres\\W.*Driver)\" \\\n        \"capture,\\\n        setvar:'tx.outbound_anomaly_score_pl1=+%{tx.critical_anomaly_score}',\\\n        setvar:'tx.sql_injection_score=+%{tx.critical_anomaly_score}'\"\n",
        "description": "ingres SQL Information Leakage",
        "paranoia_level": "1",
        "rule_id": "951",
        "sec_rule_id": "951190",
        "severity": "CRITICAL",
        "tags": [
            "application-multi",
            "language-multi",
            "platform-ingres",
            "attack-disclosure",
            "paranoia-level/1",
            "OWASP_CRS",
            "capec/1000/118/116/54"
        ]
    },
    {
        "comment": "",
        "content": "SecRule TX:sql_error_match \"@eq 1\" \\\n    \"id:951200,\\\n    phase:4,\\\n    block,\\\n    capture,\\\n    t:none,\\\n    msg:'interbase SQL Information Leakage',\\\n    logdata:'Matched Data: %{TX.0} found within %{MATCHED_VAR_NAME}',\\\n    tag:'application-multi',\\\n    tag:'language-multi',\\\n    tag:'platform-interbase',\\\n    tag:'attack-disclosure',\\\n    tag:'paranoia-level/1',\\\n    tag:'OWASP_CRS',\\\n    tag:'capec/1000/118/116/54',\\\n    ctl:auditLogParts=+E,\\\n    ver:'OWASP_CRS/3.4.0-dev',\\\n    severity:'CRITICAL',\\\n    chain\"\n    SecRule RESPONSE_BODY \"@rx (?i:<b>Warning</b>: ibase_|Unexpected end of command in statement)\" \\\n        \"capture,\\\n        setvar:'tx.outbound_anomaly_score_pl1=+%{tx.critical_anomaly_score}',\\\n        setvar:'tx.sql_injection_score=+%{tx.critical_anomaly_score}'\"\n",
        "description": "interbase SQL Information Leakage",
        "paranoia_level": "1",
        "rule_id": "951",
        "sec_rule_id": "951200",
        "severity": "CRITICAL",
        "tags": [
            "application-multi",
            "language-multi",
            "platform-interbase",
            "attack-disclosure",
            "paranoia-level/1",
            "OWASP_CRS",
            "capec/1000/118/116/54"
        ]
    },
    {
        "comment": "",
        "content": "SecRule TX:sql_error_match \"@eq 1\" \\\n    \"id:951210,\\\n    phase:4,\\\n    block,\\\n    capture,\\\n    t:none,\\\n    msg:'maxDB SQL Information Leakage',\\\n    logdata:'Matched Data: %{TX.0} found within %{MATCHED_VAR_NAME}',\\\n    tag:'application-multi',\\\n    tag:'language-multi',\\\n    tag:'platform-maxdb',\\\n    tag:'attack-disclosure',\\\n    tag:'paranoia-level/1',\\\n    tag:'OWASP_CRS',\\\n    tag:'capec/1000/118/116/54',\\\n    ctl:auditLogParts=+E,\\\n    ver:'OWASP_CRS/3.4.0-dev',\\\n    severity:'CRITICAL',\\\n    chain\"\n    SecRule RESPONSE_BODY \"@rx (?i:SQL error.*POS[0-9]+.*|Warning.*maxdb.*)\" \\\n        \"capture,\\\n        setvar:'tx.outbound_anomaly_score_pl1=+%{tx.critical_anomaly_score}',\\\n        setvar:'tx.sql_injection_score=+%{tx.critical_anomaly_score}'\"\n",
        "description": "maxDB SQL Information Leakage",
        "paranoia_level": "1",
        "rule_id": "951",
        "sec_rule_id": "951210",
        "severity": "CRITICAL",
        "tags": [
            "application-multi",
            "language-multi",
            "platform-maxdb",
            "attack-disclosure",
            "paranoia-level/1",
            "OWASP_CRS",
            "capec/1000/118/116/54"
        ]
    },
    {
        "comment": "",
        "content": "SecRule TX:sql_error_match \"@eq 1\" \\\n    \"id:951220,\\\n    phase:4,\\\n    block,\\\n    capture,\\\n    t:none,\\\n    msg:'mssql SQL Information Leakage',\\\n    logdata:'Matched Data: %{TX.0} found within %{MATCHED_VAR_NAME}',\\\n    tag:'application-multi',\\\n    tag:'language-multi',\\\n    tag:'platform-mssql',\\\n    tag:'attack-disclosure',\\\n    tag:'paranoia-level/1',\\\n    tag:'OWASP_CRS',\\\n    tag:'capec/1000/118/116/54',\\\n    ctl:auditLogParts=+E,\\\n    ver:'OWASP_CRS/3.4.0-dev',\\\n    severity:'CRITICAL',\\\n    chain\"\n    SecRule RESPONSE_BODY \"@rx (?i)(?:System\\.Data\\.OleDb\\.OleDbException|\\[Microsoft\\]\\[ODBC SQL Server Driver\\]|\\[Macromedia\\]\\[SQLServer JDBC Driver\\]|\\[SqlException|System\\.Data\\.SqlClient\\.SqlException|Unclosed quotation mark after the character string|'80040e14'|mssql_query\\(\\)|Microsoft OLE DB Provider for ODBC Drivers|Microsoft OLE DB Provider for SQL Server|Incorrect syntax near|Sintaxis incorrecta cerca de|Syntax error in string in query expression|Procedure or function .* expects parameter|Unclosed quotation mark before the character string|Syntax error .* in query expression|Data type mismatch in criteria expression\\.|ADODB\\.Field \\(0x800A0BCD\\)|the used select statements have different number of columns|OLE DB.*SQL Server|Warning.*mssql_.*|Driver.*SQL[ _-]*Server|SQL Server.*Driver|SQL Server.*[0-9a-fA-F]{8}|Exception.*\\WSystem\\.Data\\.SqlClient\\.)\" \\\n        \"capture,\\\n        setvar:'tx.outbound_anomaly_score_pl1=+%{tx.critical_anomaly_score}',\\\n        setvar:'tx.sql_injection_score=+%{tx.critical_anomaly_score}'\"\n",
        "description": "mssql SQL Information Leakage",
        "paranoia_level": "1",
        "rule_id": "951",
        "sec_rule_id": "951220",
        "severity": "CRITICAL",
        "tags": [
            "application-multi",
            "language-multi",
            "platform-mssql",
            "attack-disclosure",
            "paranoia-level/1",
            "OWASP_CRS",
            "capec/1000/118/116/54"
        ]
    },
    {
        "comment": "# Regular expression generated from util/regexp-assemble/data/952230.data.\n# To update the regular expression run the following shell script\n# (consult util/regexp-assemble/README.md for details):\n#   util/regexp-assemble/regexp-assemble.py generate 951230\n# Copy the output and replace the regular expression in the chain rule with it.\n",
        "content": "SecRule TX:sql_error_match \"@eq 1\" \\\n    \"id:951230,\\\n    phase:4,\\\n    block,\\\n    capture,\\\n    t:none,\\\n    msg:'mysql SQL Information Leakage',\\\n    logdata:'Matched Data: %{TX.0} found within %{MATCHED_VAR_NAME}',\\\n    tag:'application-multi',\\\n    tag:'language-multi',\\\n    tag:'platform-mysql',\\\n    tag:'attack-disclosure',\\\n    tag:'paranoia-level/1',\\\n    tag:'OWASP_CRS',\\\n    tag:'capec/1000/118/116/54',\\\n    ctl:auditLogParts=+E,\\\n    ver:'OWASP_CRS/3.4.0-dev',\\\n    severity:'CRITICAL',\\\n    chain\"\n    SecRule RESPONSE_BODY \"@rx (?i)(?:MyS(?:QL server version for the right syntax to use|qlClient\\.)|(?:supplied argument is not a valid |SQL syntax.*)MySQL|Column count doesn't match(?: value count at row)?|(?:Table '[^']+' doesn't exis|valid MySQL resul)t|You have an error in your SQL syntax(?: near|;)|Warning.{1,10}mysql_(?:[a-z_()]{1,26})?|ERROR [0-9]{4} \\([a-z0-9]{5}\\):|mysql_fetch_array\\(\\)|on MySQL result index|\\[MySQL\\]\\[ODBC)\" \\\n        \"capture,\\\n        setvar:'tx.outbound_anomaly_score_pl1=+%{tx.critical_anomaly_score}',\\\n        setvar:'tx.sql_injection_score=+%{tx.critical_anomaly_score}'\"\n",
        "description": "mysql SQL Information Leakage",
        "paranoia_level": "1",
        "rule_id": "951",
        "sec_rule_id": "951230",
        "severity": "CRITICAL",
        "tags": [
            "application-multi",
            "language-multi",
            "platform-mysql",
            "attack-disclosure",
            "paranoia-level/1",
            "OWASP_CRS",
            "capec/1000/118/116/54"
        ]
    },
    {
        "comment": "",
        "content": "SecRule TX:sql_error_match \"@eq 1\" \\\n    \"id:951240,\\\n    phase:4,\\\n    block,\\\n    capture,\\\n    t:none,\\\n    msg:'postgres SQL Information Leakage',\\\n    logdata:'Matched Data: %{TX.0} found within %{MATCHED_VAR_NAME}',\\\n    tag:'application-multi',\\\n    tag:'language-multi',\\\n    tag:'platform-pgsql',\\\n    tag:'attack-disclosure',\\\n    tag:'paranoia-level/1',\\\n    tag:'OWASP_CRS',\\\n    tag:'capec/1000/118/116/54',\\\n    ctl:auditLogParts=+E,\\\n    ver:'OWASP_CRS/3.4.0-dev',\\\n    severity:'CRITICAL',\\\n    chain\"\n    SecRule RESPONSE_BODY \"@rx (?i:PostgreSQL query failed:|pg_query\\(\\) \\[:|pg_exec\\(\\) \\[:|PostgreSQL.{1,20}ERROR|Warning.*\\bpg_.*|valid PostgreSQL result|Npgsql\\.|PG::[a-zA-Z]*Error|Supplied argument is not a valid PostgreSQL .*? resource|Unable to connect to PostgreSQL server)\" \\\n        \"capture,\\\n        setvar:'tx.outbound_anomaly_score_pl1=+%{tx.critical_anomaly_score}',\\\n        setvar:'tx.sql_injection_score=+%{tx.critical_anomaly_score}'\"\n",
        "description": "postgres SQL Information Leakage",
        "paranoia_level": "1",
        "rule_id": "951",
        "sec_rule_id": "951240",
        "severity": "CRITICAL",
        "tags": [
            "application-multi",
            "language-multi",
            "platform-pgsql",
            "attack-disclosure",
            "paranoia-level/1",
            "OWASP_CRS",
            "capec/1000/118/116/54"
        ]
    },
    {
        "comment": "",
        "content": "SecRule TX:sql_error_match \"@eq 1\" \\\n    \"id:951250,\\\n    phase:4,\\\n    block,\\\n    capture,\\\n    t:none,\\\n    msg:'sqlite SQL Information Leakage',\\\n    logdata:'Matched Data: %{TX.0} found within %{MATCHED_VAR_NAME}',\\\n    tag:'application-multi',\\\n    tag:'language-multi',\\\n    tag:'platform-sqlite',\\\n    tag:'attack-disclosure',\\\n    tag:'paranoia-level/1',\\\n    tag:'OWASP_CRS',\\\n    tag:'capec/1000/118/116/54',\\\n    ctl:auditLogParts=+E,\\\n    ver:'OWASP_CRS/3.4.0-dev',\\\n    severity:'CRITICAL',\\\n    chain\"\n    SecRule RESPONSE_BODY \"@rx (?i)(?:Warning.*sqlite_.*|Warning.*SQLite3::|SQLite/JDBCDriver|SQLite\\.Exception|System\\.Data\\.SQLite\\.SQLiteException)\" \\\n        \"capture,\\\n        setvar:'tx.outbound_anomaly_score_pl1=+%{tx.critical_anomaly_score}',\\\n        setvar:'tx.sql_injection_score=+%{tx.critical_anomaly_score}'\"\n",
        "description": "sqlite SQL Information Leakage",
        "paranoia_level": "1",
        "rule_id": "951",
        "sec_rule_id": "951250",
        "severity": "CRITICAL",
        "tags": [
            "application-multi",
            "language-multi",
            "platform-sqlite",
            "attack-disclosure",
            "paranoia-level/1",
            "OWASP_CRS",
            "capec/1000/118/116/54"
        ]
    },
    {
        "comment": "",
        "content": "SecRule TX:sql_error_match \"@eq 1\" \\\n    \"id:951260,\\\n    phase:4,\\\n    block,\\\n    capture,\\\n    t:none,\\\n    msg:'Sybase SQL Information Leakage',\\\n    logdata:'Matched Data: %{TX.0} found within %{MATCHED_VAR_NAME}',\\\n    tag:'application-multi',\\\n    tag:'language-multi',\\\n    tag:'platform-sybase',\\\n    tag:'attack-disclosure',\\\n    tag:'paranoia-level/1',\\\n    tag:'OWASP_CRS',\\\n    tag:'capec/1000/118/116/54',\\\n    ctl:auditLogParts=+E,\\\n    ver:'OWASP_CRS/3.4.0-dev',\\\n    severity:'CRITICAL',\\\n    chain\"\n    SecRule RESPONSE_BODY \"@rx (?i)(?:Sybase message:|Warning.{2,20}sybase|Sybase.*Server message.*)\" \\\n        \"capture,\\\n        setvar:'tx.outbound_anomaly_score_pl1=+%{tx.critical_anomaly_score}',\\\n        setvar:'tx.sql_injection_score=+%{tx.critical_anomaly_score}'\"\n",
        "description": "Sybase SQL Information Leakage",
        "paranoia_level": "1",
        "rule_id": "951",
        "sec_rule_id": "951260",
        "severity": "CRITICAL",
        "tags": [
            "application-multi",
            "language-multi",
            "platform-sybase",
            "attack-disclosure",
            "paranoia-level/1",
            "OWASP_CRS",
            "capec/1000/118/116/54"
        ]
    },
    {
        "comment": "",
        "content": "SecRule TX:DETECTION_PARANOIA_LEVEL \"@lt 2\" \"id:951013,phase:3,pass,nolog,skipAfter:END-RESPONSE-951-DATA-LEAKAGES-SQL\"\n",
        "rule_id": "951",
        "sec_rule_id": "951013"
    },
    {
        "comment": "",
        "content": "SecRule TX:DETECTION_PARANOIA_LEVEL \"@lt 2\" \"id:951014,phase:4,pass,nolog,skipAfter:END-RESPONSE-951-DATA-LEAKAGES-SQL\"\n",
        "rule_id": "951",
        "sec_rule_id": "951014"
    },
    {
        "comment": "#\n# -= Paranoia Level 2 =- (apply only when tx.detection_paranoia_level is sufficiently high: 2 or higher)\n#\n",
        "content": "SecRule TX:DETECTION_PARANOIA_LEVEL \"@lt 3\" \"id:951015,phase:3,pass,nolog,skipAfter:END-RESPONSE-951-DATA-LEAKAGES-SQL\"\n",
        "rule_id": "951",
        "sec_rule_id": "951015"
    },
    {
        "comment": "",
        "content": "SecRule TX:DETECTION_PARANOIA_LEVEL \"@lt 3\" \"id:951016,phase:4,pass,nolog,skipAfter:END-RESPONSE-951-DATA-LEAKAGES-SQL\"\n",
        "rule_id": "951",
        "sec_rule_id": "951016"
    },
    {
        "comment": "#\n# -= Paranoia Level 3 =- (apply only when tx.detection_paranoia_level is sufficiently high: 3 or higher)\n#\n",
        "content": "SecRule TX:DETECTION_PARANOIA_LEVEL \"@lt 4\" \"id:951017,phase:3,pass,nolog,skipAfter:END-RESPONSE-951-DATA-LEAKAGES-SQL\"\n",
        "rule_id": "951",
        "sec_rule_id": "951017"
    },
    {
        "comment": "",
        "content": "SecRule TX:DETECTION_PARANOIA_LEVEL \"@lt 4\" \"id:951018,phase:4,pass,nolog,skipAfter:END-RESPONSE-951-DATA-LEAKAGES-SQL\"\n",
        "rule_id": "951",
        "sec_rule_id": "951018"
    },
    {
        "comment": "#\n# -= Paranoia Level 0 (empty) =- (apply unconditionally)\n#\n",
        "content": "SecRule TX:DETECTION_PARANOIA_LEVEL \"@lt 1\" \"id:952011,phase:3,pass,nolog,skipAfter:END-RESPONSE-952-DATA-LEAKAGES-JAVA\"\n",
        "rule_id": "952",
        "sec_rule_id": "952011"
    },
    {
        "comment": "",
        "content": "SecRule TX:DETECTION_PARANOIA_LEVEL \"@lt 1\" \"id:952012,phase:4,pass,nolog,skipAfter:END-RESPONSE-952-DATA-LEAKAGES-JAVA\"\n",
        "rule_id": "952",
        "sec_rule_id": "952012"
    },
    {
        "comment": "#\n# -=[ Java Source Code Leakages ]=-\n#\n",
        "content": "SecRule RESPONSE_BODY \"@pmFromFile java-code-leakages.data\" \\\n    \"id:952100,\\\n    phase:4,\\\n    block,\\\n    capture,\\\n    t:none,\\\n    msg:'Java Source Code Leakage',\\\n    logdata:'Matched Data: %{TX.0} found within %{MATCHED_VAR_NAME}',\\\n    tag:'application-multi',\\\n    tag:'language-java',\\\n    tag:'platform-multi',\\\n    tag:'attack-disclosure',\\\n    tag:'paranoia-level/1',\\\n    tag:'OWASP_CRS',\\\n    tag:'capec/1000/118/116',\\\n    tag:'PCI/6.5.6',\\\n    ctl:auditLogParts=+E,\\\n    ver:'OWASP_CRS/3.4.0-dev',\\\n    severity:'ERROR',\\\n    setvar:'tx.outbound_anomaly_score_pl1=+%{tx.error_anomaly_score}'\"\n",
        "description": "Java Source Code Leakage",
        "paranoia_level": "1",
        "rule_id": "952",
        "sec_rule_id": "952100",
        "severity": "ERROR",
        "tags": [
            "application-multi",
            "language-java",
            "platform-multi",
            "attack-disclosure",
            "paranoia-level/1",
            "OWASP_CRS",
            "capec/1000/118/116",
            "PCI/6.5.6"
        ]
    },
    {
        "comment": "#\n# -=[ Java Errors ]=-\n#\n# Ref: https://github.com/andresriancho/w3af/blob/master/w3af/plugins/grep/error_pages.py\n#\n",
        "content": "SecRule RESPONSE_BODY \"@pmFromFile java-errors.data\" \\\n    \"id:952110,\\\n    phase:4,\\\n    block,\\\n    capture,\\\n    t:none,\\\n    msg:'Java Errors',\\\n    logdata:'Matched Data: %{TX.0} found within %{MATCHED_VAR_NAME}',\\\n    tag:'application-multi',\\\n    tag:'language-java',\\\n    tag:'platform-multi',\\\n    tag:'attack-disclosure',\\\n    tag:'paranoia-level/1',\\\n    tag:'OWASP_CRS',\\\n    tag:'capec/1000/118/116',\\\n    tag:'PCI/6.5.6',\\\n    ctl:auditLogParts=+E,\\\n    ver:'OWASP_CRS/3.4.0-dev',\\\n    severity:'ERROR',\\\n    setvar:'tx.outbound_anomaly_score_pl1=+%{tx.error_anomaly_score}'\"\n",
        "description": "Java Errors",
        "paranoia_level": "1",
        "rule_id": "952",
        "sec_rule_id": "952110",
        "severity": "ERROR",
        "tags": [
            "application-multi",
            "language-java",
            "platform-multi",
            "attack-disclosure",
            "paranoia-level/1",
            "OWASP_CRS",
            "capec/1000/118/116",
            "PCI/6.5.6"
        ]
    },
    {
        "comment": "",
        "content": "SecRule TX:DETECTION_PARANOIA_LEVEL \"@lt 2\" \"id:952013,phase:3,pass,nolog,skipAfter:END-RESPONSE-952-DATA-LEAKAGES-JAVA\"\n",
        "rule_id": "952",
        "sec_rule_id": "952013"
    },
    {
        "comment": "",
        "content": "SecRule TX:DETECTION_PARANOIA_LEVEL \"@lt 2\" \"id:952014,phase:4,pass,nolog,skipAfter:END-RESPONSE-952-DATA-LEAKAGES-JAVA\"\n",
        "rule_id": "952",
        "sec_rule_id": "952014"
    },
    {
        "comment": "#\n# -= Paranoia Level 2 =- (apply only when tx.detection_paranoia_level is sufficiently high: 2 or higher)\n#\n",
        "content": "SecRule TX:DETECTION_PARANOIA_LEVEL \"@lt 3\" \"id:952015,phase:3,pass,nolog,skipAfter:END-RESPONSE-952-DATA-LEAKAGES-JAVA\"\n",
        "rule_id": "952",
        "sec_rule_id": "952015"
    },
    {
        "comment": "",
        "content": "SecRule TX:DETECTION_PARANOIA_LEVEL \"@lt 3\" \"id:952016,phase:4,pass,nolog,skipAfter:END-RESPONSE-952-DATA-LEAKAGES-JAVA\"\n",
        "rule_id": "952",
        "sec_rule_id": "952016"
    },
    {
        "comment": "#\n# -= Paranoia Level 3 =- (apply only when tx.detection_paranoia_level is sufficiently high: 3 or higher)\n#\n",
        "content": "SecRule TX:DETECTION_PARANOIA_LEVEL \"@lt 4\" \"id:952017,phase:3,pass,nolog,skipAfter:END-RESPONSE-952-DATA-LEAKAGES-JAVA\"\n",
        "rule_id": "952",
        "sec_rule_id": "952017"
    },
    {
        "comment": "",
        "content": "SecRule TX:DETECTION_PARANOIA_LEVEL \"@lt 4\" \"id:952018,phase:4,pass,nolog,skipAfter:END-RESPONSE-952-DATA-LEAKAGES-JAVA\"\n",
        "rule_id": "952",
        "sec_rule_id": "952018"
    },
    {
        "comment": "#\n# -= Paranoia Level 0 (empty) =- (apply unconditionally)\n#\n",
        "content": "SecRule TX:DETECTION_PARANOIA_LEVEL \"@lt 1\" \"id:953011,phase:3,pass,nolog,skipAfter:END-RESPONSE-953-DATA-LEAKAGES-PHP\"\n",
        "rule_id": "953",
        "sec_rule_id": "953011"
    },
    {
        "comment": "",
        "content": "SecRule TX:DETECTION_PARANOIA_LEVEL \"@lt 1\" \"id:953012,phase:4,pass,nolog,skipAfter:END-RESPONSE-953-DATA-LEAKAGES-PHP\"\n",
        "rule_id": "953",
        "sec_rule_id": "953012"
    },
    {
        "comment": "#\n# -=[ PHP Error Message Leakage ]=-\n#\n",
        "content": "SecRule RESPONSE_BODY \"@pmFromFile php-errors.data\" \\\n    \"id:953100,\\\n    phase:4,\\\n    block,\\\n    capture,\\\n    t:none,\\\n    msg:'PHP Information Leakage',\\\n    logdata:'Matched Data: %{TX.0} found within %{MATCHED_VAR_NAME}',\\\n    tag:'application-multi',\\\n    tag:'language-php',\\\n    tag:'platform-multi',\\\n    tag:'attack-disclosure',\\\n    tag:'paranoia-level/1',\\\n    tag:'OWASP_CRS',\\\n    tag:'capec/1000/118/116',\\\n    tag:'PCI/6.5.6',\\\n    ctl:auditLogParts=+E,\\\n    ver:'OWASP_CRS/3.4.0-dev',\\\n    severity:'ERROR',\\\n    setvar:'tx.outbound_anomaly_score_pl1=+%{tx.error_anomaly_score}'\"\n",
        "description": "PHP Information Leakage",
        "paranoia_level": "1",
        "rule_id": "953",
        "sec_rule_id": "953100",
        "severity": "ERROR",
        "tags": [
            "application-multi",
            "language-php",
            "platform-multi",
            "attack-disclosure",
            "paranoia-level/1",
            "OWASP_CRS",
            "capec/1000/118/116",
            "PCI/6.5.6"
        ]
    },
    {
        "comment": "#\n# -=[ PHP source code leakage ]=-\n#\n# Detect some common PHP keywords in output.\n#\n",
        "content": "SecRule RESPONSE_BODY \"@rx (?:\\b(?:f(?:tp_(?:nb_)?f?(?:ge|pu)t|get(?:s?s|c)|scanf|write|open|read)|gz(?:(?:encod|writ)e|compress|open|read)|s(?:ession_start|candir)|read(?:(?:gz)?file|dir)|move_uploaded_file|(?:proc_|bz)open|call_user_func)|\\$_(?:(?:pos|ge)t|session))\\b\" \\\n    \"id:953110,\\\n    phase:4,\\\n    block,\\\n    capture,\\\n    t:none,\\\n    msg:'PHP source code leakage',\\\n    logdata:'Matched Data: %{TX.0} found within %{MATCHED_VAR_NAME}',\\\n    tag:'application-multi',\\\n    tag:'language-php',\\\n    tag:'platform-multi',\\\n    tag:'attack-disclosure',\\\n    tag:'paranoia-level/1',\\\n    tag:'OWASP_CRS',\\\n    tag:'capec/1000/118/116',\\\n    tag:'PCI/6.5.6',\\\n    ctl:auditLogParts=+E,\\\n    ver:'OWASP_CRS/3.4.0-dev',\\\n    severity:'ERROR',\\\n    setvar:'tx.outbound_anomaly_score_pl1=+%{tx.error_anomaly_score}'\"\n",
        "description": "PHP source code leakage",
        "paranoia_level": "1",
        "rule_id": "953",
        "sec_rule_id": "953110",
        "severity": "ERROR",
        "tags": [
            "application-multi",
            "language-php",
            "platform-multi",
            "attack-disclosure",
            "paranoia-level/1",
            "OWASP_CRS",
            "capec/1000/118/116",
            "PCI/6.5.6"
        ]
    },
    {
        "comment": "# Detect the presence of the PHP open tag \"<? \", \"<?= \" or \"<?php \" in output.\n#\n# To prevent false positives (due to the short \"<?\" sequences), we also include,\n# the space after it in an attempt to stop alerts in binary output.\n#\n#\n",
        "content": "SecRule RESPONSE_BODY \"@rx <\\?(?:=|php)?\\s+\" \\\n    \"id:953120,\\\n    phase:4,\\\n    block,\\\n    capture,\\\n    t:none,\\\n    msg:'PHP source code leakage',\\\n    logdata:'Matched Data: %{TX.0} found within %{MATCHED_VAR_NAME}',\\\n    tag:'application-multi',\\\n    tag:'language-php',\\\n    tag:'platform-multi',\\\n    tag:'attack-disclosure',\\\n    tag:'paranoia-level/1',\\\n    tag:'OWASP_CRS',\\\n    tag:'capec/1000/118/116',\\\n    tag:'PCI/6.5.6',\\\n    ctl:auditLogParts=+E,\\\n    ver:'OWASP_CRS/3.4.0-dev',\\\n    severity:'ERROR',\\\n    setvar:'tx.outbound_anomaly_score_pl1=+%{tx.error_anomaly_score}'\"\n",
        "description": "PHP source code leakage",
        "paranoia_level": "1",
        "rule_id": "953",
        "sec_rule_id": "953120",
        "severity": "ERROR",
        "tags": [
            "application-multi",
            "language-php",
            "platform-multi",
            "attack-disclosure",
            "paranoia-level/1",
            "OWASP_CRS",
            "capec/1000/118/116",
            "PCI/6.5.6"
        ]
    },
    {
        "comment": "",
        "content": "SecRule TX:DETECTION_PARANOIA_LEVEL \"@lt 2\" \"id:953013,phase:3,pass,nolog,skipAfter:END-RESPONSE-953-DATA-LEAKAGES-PHP\"\n",
        "rule_id": "953",
        "sec_rule_id": "953013"
    },
    {
        "comment": "",
        "content": "SecRule TX:DETECTION_PARANOIA_LEVEL \"@lt 2\" \"id:953014,phase:4,pass,nolog,skipAfter:END-RESPONSE-953-DATA-LEAKAGES-PHP\"\n",
        "rule_id": "953",
        "sec_rule_id": "953014"
    },
    {
        "comment": "#\n# -= Paranoia Level 2 =- (apply only when tx.detection_paranoia_level is sufficiently high: 2 or higher)\n#\n",
        "content": "SecRule TX:DETECTION_PARANOIA_LEVEL \"@lt 3\" \"id:953015,phase:3,pass,nolog,skipAfter:END-RESPONSE-953-DATA-LEAKAGES-PHP\"\n",
        "rule_id": "953",
        "sec_rule_id": "953015"
    },
    {
        "comment": "",
        "content": "SecRule TX:DETECTION_PARANOIA_LEVEL \"@lt 3\" \"id:953016,phase:4,pass,nolog,skipAfter:END-RESPONSE-953-DATA-LEAKAGES-PHP\"\n",
        "rule_id": "953",
        "sec_rule_id": "953016"
    },
    {
        "comment": "#\n# -= Paranoia Level 3 =- (apply only when tx.detection_paranoia_level is sufficiently high: 3 or higher)\n#\n",
        "content": "SecRule TX:DETECTION_PARANOIA_LEVEL \"@lt 4\" \"id:953017,phase:3,pass,nolog,skipAfter:END-RESPONSE-953-DATA-LEAKAGES-PHP\"\n",
        "rule_id": "953",
        "sec_rule_id": "953017"
    },
    {
        "comment": "",
        "content": "SecRule TX:DETECTION_PARANOIA_LEVEL \"@lt 4\" \"id:953018,phase:4,pass,nolog,skipAfter:END-RESPONSE-953-DATA-LEAKAGES-PHP\"\n",
        "rule_id": "953",
        "sec_rule_id": "953018"
    },
    {
        "comment": "#\n# -= Paranoia Level 0 (empty) =- (apply unconditionally)\n#\n",
        "content": "SecRule TX:DETECTION_PARANOIA_LEVEL \"@lt 1\" \"id:954011,phase:3,pass,nolog,skipAfter:END-RESPONSE-954-DATA-LEAKAGES-IIS\"\n",
        "rule_id": "954",
        "sec_rule_id": "954011"
    },
    {
        "comment": "",
        "content": "SecRule TX:DETECTION_PARANOIA_LEVEL \"@lt 1\" \"id:954012,phase:4,pass,nolog,skipAfter:END-RESPONSE-954-DATA-LEAKAGES-IIS\"\n",
        "rule_id": "954",
        "sec_rule_id": "954012"
    },
    {
        "comment": "# IIS default location\n",
        "content": "SecRule RESPONSE_BODY \"@rx [a-z]:\\x5cinetpub\\b\" \\\n    \"id:954100,\\\n    phase:4,\\\n    block,\\\n    capture,\\\n    t:none,t:lowercase,\\\n    msg:'Disclosure of IIS install location',\\\n    logdata:'Matched Data: %{TX.0} found within %{MATCHED_VAR_NAME}',\\\n    tag:'application-multi',\\\n    tag:'language-multi',\\\n    tag:'platform-iis',\\\n    tag:'platform-windows',\\\n    tag:'attack-disclosure',\\\n    tag:'paranoia-level/1',\\\n    tag:'OWASP_CRS',\\\n    tag:'capec/1000/118/116',\\\n    ctl:auditLogParts=+E,\\\n    ver:'OWASP_CRS/3.4.0-dev',\\\n    severity:'ERROR',\\\n    setvar:'tx.outbound_anomaly_score_pl1=+%{tx.error_anomaly_score}'\"\n",
        "description": "Disclosure of IIS install location",
        "paranoia_level": "1",
        "rule_id": "954",
        "sec_rule_id": "954100",
        "severity": "ERROR",
        "tags": [
            "application-multi",
            "language-multi",
            "platform-iis",
            "platform-windows",
            "attack-disclosure",
            "paranoia-level/1",
            "OWASP_CRS",
            "capec/1000/118/116"
        ]
    },
    {
        "comment": "",
        "content": "SecRule RESPONSE_BODY \"@rx (?:Microsoft OLE DB Provider for SQL Server(?:</font>.{1,20}?error '800(?:04005|40e31)'.{1,40}?Timeout expired| \\(0x80040e31\\)<br>Timeout expired<br>)|<h1>internal server error</h1>.*?<h2>part of the server has crashed or it has a configuration error\\.</h2>|cannot connect to the server: timed out)\" \\\n    \"id:954110,\\\n    phase:4,\\\n    block,\\\n    capture,\\\n    t:none,\\\n    msg:'Application Availability Error',\\\n    logdata:'Matched Data: %{TX.0} found within %{MATCHED_VAR_NAME}',\\\n    tag:'application-multi',\\\n    tag:'language-multi',\\\n    tag:'platform-iis',\\\n    tag:'platform-windows',\\\n    tag:'attack-disclosure',\\\n    tag:'paranoia-level/1',\\\n    tag:'PCI/6.5.6',\\\n    tag:'OWASP_CRS',\\\n    tag:'capec/1000/118/116',\\\n    ctl:auditLogParts=+E,\\\n    ver:'OWASP_CRS/3.4.0-dev',\\\n    severity:'ERROR',\\\n    setvar:'tx.outbound_anomaly_score_pl1=+%{tx.error_anomaly_score}'\"\n",
        "description": "Application Availability Error",
        "paranoia_level": "1",
        "rule_id": "954",
        "sec_rule_id": "954110",
        "severity": "ERROR",
        "tags": [
            "application-multi",
            "language-multi",
            "platform-iis",
            "platform-windows",
            "attack-disclosure",
            "paranoia-level/1",
            "PCI/6.5.6",
            "OWASP_CRS",
            "capec/1000/118/116"
        ]
    },
    {
        "comment": "#\n# IIS Errors leakage\n#\n",
        "content": "SecRule RESPONSE_BODY \"@rx (?:\\b(?:A(?:DODB\\.Command\\b.{0,100}?\\b(?:Application uses a value of the wrong type for the current operation\\b|error')| trappable error occurred in an external object\\. The script cannot continue running\\b)|Microsoft VBScript (?:compilation (?:\\(0x8|error)|runtime (?:Error|\\(0x8))\\b|Object required: '|error '800)|<b>Version Information:</b>(?:&nbsp;|\\s)(?:Microsoft \\.NET Framework|ASP\\.NET) Version:|>error 'ASP\\b|An Error Has Occurred|>Syntax error in string in query expression|/[Ee]rror[Mm]essage\\.aspx?\\?[Ee]rror\\b)\" \\\n    \"id:954120,\\\n    phase:4,\\\n    block,\\\n    capture,\\\n    t:none,\\\n    msg:'IIS Information Leakage',\\\n    logdata:'Matched Data: %{TX.0} found within %{MATCHED_VAR_NAME}',\\\n    tag:'application-multi',\\\n    tag:'language-multi',\\\n    tag:'platform-iis',\\\n    tag:'platform-windows',\\\n    tag:'attack-disclosure',\\\n    tag:'paranoia-level/1',\\\n    tag:'OWASP_CRS',\\\n    tag:'capec/1000/118/116',\\\n    tag:'PCI/6.5.6',\\\n    ctl:auditLogParts=+E,\\\n    ver:'OWASP_CRS/3.4.0-dev',\\\n    severity:'ERROR',\\\n    setvar:'tx.outbound_anomaly_score_pl1=+%{tx.error_anomaly_score}'\"\n",
        "description": "IIS Information Leakage",
        "paranoia_level": "1",
        "rule_id": "954",
        "sec_rule_id": "954120",
        "severity": "ERROR",
        "tags": [
            "application-multi",
            "language-multi",
            "platform-iis",
            "platform-windows",
            "attack-disclosure",
            "paranoia-level/1",
            "OWASP_CRS",
            "capec/1000/118/116",
            "PCI/6.5.6"
        ]
    },
    {
        "comment": "",
        "content": "SecRule RESPONSE_STATUS \"!@rx ^404$\" \\\n    \"id:954130,\\\n    phase:4,\\\n    block,\\\n    capture,\\\n    t:none,\\\n    msg:'IIS Information Leakage',\\\n    logdata:'Matched Data: %{TX.0} found within %{MATCHED_VAR_NAME}',\\\n    tag:'application-multi',\\\n    tag:'language-multi',\\\n    tag:'platform-iis',\\\n    tag:'platform-windows',\\\n    tag:'attack-disclosure',\\\n    tag:'paranoia-level/1',\\\n    tag:'OWASP_CRS',\\\n    tag:'capec/1000/118/116',\\\n    tag:'PCI/6.5.6',\\\n    ver:'OWASP_CRS/3.4.0-dev',\\\n    severity:'ERROR',\\\n    chain\"\n    SecRule RESPONSE_BODY \"@rx \\bServer Error in.{0,50}?\\bApplication\\b\" \\\n        \"capture,\\\n        t:none,\\\n        ctl:auditLogParts=+E,\\\n        setvar:'tx.outbound_anomaly_score_pl1=+%{tx.error_anomaly_score}'\"\n",
        "description": "IIS Information Leakage",
        "paranoia_level": "1",
        "rule_id": "954",
        "sec_rule_id": "954130",
        "severity": "ERROR",
        "tags": [
            "application-multi",
            "language-multi",
            "platform-iis",
            "platform-windows",
            "attack-disclosure",
            "paranoia-level/1",
            "OWASP_CRS",
            "capec/1000/118/116",
            "PCI/6.5.6"
        ]
    },
    {
        "comment": "",
        "content": "SecRule TX:DETECTION_PARANOIA_LEVEL \"@lt 2\" \"id:954013,phase:3,pass,nolog,skipAfter:END-RESPONSE-954-DATA-LEAKAGES-IIS\"\n",
        "rule_id": "954",
        "sec_rule_id": "954013"
    },
    {
        "comment": "",
        "content": "SecRule TX:DETECTION_PARANOIA_LEVEL \"@lt 2\" \"id:954014,phase:4,pass,nolog,skipAfter:END-RESPONSE-954-DATA-LEAKAGES-IIS\"\n",
        "rule_id": "954",
        "sec_rule_id": "954014"
    },
    {
        "comment": "#\n# -= Paranoia Level 2 =- (apply only when tx.detection_paranoia_level is sufficiently high: 2 or higher)\n#\n",
        "content": "SecRule TX:DETECTION_PARANOIA_LEVEL \"@lt 3\" \"id:954015,phase:3,pass,nolog,skipAfter:END-RESPONSE-954-DATA-LEAKAGES-IIS\"\n",
        "rule_id": "954",
        "sec_rule_id": "954015"
    },
    {
        "comment": "",
        "content": "SecRule TX:DETECTION_PARANOIA_LEVEL \"@lt 3\" \"id:954016,phase:4,pass,nolog,skipAfter:END-RESPONSE-954-DATA-LEAKAGES-IIS\"\n",
        "rule_id": "954",
        "sec_rule_id": "954016"
    },
    {
        "comment": "#\n# -= Paranoia Level 3 =- (apply only when tx.detection_paranoia_level is sufficiently high: 3 or higher)\n#\n",
        "content": "SecRule TX:DETECTION_PARANOIA_LEVEL \"@lt 4\" \"id:954017,phase:3,pass,nolog,skipAfter:END-RESPONSE-954-DATA-LEAKAGES-IIS\"\n",
        "rule_id": "954",
        "sec_rule_id": "954017"
    },
    {
        "comment": "",
        "content": "SecRule TX:DETECTION_PARANOIA_LEVEL \"@lt 4\" \"id:954018,phase:4,pass,nolog,skipAfter:END-RESPONSE-954-DATA-LEAKAGES-IIS\"\n",
        "rule_id": "954",
        "sec_rule_id": "954018"
    },
    {
        "comment": "#\n# -= Paranoia Level 0 (empty) =- (apply unconditionally)\n#\n",
        "content": "SecRule TX:DETECTION_PARANOIA_LEVEL \"@lt 1\" \"id:955011,phase:3,pass,nolog,skipAfter:END-RESPONSE-955-WEB-SHELLS\"\n",
        "rule_id": "955",
        "sec_rule_id": "955011"
    },
    {
        "comment": "",
        "content": "SecRule TX:DETECTION_PARANOIA_LEVEL \"@lt 1\" \"id:955012,phase:4,pass,nolog,skipAfter:END-RESPONSE-955-WEB-SHELLS\"\n",
        "rule_id": "955",
        "sec_rule_id": "955012"
    },
    {
        "comment": "# For performance reasons, most of the shells are matched using this rule.\n# This rule is intended for PHP web shells.\n",
        "content": "SecRule RESPONSE_BODY \"@pmFromFile web-shells-php.data\" \\\n    \"id:955100,\\\n    phase:4,\\\n    block,\\\n    capture,\\\n    t:none,\\\n    msg:'Web shell detected',\\\n    logdata:'Matched Data: %{TX.0} found within %{MATCHED_VAR_NAME}',\\\n    tag:'language-php',\\\n    tag:'platform-multi',\\\n    tag:'attack-rce',\\\n    tag:'paranoia-level/1',\\\n    tag:'OWASP_CRS',\\\n    tag:'capec/1000/225/122/17/650',\\\n    ctl:auditLogParts=+E,\\\n    ver:'OWASP_CRS/3.4.0-dev',\\\n    severity:'CRITICAL',\\\n    setvar:'tx.outbound_anomaly_score_pl1=+%{tx.critical_anomaly_score}'\"\n",
        "paranoia_level": "1",
        "rule_id": "955",
        "sec_rule_id": "955100",
        "severity": "CRITICAL",
        "tags": [
            "language-php",
            "platform-multi",
            "attack-rce",
            "paranoia-level/1",
            "OWASP_CRS",
            "capec/1000/225/122/17/650"
        ]
    },
    {
        "comment": "# r57 web shell\n",
        "content": "SecRule RESPONSE_BODY \"@rx (<title>r57 Shell Version [0-9.]+</title>|<title>r57 shell</title>)\" \\\n    \"id:955110,\\\n    phase:4,\\\n    block,\\\n    capture,\\\n    t:none,\\\n    msg:'r57 web shell',\\\n    logdata:'Matched Data: %{TX.0} found within %{MATCHED_VAR_NAME}',\\\n    tag:'language-php',\\\n    tag:'platform-multi',\\\n    tag:'attack-rce',\\\n    tag:'paranoia-level/1',\\\n    tag:'OWASP_CRS',\\\n    tag:'capec/1000/225/122/17/650',\\\n    ctl:auditLogParts=+E,\\\n    ver:'OWASP_CRS/3.4.0-dev',\\\n    severity:'CRITICAL',\\\n    setvar:'tx.outbound_anomaly_score_pl1=+%{tx.critical_anomaly_score}'\"\n",
        "paranoia_level": "1",
        "rule_id": "955",
        "sec_rule_id": "955110",
        "severity": "CRITICAL",
        "tags": [
            "language-php",
            "platform-multi",
            "attack-rce",
            "paranoia-level/1",
            "OWASP_CRS",
            "capec/1000/225/122/17/650"
        ]
    },
    {
        "comment": "# WSO web shell\n",
        "content": "SecRule RESPONSE_BODY \"@rx ^<html><head><meta http-equiv='Content-Type' content='text/html; charset=Windows-1251'><title>.*? - WSO [0-9.]+</title>\" \\\n    \"id:955120,\\\n    phase:4,\\\n    block,\\\n    capture,\\\n    t:none,\\\n    msg:'WSO web shell',\\\n    logdata:'Matched Data: %{TX.0} found within %{MATCHED_VAR_NAME}',\\\n    tag:'language-php',\\\n    tag:'platform-multi',\\\n    tag:'attack-rce',\\\n    tag:'paranoia-level/1',\\\n    tag:'OWASP_CRS',\\\n    tag:'capec/1000/225/122/17/650',\\\n    ctl:auditLogParts=+E,\\\n    ver:'OWASP_CRS/3.4.0-dev',\\\n    severity:'CRITICAL',\\\n    setvar:'tx.outbound_anomaly_score_pl1=+%{tx.critical_anomaly_score}'\"\n",
        "paranoia_level": "1",
        "rule_id": "955",
        "sec_rule_id": "955120",
        "severity": "CRITICAL",
        "tags": [
            "language-php",
            "platform-multi",
            "attack-rce",
            "paranoia-level/1",
            "OWASP_CRS",
            "capec/1000/225/122/17/650"
        ]
    },
    {
        "comment": "# b4tm4n web shell (https://github.com/k4mpr3t/b4tm4n)\n",
        "content": "SecRule RESPONSE_BODY \"@rx B4TM4N SH3LL</title>.*<meta name='author' content='k4mpr3t'/>\" \\\n    \"id:955130,\\\n    phase:4,\\\n    block,\\\n    capture,\\\n    t:none,\\\n    msg:'b4tm4n web shell',\\\n    logdata:'Matched Data: %{TX.0} found within %{MATCHED_VAR_NAME}',\\\n    tag:'language-php',\\\n    tag:'platform-multi',\\\n    tag:'attack-rce',\\\n    tag:'paranoia-level/1',\\\n    tag:'OWASP_CRS',\\\n    tag:'capec/1000/225/122/17/650',\\\n    ctl:auditLogParts=+E,\\\n    ver:'OWASP_CRS/3.4.0-dev',\\\n    severity:'CRITICAL',\\\n    setvar:'tx.outbound_anomaly_score_pl1=+%{tx.critical_anomaly_score}'\"\n",
        "paranoia_level": "1",
        "rule_id": "955",
        "sec_rule_id": "955130",
        "severity": "CRITICAL",
        "tags": [
            "language-php",
            "platform-multi",
            "attack-rce",
            "paranoia-level/1",
            "OWASP_CRS",
            "capec/1000/225/122/17/650"
        ]
    },
    {
        "comment": "# Mini Shell web shell\n",
        "content": "SecRule RESPONSE_BODY \"@rx <title>Mini Shell</title>.*Developed By LameHacker\" \\\n    \"id:955140,\\\n    phase:4,\\\n    block,\\\n    capture,\\\n    t:none,\\\n    msg:'Mini Shell web shell',\\\n    logdata:'Matched Data: %{TX.0} found within %{MATCHED_VAR_NAME}',\\\n    tag:'language-php',\\\n    tag:'platform-multi',\\\n    tag:'attack-rce',\\\n    tag:'paranoia-level/1',\\\n    tag:'OWASP_CRS',\\\n    tag:'capec/1000/225/122/17/650',\\\n    ctl:auditLogParts=+E,\\\n    ver:'OWASP_CRS/3.4.0-dev',\\\n    severity:'CRITICAL',\\\n    setvar:'tx.outbound_anomaly_score_pl1=+%{tx.critical_anomaly_score}'\"\n",
        "paranoia_level": "1",
        "rule_id": "955",
        "sec_rule_id": "955140",
        "severity": "CRITICAL",
        "tags": [
            "language-php",
            "platform-multi",
            "attack-rce",
            "paranoia-level/1",
            "OWASP_CRS",
            "capec/1000/225/122/17/650"
        ]
    },
    {
        "comment": "# Ashiyane web shell\n",
        "content": "SecRule RESPONSE_BODY \"@rx <title>\\.:: .* ~ Ashiyane V [0-9.]+ ::\\.</title>\" \\\n    \"id:955150,\\\n    phase:4,\\\n    block,\\\n    capture,\\\n    t:none,\\\n    msg:'Ashiyane web shell',\\\n    logdata:'Matched Data: %{TX.0} found within %{MATCHED_VAR_NAME}',\\\n    tag:'language-php',\\\n    tag:'platform-multi',\\\n    tag:'attack-rce',\\\n    tag:'paranoia-level/1',\\\n    tag:'OWASP_CRS',\\\n    tag:'capec/1000/225/122/17/650',\\\n    ctl:auditLogParts=+E,\\\n    ver:'OWASP_CRS/3.4.0-dev',\\\n    severity:'CRITICAL',\\\n    setvar:'tx.outbound_anomaly_score_pl1=+%{tx.critical_anomaly_score}'\"\n",
        "paranoia_level": "1",
        "rule_id": "955",
        "sec_rule_id": "955150",
        "severity": "CRITICAL",
        "tags": [
            "language-php",
            "platform-multi",
            "attack-rce",
            "paranoia-level/1",
            "OWASP_CRS",
            "capec/1000/225/122/17/650"
        ]
    },
    {
        "comment": "# Symlink_Sa web shell\n",
        "content": "SecRule RESPONSE_BODY \"@rx <title>Symlink_Sa [0-9.]+</title>\" \\\n    \"id:955160,\\\n    phase:4,\\\n    block,\\\n    capture,\\\n    t:none,\\\n    msg:'Symlink_Sa web shell',\\\n    logdata:'Matched Data: %{TX.0} found within %{MATCHED_VAR_NAME}',\\\n    tag:'language-php',\\\n    tag:'platform-multi',\\\n    tag:'attack-rce',\\\n    tag:'paranoia-level/1',\\\n    tag:'OWASP_CRS',\\\n    tag:'capec/1000/225/122/17/650',\\\n    ctl:auditLogParts=+E,\\\n    ver:'OWASP_CRS/3.4.0-dev',\\\n    severity:'CRITICAL',\\\n    setvar:'tx.outbound_anomaly_score_pl1=+%{tx.critical_anomaly_score}'\"\n",
        "paranoia_level": "1",
        "rule_id": "955",
        "sec_rule_id": "955160",
        "severity": "CRITICAL",
        "tags": [
            "language-php",
            "platform-multi",
            "attack-rce",
            "paranoia-level/1",
            "OWASP_CRS",
            "capec/1000/225/122/17/650"
        ]
    },
    {
        "comment": "# CasuS web shell\n",
        "content": "SecRule RESPONSE_BODY \"@rx <title>CasuS [0-9.]+ by MafiABoY</title>\" \\\n    \"id:955170,\\\n    phase:4,\\\n    block,\\\n    capture,\\\n    t:none,\\\n    msg:'CasuS web shell',\\\n    logdata:'Matched Data: %{TX.0} found within %{MATCHED_VAR_NAME}',\\\n    tag:'language-php',\\\n    tag:'platform-multi',\\\n    tag:'attack-rce',\\\n    tag:'paranoia-level/1',\\\n    tag:'OWASP_CRS',\\\n    tag:'capec/1000/225/122/17/650',\\\n    ctl:auditLogParts=+E,\\\n    ver:'OWASP_CRS/3.4.0-dev',\\\n    severity:'CRITICAL',\\\n    setvar:'tx.outbound_anomaly_score_pl1=+%{tx.critical_anomaly_score}'\"\n",
        "paranoia_level": "1",
        "rule_id": "955",
        "sec_rule_id": "955170",
        "severity": "CRITICAL",
        "tags": [
            "language-php",
            "platform-multi",
            "attack-rce",
            "paranoia-level/1",
            "OWASP_CRS",
            "capec/1000/225/122/17/650"
        ]
    },
    {
        "comment": "# GRP WebShell\n",
        "content": "SecRule RESPONSE_BODY \"@rx ^<html>\\r\\n<head>\\r\\n<title>GRP WebShell [0-9.]+ \" \\\n    \"id:955180,\\\n    phase:4,\\\n    block,\\\n    capture,\\\n    t:none,\\\n    msg:'GRP WebShell',\\\n    logdata:'Matched Data: %{TX.0} found within %{MATCHED_VAR_NAME}',\\\n    tag:'language-php',\\\n    tag:'platform-multi',\\\n    tag:'attack-rce',\\\n    tag:'paranoia-level/1',\\\n    tag:'OWASP_CRS',\\\n    tag:'capec/1000/225/122/17/650',\\\n    ctl:auditLogParts=+E,\\\n    ver:'OWASP_CRS/3.4.0-dev',\\\n    severity:'CRITICAL',\\\n    setvar:'tx.outbound_anomaly_score_pl1=+%{tx.critical_anomaly_score}'\"\n",
        "paranoia_level": "1",
        "rule_id": "955",
        "sec_rule_id": "955180",
        "severity": "CRITICAL",
        "tags": [
            "language-php",
            "platform-multi",
            "attack-rce",
            "paranoia-level/1",
            "OWASP_CRS",
            "capec/1000/225/122/17/650"
        ]
    },
    {
        "comment": "# NGHshell web shell\n",
        "content": "SecRule RESPONSE_BODY \"@rx <small>NGHshell [0-9.]+ by Cr4sh</body></html>\\n$\" \\\n    \"id:955190,\\\n    phase:4,\\\n    block,\\\n    capture,\\\n    t:none,\\\n    msg:'NGHshell web shell',\\\n    logdata:'Matched Data: %{TX.0} found within %{MATCHED_VAR_NAME}',\\\n    tag:'language-php',\\\n    tag:'platform-multi',\\\n    tag:'attack-rce',\\\n    tag:'paranoia-level/1',\\\n    tag:'OWASP_CRS',\\\n    tag:'capec/1000/225/122/17/650',\\\n    ctl:auditLogParts=+E,\\\n    ver:'OWASP_CRS/3.4.0-dev',\\\n    severity:'CRITICAL',\\\n    setvar:'tx.outbound_anomaly_score_pl1=+%{tx.critical_anomaly_score}'\"\n",
        "paranoia_level": "1",
        "rule_id": "955",
        "sec_rule_id": "955190",
        "severity": "CRITICAL",
        "tags": [
            "language-php",
            "platform-multi",
            "attack-rce",
            "paranoia-level/1",
            "OWASP_CRS",
            "capec/1000/225/122/17/650"
        ]
    },
    {
        "comment": "# SimAttacker web shell\n",
        "content": "SecRule RESPONSE_BODY \"@rx <title>SimAttacker - (?:Version|Vrsion) : [0-9.]+ - \" \\\n    \"id:955200,\\\n    phase:4,\\\n    block,\\\n    capture,\\\n    t:none,\\\n    msg:'SimAttacker web shell',\\\n    logdata:'Matched Data: %{TX.0} found within %{MATCHED_VAR_NAME}',\\\n    tag:'language-php',\\\n    tag:'platform-multi',\\\n    tag:'attack-rce',\\\n    tag:'paranoia-level/1',\\\n    tag:'OWASP_CRS',\\\n    tag:'capec/1000/225/122/17/650',\\\n    ctl:auditLogParts=+E,\\\n    ver:'OWASP_CRS/3.4.0-dev',\\\n    severity:'CRITICAL',\\\n    setvar:'tx.outbound_anomaly_score_pl1=+%{tx.critical_anomaly_score}'\"\n",
        "paranoia_level": "1",
        "rule_id": "955",
        "sec_rule_id": "955200",
        "severity": "CRITICAL",
        "tags": [
            "language-php",
            "platform-multi",
            "attack-rce",
            "paranoia-level/1",
            "OWASP_CRS",
            "capec/1000/225/122/17/650"
        ]
    },
    {
        "comment": "# Unknown web shell\n",
        "content": "SecRule RESPONSE_BODY \"@rx ^<!DOCTYPE html>\\n<html>\\n<!-- By Artyum .*<title>Web Shell</title>\" \\\n    \"id:955210,\\\n    phase:4,\\\n    block,\\\n    capture,\\\n    t:none,\\\n    msg:'Unknown web shell',\\\n    logdata:'Matched Data: %{TX.0} found within %{MATCHED_VAR_NAME}',\\\n    tag:'language-php',\\\n    tag:'platform-multi',\\\n    tag:'attack-rce',\\\n    tag:'paranoia-level/1',\\\n    tag:'OWASP_CRS',\\\n    tag:'capec/1000/225/122/17/650',\\\n    ctl:auditLogParts=+E,\\\n    ver:'OWASP_CRS/3.4.0-dev',\\\n    severity:'CRITICAL',\\\n    setvar:'tx.outbound_anomaly_score_pl1=+%{tx.critical_anomaly_score}'\"\n",
        "paranoia_level": "1",
        "rule_id": "955",
        "sec_rule_id": "955210",
        "severity": "CRITICAL",
        "tags": [
            "language-php",
            "platform-multi",
            "attack-rce",
            "paranoia-level/1",
            "OWASP_CRS",
            "capec/1000/225/122/17/650"
        ]
    },
    {
        "comment": "# lama's'hell web shell\n",
        "content": "SecRule RESPONSE_BODY \"@rx <title>lama's'hell v. [0-9.]+</title>\" \\\n    \"id:955220,\\\n    phase:4,\\\n    block,\\\n    capture,\\\n    t:none,\\\n    msg:'lama\\'s\\'hell web shell',\\\n    logdata:'Matched Data: %{TX.0} found within %{MATCHED_VAR_NAME}',\\\n    tag:'language-php',\\\n    tag:'platform-multi',\\\n    tag:'attack-rce',\\\n    tag:'paranoia-level/1',\\\n    tag:'OWASP_CRS',\\\n    tag:'capec/1000/225/122/17/650',\\\n    ctl:auditLogParts=+E,\\\n    ver:'OWASP_CRS/3.4.0-dev',\\\n    severity:'CRITICAL',\\\n    setvar:'tx.outbound_anomaly_score_pl1=+%{tx.critical_anomaly_score}'\"\n",
        "paranoia_level": "1",
        "rule_id": "955",
        "sec_rule_id": "955220",
        "severity": "CRITICAL",
        "tags": [
            "language-php",
            "platform-multi",
            "attack-rce",
            "paranoia-level/1",
            "OWASP_CRS",
            "capec/1000/225/122/17/650"
        ]
    },
    {
        "comment": "# lostDC web shell\n",
        "content": "SecRule RESPONSE_BODY \"@rx ^ *<html>\\n[ ]+<head>\\n[ ]+<title>lostDC - \" \\\n    \"id:955230,\\\n    phase:4,\\\n    block,\\\n    capture,\\\n    t:none,\\\n    msg:'lostDC web shell',\\\n    logdata:'Matched Data: %{TX.0} found within %{MATCHED_VAR_NAME}',\\\n    tag:'language-php',\\\n    tag:'platform-multi',\\\n    tag:'attack-rce',\\\n    tag:'paranoia-level/1',\\\n    tag:'OWASP_CRS',\\\n    tag:'capec/1000/225/122/17/650',\\\n    ctl:auditLogParts=+E,\\\n    ver:'OWASP_CRS/3.4.0-dev',\\\n    severity:'CRITICAL',\\\n    setvar:'tx.outbound_anomaly_score_pl1=+%{tx.critical_anomaly_score}'\"\n",
        "paranoia_level": "1",
        "rule_id": "955",
        "sec_rule_id": "955230",
        "severity": "CRITICAL",
        "tags": [
            "language-php",
            "platform-multi",
            "attack-rce",
            "paranoia-level/1",
            "OWASP_CRS",
            "capec/1000/225/122/17/650"
        ]
    },
    {
        "comment": "# Unknown web shell\n",
        "content": "SecRule RESPONSE_BODY \"@rx ^<title>PHP Web Shell</title>\\r\\n<html>\\r\\n<body>\\r\\n    <!-- Replaces command with Base64-encoded Data -->\" \\\n    \"id:955240,\\\n    phase:4,\\\n    block,\\\n    capture,\\\n    t:none,\\\n    msg:'Unknown web shell',\\\n    logdata:'Matched Data: %{TX.0} found within %{MATCHED_VAR_NAME}',\\\n    tag:'language-php',\\\n    tag:'platform-multi',\\\n    tag:'attack-rce',\\\n    tag:'paranoia-level/1',\\\n    tag:'OWASP_CRS',\\\n    tag:'capec/1000/225/122/17/650',\\\n    ctl:auditLogParts=+E,\\\n    ver:'OWASP_CRS/3.4.0-dev',\\\n    severity:'CRITICAL',\\\n    setvar:'tx.outbound_anomaly_score_pl1=+%{tx.critical_anomaly_score}'\"\n",
        "paranoia_level": "1",
        "rule_id": "955",
        "sec_rule_id": "955240",
        "severity": "CRITICAL",
        "tags": [
            "language-php",
            "platform-multi",
            "attack-rce",
            "paranoia-level/1",
            "OWASP_CRS",
            "capec/1000/225/122/17/650"
        ]
    },
    {
        "comment": "# Unknown web shell\n",
        "content": "SecRule RESPONSE_BODY \"@rx ^<html>\\n<head>\\n<div align=\\\"left\\\"><font size=\\\"1\\\">Input command :</font></div>\\n<form name=\\\"cmd\\\" method=\\\"POST\\\" enctype=\\\"multipart/form-data\\\">\" \\\n    \"id:955250,\\\n    phase:4,\\\n    block,\\\n    capture,\\\n    t:none,\\\n    msg:'Unknown web shell',\\\n    logdata:'Matched Data: %{TX.0} found within %{MATCHED_VAR_NAME}',\\\n    tag:'language-php',\\\n    tag:'platform-multi',\\\n    tag:'attack-rce',\\\n    tag:'paranoia-level/1',\\\n    tag:'OWASP_CRS',\\\n    tag:'capec/1000/225/122/17/650',\\\n    ctl:auditLogParts=+E,\\\n    ver:'OWASP_CRS/3.4.0-dev',\\\n    severity:'CRITICAL',\\\n    setvar:'tx.outbound_anomaly_score_pl1=+%{tx.critical_anomaly_score}'\"\n",
        "paranoia_level": "1",
        "rule_id": "955",
        "sec_rule_id": "955250",
        "severity": "CRITICAL",
        "tags": [
            "language-php",
            "platform-multi",
            "attack-rce",
            "paranoia-level/1",
            "OWASP_CRS",
            "capec/1000/225/122/17/650"
        ]
    },
    {
        "comment": "# Ru24PostWebShell web shell\n",
        "content": "SecRule RESPONSE_BODY \"@rx ^<html>\\n<head>\\n<title>Ru24PostWebShell - \" \\\n    \"id:955260,\\\n    phase:4,\\\n    block,\\\n    capture,\\\n    t:none,\\\n    msg:'Ru24PostWebShell web shell',\\\n    logdata:'Matched Data: %{TX.0} found within %{MATCHED_VAR_NAME}',\\\n    tag:'language-php',\\\n    tag:'platform-multi',\\\n    tag:'attack-rce',\\\n    tag:'paranoia-level/1',\\\n    tag:'OWASP_CRS',\\\n    tag:'capec/1000/225/122/17/650',\\\n    ctl:auditLogParts=+E,\\\n    ver:'OWASP_CRS/3.4.0-dev',\\\n    severity:'CRITICAL',\\\n    setvar:'tx.outbound_anomaly_score_pl1=+%{tx.critical_anomaly_score}'\"\n",
        "paranoia_level": "1",
        "rule_id": "955",
        "sec_rule_id": "955260",
        "severity": "CRITICAL",
        "tags": [
            "language-php",
            "platform-multi",
            "attack-rce",
            "paranoia-level/1",
            "OWASP_CRS",
            "capec/1000/225/122/17/650"
        ]
    },
    {
        "comment": "# s72 Shell web shell\n",
        "content": "SecRule RESPONSE_BODY \"@rx <title>s72 Shell v[0-9.]+ Codinf by Cr@zy_King</title>\" \\\n    \"id:955270,\\\n    phase:4,\\\n    block,\\\n    capture,\\\n    t:none,\\\n    msg:'s72 Shell web shell',\\\n    logdata:'Matched Data: %{TX.0} found within %{MATCHED_VAR_NAME}',\\\n    tag:'language-php',\\\n    tag:'platform-multi',\\\n    tag:'attack-rce',\\\n    tag:'paranoia-level/1',\\\n    tag:'OWASP_CRS',\\\n    tag:'capec/1000/225/122/17/650',\\\n    ctl:auditLogParts=+E,\\\n    ver:'OWASP_CRS/3.4.0-dev',\\\n    severity:'CRITICAL',\\\n    setvar:'tx.outbound_anomaly_score_pl1=+%{tx.critical_anomaly_score}'\"\n",
        "paranoia_level": "1",
        "rule_id": "955",
        "sec_rule_id": "955270",
        "severity": "CRITICAL",
        "tags": [
            "language-php",
            "platform-multi",
            "attack-rce",
            "paranoia-level/1",
            "OWASP_CRS",
            "capec/1000/225/122/17/650"
        ]
    },
    {
        "comment": "# PhpSpy web shell\n",
        "content": "SecRule RESPONSE_BODY \"@rx ^<html>\\r\\n<head>\\r\\n<meta http-equiv=\\\"Content-Type\\\" content=\\\"text/html; charset=gb2312\\\">\\r\\n<title>PhpSpy Ver [0-9]+</title>\" \\\n    \"id:955280,\\\n    phase:4,\\\n    block,\\\n    capture,\\\n    t:none,\\\n    msg:'PhpSpy web shell',\\\n    logdata:'Matched Data: %{TX.0} found within %{MATCHED_VAR_NAME}',\\\n    tag:'language-php',\\\n    tag:'platform-multi',\\\n    tag:'attack-rce',\\\n    tag:'paranoia-level/1',\\\n    tag:'OWASP_CRS',\\\n    tag:'capec/1000/225/122/17/650',\\\n    ctl:auditLogParts=+E,\\\n    ver:'OWASP_CRS/3.4.0-dev',\\\n    severity:'CRITICAL',\\\n    setvar:'tx.outbound_anomaly_score_pl1=+%{tx.critical_anomaly_score}'\"\n",
        "paranoia_level": "1",
        "rule_id": "955",
        "sec_rule_id": "955280",
        "severity": "CRITICAL",
        "tags": [
            "language-php",
            "platform-multi",
            "attack-rce",
            "paranoia-level/1",
            "OWASP_CRS",
            "capec/1000/225/122/17/650"
        ]
    },
    {
        "comment": "# g00nshell web shell\n",
        "content": "SecRule RESPONSE_BODY \"@rx ^ <html>\\n\\n<head>\\n\\n<title>g00nshell v[0-9.]+ \" \\\n    \"id:955290,\\\n    phase:4,\\\n    block,\\\n    capture,\\\n    t:none,\\\n    msg:'g00nshell web shell',\\\n    logdata:'Matched Data: %{TX.0} found within %{MATCHED_VAR_NAME}',\\\n    tag:'language-php',\\\n    tag:'platform-multi',\\\n    tag:'attack-rce',\\\n    tag:'paranoia-level/1',\\\n    tag:'OWASP_CRS',\\\n    tag:'capec/1000/225/122/17/650',\\\n    ctl:auditLogParts=+E,\\\n    ver:'OWASP_CRS/3.4.0-dev',\\\n    severity:'CRITICAL',\\\n    setvar:'tx.outbound_anomaly_score_pl1=+%{tx.critical_anomaly_score}'\"\n",
        "paranoia_level": "1",
        "rule_id": "955",
        "sec_rule_id": "955290",
        "severity": "CRITICAL",
        "tags": [
            "language-php",
            "platform-multi",
            "attack-rce",
            "paranoia-level/1",
            "OWASP_CRS",
            "capec/1000/225/122/17/650"
        ]
    },
    {
        "comment": "# PuNkHoLic shell web shell\n# Various versions has this text written little differently so we need to do\n# t:removeWhitespace and t:lowercase.\n",
        "content": "SecRule RESPONSE_BODY \"@contains <title>punkholicshell</title>\" \\\n    \"id:955300,\\\n    phase:4,\\\n    block,\\\n    capture,\\\n    t:none,t:removeWhitespace,t:lowercase,\\\n    msg:'PuNkHoLic shell web shell',\\\n    logdata:'Matched Data: %{TX.0} found within %{MATCHED_VAR_NAME}',\\\n    tag:'language-php',\\\n    tag:'platform-multi',\\\n    tag:'attack-rce',\\\n    tag:'paranoia-level/1',\\\n    tag:'OWASP_CRS',\\\n    tag:'capec/1000/225/122/17/650',\\\n    ctl:auditLogParts=+E,\\\n    ver:'OWASP_CRS/3.4.0-dev',\\\n    severity:'CRITICAL',\\\n    setvar:'tx.outbound_anomaly_score_pl1=+%{tx.critical_anomaly_score}'\"\n",
        "paranoia_level": "1",
        "rule_id": "955",
        "sec_rule_id": "955300",
        "severity": "CRITICAL",
        "tags": [
            "language-php",
            "platform-multi",
            "attack-rce",
            "paranoia-level/1",
            "OWASP_CRS",
            "capec/1000/225/122/17/650"
        ]
    },
    {
        "comment": "# azrail web shell\n",
        "content": "SecRule RESPONSE_BODY \"@rx ^<html>\\n      <head>\\n             <title>azrail [0-9.]+ by C-W-M</title>\" \\\n    \"id:955310,\\\n    phase:4,\\\n    block,\\\n    capture,\\\n    t:none,\\\n    msg:'azrail web shell',\\\n    logdata:'Matched Data: %{TX.0} found within %{MATCHED_VAR_NAME}',\\\n    tag:'language-php',\\\n    tag:'platform-multi',\\\n    tag:'attack-rce',\\\n    tag:'paranoia-level/1',\\\n    tag:'OWASP_CRS',\\\n    tag:'capec/1000/225/122/17/650',\\\n    ctl:auditLogParts=+E,\\\n    ver:'OWASP_CRS/3.4.0-dev',\\\n    severity:'CRITICAL',\\\n    setvar:'tx.outbound_anomaly_score_pl1=+%{tx.critical_anomaly_score}'\"\n",
        "paranoia_level": "1",
        "rule_id": "955",
        "sec_rule_id": "955310",
        "severity": "CRITICAL",
        "tags": [
            "language-php",
            "platform-multi",
            "attack-rce",
            "paranoia-level/1",
            "OWASP_CRS",
            "capec/1000/225/122/17/650"
        ]
    },
    {
        "comment": "# SmEvK_PaThAn Shell web shell\n",
        "content": "SecRule RESPONSE_BODY \"@rx >SmEvK_PaThAn Shell v[0-9]+ coded by <a href=\" \\\n    \"id:955320,\\\n    phase:4,\\\n    block,\\\n    capture,\\\n    t:none,\\\n    msg:'SmEvK_PaThAn Shell web shell',\\\n    logdata:'Matched Data: %{TX.0} found within %{MATCHED_VAR_NAME}',\\\n    tag:'language-php',\\\n    tag:'platform-multi',\\\n    tag:'attack-rce',\\\n    tag:'paranoia-level/1',\\\n    tag:'OWASP_CRS',\\\n    tag:'capec/1000/225/122/17/650',\\\n    ctl:auditLogParts=+E,\\\n    ver:'OWASP_CRS/3.4.0-dev',\\\n    severity:'CRITICAL',\\\n    setvar:'tx.outbound_anomaly_score_pl1=+%{tx.critical_anomaly_score}'\"\n",
        "paranoia_level": "1",
        "rule_id": "955",
        "sec_rule_id": "955320",
        "severity": "CRITICAL",
        "tags": [
            "language-php",
            "platform-multi",
            "attack-rce",
            "paranoia-level/1",
            "OWASP_CRS",
            "capec/1000/225/122/17/650"
        ]
    },
    {
        "comment": "# Shell I web shell\n",
        "content": "SecRule RESPONSE_BODY \"@rx ^<html>\\n<title>.*? ~ Shell I</title>\\n<head>\\n<style>\" \\\n    \"id:955330,\\\n    phase:4,\\\n    block,\\\n    capture,\\\n    t:none,\\\n    msg:'Shell I web shell',\\\n    logdata:'Matched Data: %{TX.0} found within %{MATCHED_VAR_NAME}',\\\n    tag:'language-php',\\\n    tag:'platform-multi',\\\n    tag:'attack-rce',\\\n    tag:'paranoia-level/1',\\\n    tag:'OWASP_CRS',\\\n    tag:'capec/1000/225/122/17/650',\\\n    ctl:auditLogParts=+E,\\\n    ver:'OWASP_CRS/3.4.0-dev',\\\n    severity:'CRITICAL',\\\n    setvar:'tx.outbound_anomaly_score_pl1=+%{tx.critical_anomaly_score}'\"\n",
        "paranoia_level": "1",
        "rule_id": "955",
        "sec_rule_id": "955330",
        "severity": "CRITICAL",
        "tags": [
            "language-php",
            "platform-multi",
            "attack-rce",
            "paranoia-level/1",
            "OWASP_CRS",
            "capec/1000/225/122/17/650"
        ]
    },
    {
        "comment": "# b374k m1n1 web shell\n",
        "content": "SecRule RESPONSE_BODY \"@rx ^ <html><head><title>:: b374k m1n1 [0-9.]+ ::</title>\" \\\n    \"id:955340,\\\n    phase:4,\\\n    block,\\\n    capture,\\\n    t:none,\\\n    msg:'b374k m1n1 web shell',\\\n    logdata:'Matched Data: %{TX.0} found within %{MATCHED_VAR_NAME}',\\\n    tag:'language-php',\\\n    tag:'platform-multi',\\\n    tag:'attack-rce',\\\n    tag:'paranoia-level/1',\\\n    tag:'OWASP_CRS',\\\n    tag:'capec/1000/225/122/17/650',\\\n    ctl:auditLogParts=+E,\\\n    ver:'OWASP_CRS/3.4.0-dev',\\\n    severity:'CRITICAL',\\\n    setvar:'tx.outbound_anomaly_score_pl1=+%{tx.critical_anomaly_score}'\"\n",
        "paranoia_level": "1",
        "rule_id": "955",
        "sec_rule_id": "955340",
        "severity": "CRITICAL",
        "tags": [
            "language-php",
            "platform-multi",
            "attack-rce",
            "paranoia-level/1",
            "OWASP_CRS",
            "capec/1000/225/122/17/650"
        ]
    },
    {
        "comment": "",
        "content": "SecRule TX:DETECTION_PARANOIA_LEVEL \"@lt 2\" \"id:955013,phase:3,pass,nolog,skipAfter:END-RESPONSE-955-WEB-SHELLS\"\n",
        "rule_id": "955",
        "sec_rule_id": "955013"
    },
    {
        "comment": "",
        "content": "SecRule TX:DETECTION_PARANOIA_LEVEL \"@lt 2\" \"id:955014,phase:4,pass,nolog,skipAfter:END-RESPONSE-955-WEB-SHELLS\"\n",
        "rule_id": "955",
        "sec_rule_id": "955014"
    },
    {
        "comment": "# webadmin.php file manager\n# This is placed in PL2 because of too generic pattern.\n",
        "content": "SecRule RESPONSE_BODY \"@contains <h1 style=\\\"margin-bottom: 0\\\">webadmin.php</h1>\" \\\n    \"id:955350,\\\n    phase:4,\\\n    block,\\\n    capture,\\\n    t:none,\\\n    msg:'webadmin.php file manager',\\\n    logdata:'Matched Data: %{TX.0} found within %{MATCHED_VAR_NAME}',\\\n    tag:'language-php',\\\n    tag:'platform-multi',\\\n    tag:'attack-rce',\\\n    tag:'paranoia-level/2',\\\n    tag:'OWASP_CRS',\\\n    tag:'capec/1000/225/122/17/650',\\\n    ctl:auditLogParts=+E,\\\n    ver:'OWASP_CRS/3.4.0-dev',\\\n    severity:'CRITICAL',\\\n    setvar:'tx.outbound_anomaly_score_pl2=+%{tx.critical_anomaly_score}'\"\n",
        "paranoia_level": "2",
        "rule_id": "955",
        "sec_rule_id": "955350",
        "severity": "CRITICAL",
        "tags": [
            "language-php",
            "platform-multi",
            "attack-rce",
            "paranoia-level/2",
            "OWASP_CRS",
            "capec/1000/225/122/17/650"
        ]
    },
    {
        "comment": "",
        "content": "SecRule TX:DETECTION_PARANOIA_LEVEL \"@lt 3\" \"id:955015,phase:3,pass,nolog,skipAfter:END-RESPONSE-955-WEB-SHELLS\"\n",
        "rule_id": "955",
        "sec_rule_id": "955015"
    },
    {
        "comment": "",
        "content": "SecRule TX:DETECTION_PARANOIA_LEVEL \"@lt 3\" \"id:955016,phase:4,pass,nolog,skipAfter:END-RESPONSE-955-WEB-SHELLS\"\n",
        "rule_id": "955",
        "sec_rule_id": "955016"
    },
    {
        "comment": "#\n# -= Paranoia Level 3 =- (apply only when tx.detection_paranoia_level is sufficiently high: 3 or higher)\n#\n",
        "content": "SecRule TX:DETECTION_PARANOIA_LEVEL \"@lt 4\" \"id:955017,phase:3,pass,nolog,skipAfter:END-RESPONSE-955-WEB-SHELLS\"\n",
        "rule_id": "955",
        "sec_rule_id": "955017"
    },
    {
        "comment": "",
        "content": "SecRule TX:DETECTION_PARANOIA_LEVEL \"@lt 4\" \"id:955018,phase:4,pass,nolog,skipAfter:END-RESPONSE-955-WEB-SHELLS\"\n",
        "rule_id": "955",
        "sec_rule_id": "955018"
    },
    {
        "comment": "# Summing up the blocking and detection anomaly scores in phase 3\n# even when early blocking is disabled, we need to sum up the scores in phase 3\n# this prevents bugs in phase 5 if Apache skips phases because of error handling\n# See: https://github.com/coreruleset/coreruleset/issues/2319#issuecomment-1047503932\n",
        "content": "SecRule TX:BLOCKING_PARANOIA_LEVEL \"@ge 1\" \\\n    \"id:959052,\\\n    phase:3,\\\n    pass,\\\n    t:none,\\\n    nolog,\\\n    setvar:'tx.blocking_outbound_anomaly_score=+%{tx.outbound_anomaly_score_pl1}'\"\n",
        "rule_id": "959",
        "sec_rule_id": "959052"
    },
    {
        "comment": "",
        "content": "SecRule TX:DETECTION_PARANOIA_LEVEL \"@ge 1\" \\\n    \"id:959152,\\\n    phase:3,\\\n    pass,\\\n    t:none,\\\n    nolog,\\\n    setvar:'tx.detection_outbound_anomaly_score=+%{tx.outbound_anomaly_score_pl1}'\"\n",
        "rule_id": "959",
        "sec_rule_id": "959152"
    },
    {
        "comment": "",
        "content": "SecRule TX:BLOCKING_PARANOIA_LEVEL \"@ge 2\" \\\n    \"id:959053,\\\n    phase:3,\\\n    pass,\\\n    t:none,\\\n    nolog,\\\n    setvar:'tx.blocking_outbound_anomaly_score=+%{tx.outbound_anomaly_score_pl2}'\"\n",
        "rule_id": "959",
        "sec_rule_id": "959053"
    },
    {
        "comment": "",
        "content": "SecRule TX:DETECTION_PARANOIA_LEVEL \"@ge 2\" \\\n    \"id:959153,\\\n    phase:3,\\\n    pass,\\\n    t:none,\\\n    nolog,\\\n    setvar:'tx.detection_outbound_anomaly_score=+%{tx.outbound_anomaly_score_pl2}'\"\n",
        "rule_id": "959",
        "sec_rule_id": "959153"
    },
    {
        "comment": "",
        "content": "SecRule TX:BLOCKING_PARANOIA_LEVEL \"@ge 3\" \\\n    \"id:959054,\\\n    phase:3,\\\n    pass,\\\n    t:none,\\\n    nolog,\\\n    setvar:'tx.blocking_outbound_anomaly_score=+%{tx.outbound_anomaly_score_pl3}'\"\n",
        "rule_id": "959",
        "sec_rule_id": "959054"
    },
    {
        "comment": "",
        "content": "SecRule TX:DETECTION_PARANOIA_LEVEL \"@ge 3\" \\\n    \"id:959154,\\\n    phase:3,\\\n    pass,\\\n    t:none,\\\n    nolog,\\\n    setvar:'tx.detection_outbound_anomaly_score=+%{tx.outbound_anomaly_score_pl3}'\"\n",
        "rule_id": "959",
        "sec_rule_id": "959154"
    },
    {
        "comment": "",
        "content": "SecRule TX:BLOCKING_PARANOIA_LEVEL \"@ge 4\" \\\n    \"id:959055,\\\n    phase:3,\\\n    pass,\\\n    t:none,\\\n    nolog,\\\n    setvar:'tx.blocking_outbound_anomaly_score=+%{tx.outbound_anomaly_score_pl4}'\"\n",
        "rule_id": "959",
        "sec_rule_id": "959055"
    },
    {
        "comment": "",
        "content": "SecRule TX:DETECTION_PARANOIA_LEVEL \"@ge 4\" \\\n    \"id:959155,\\\n    phase:3,\\\n    pass,\\\n    t:none,\\\n    nolog,\\\n    setvar:'tx.detection_outbound_anomaly_score=+%{tx.outbound_anomaly_score_pl4}'\"\n",
        "rule_id": "959",
        "sec_rule_id": "959155"
    },
    {
        "comment": "# at start of phase 4, we reset the aggregate scores to 0 to prevent duplicate counting of per-PL scores\n# this is necessary because the per-PL scores are counted across phases\n",
        "content": "SecAction \"id:959059,\\\n    phase:4,\\\n    pass,\\\n    t:none,\\\n    nolog,\\\n    setvar:'tx.blocking_outbound_anomaly_score=0'\"\n",
        "rule_id": "959",
        "sec_rule_id": "959059"
    },
    {
        "comment": "",
        "content": "SecAction \"id:959159,\\\n    phase:4,\\\n    pass,\\\n    t:none,\\\n    nolog,\\\n    setvar:'tx.detection_outbound_anomaly_score=0'\"\n",
        "rule_id": "959",
        "sec_rule_id": "959159"
    },
    {
        "comment": "# Summing up the blocking and detection anomaly scores in phase 4\n",
        "content": "SecRule TX:BLOCKING_PARANOIA_LEVEL \"@ge 1\" \\\n    \"id:959060,\\\n    phase:4,\\\n    pass,\\\n    t:none,\\\n    nolog,\\\n    setvar:'tx.blocking_outbound_anomaly_score=+%{tx.outbound_anomaly_score_pl1}'\"\n",
        "rule_id": "959",
        "sec_rule_id": "959060"
    },
    {
        "comment": "",
        "content": "SecRule TX:DETECTION_PARANOIA_LEVEL \"@ge 1\" \\\n    \"id:959160,\\\n    phase:4,\\\n    pass,\\\n    t:none,\\\n    nolog,\\\n    setvar:'tx.detection_outbound_anomaly_score=+%{tx.outbound_anomaly_score_pl1}'\"\n",
        "rule_id": "959",
        "sec_rule_id": "959160"
    },
    {
        "comment": "",
        "content": "SecRule TX:BLOCKING_PARANOIA_LEVEL \"@ge 2\" \\\n    \"id:959061,\\\n    phase:4,\\\n    pass,\\\n    t:none,\\\n    nolog,\\\n    setvar:'tx.blocking_outbound_anomaly_score=+%{tx.outbound_anomaly_score_pl2}'\"\n",
        "rule_id": "959",
        "sec_rule_id": "959061"
    },
    {
        "comment": "",
        "content": "SecRule TX:DETECTION_PARANOIA_LEVEL \"@ge 2\" \\\n    \"id:959161,\\\n    phase:4,\\\n    pass,\\\n    t:none,\\\n    nolog,\\\n    setvar:'tx.detection_outbound_anomaly_score=+%{tx.outbound_anomaly_score_pl2}'\"\n",
        "rule_id": "959",
        "sec_rule_id": "959161"
    },
    {
        "comment": "",
        "content": "SecRule TX:BLOCKING_PARANOIA_LEVEL \"@ge 3\" \\\n    \"id:959062,\\\n    phase:4,\\\n    pass,\\\n    t:none,\\\n    nolog,\\\n    setvar:'tx.blocking_outbound_anomaly_score=+%{tx.outbound_anomaly_score_pl3}'\"\n",
        "rule_id": "959",
        "sec_rule_id": "959062"
    },
    {
        "comment": "",
        "content": "SecRule TX:DETECTION_PARANOIA_LEVEL \"@ge 3\" \\\n    \"id:959162,\\\n    phase:4,\\\n    pass,\\\n    t:none,\\\n    nolog,\\\n    setvar:'tx.detection_outbound_anomaly_score=+%{tx.outbound_anomaly_score_pl3}'\"\n",
        "rule_id": "959",
        "sec_rule_id": "959162"
    },
    {
        "comment": "",
        "content": "SecRule TX:BLOCKING_PARANOIA_LEVEL \"@ge 4\" \\\n    \"id:959063,\\\n    phase:4,\\\n    pass,\\\n    t:none,\\\n    nolog,\\\n    setvar:'tx.blocking_outbound_anomaly_score=+%{tx.outbound_anomaly_score_pl4}'\"\n",
        "rule_id": "959",
        "sec_rule_id": "959063"
    },
    {
        "comment": "",
        "content": "SecRule TX:DETECTION_PARANOIA_LEVEL \"@ge 4\" \\\n    \"id:959163,\\\n    phase:4,\\\n    pass,\\\n    t:none,\\\n    nolog,\\\n    setvar:'tx.detection_outbound_anomaly_score=+%{tx.outbound_anomaly_score_pl4}'\"\n",
        "rule_id": "959",
        "sec_rule_id": "959163"
    },
    {
        "comment": "# if early blocking is active, check threshold in phase 3\n",
        "content": "SecRule TX:BLOCKING_OUTBOUND_ANOMALY_SCORE \"@ge %{tx.outbound_anomaly_score_threshold}\" \\\n    \"id:959101,\\\n    phase:3,\\\n    deny,\\\n    t:none,\\\n    msg:'Outbound Anomaly Score Exceeded in phase 3 (Total Score: %{tx.blocking_outbound_anomaly_score})',\\\n    tag:'anomaly-evaluation',\\\n    ver:'OWASP_CRS/3.4.0-dev',\\\n    chain\"\n    SecRule TX:EARLY_BLOCKING \"@eq 1\"\n",
        "rule_id": "959",
        "sec_rule_id": "959101",
        "tags": [
            "anomaly-evaluation"
        ]
    },
    {
        "comment": "# always check threshold in phase 4\n",
        "content": "SecRule TX:BLOCKING_OUTBOUND_ANOMALY_SCORE \"@ge %{tx.outbound_anomaly_score_threshold}\" \\\n    \"id:959100,\\\n    phase:4,\\\n    deny,\\\n    t:none,\\\n    msg:'Outbound Anomaly Score Exceeded (Total Score: %{tx.blocking_outbound_anomaly_score})',\\\n    tag:'anomaly-evaluation',\\\n    ver:'OWASP_CRS/3.4.0-dev'\"\n",
        "description": "Check of outbound anomaly score",
        "rule_id": "959",
        "sec_rule_id": "959100",
        "tags": [
            "anomaly-evaluation"
        ]
    },
    {
        "comment": "",
        "content": "SecRule TX:DETECTION_PARANOIA_LEVEL \"@lt 1\" \"id:959011,phase:3,pass,nolog,skipAfter:END-RESPONSE-959-BLOCKING-EVALUATION\"\n",
        "rule_id": "959",
        "sec_rule_id": "959011"
    },
    {
        "comment": "",
        "content": "SecRule TX:DETECTION_PARANOIA_LEVEL \"@lt 1\" \"id:959012,phase:4,pass,nolog,skipAfter:END-RESPONSE-959-BLOCKING-EVALUATION\"\n",
        "rule_id": "959",
        "sec_rule_id": "959012"
    },
    {
        "comment": "#\n# -= Paranoia Level 1 (default) =- (apply only when tx.detection_paranoia_level is sufficiently high: 1 or higher)\n#\n",
        "content": "SecRule TX:DETECTION_PARANOIA_LEVEL \"@lt 2\" \"id:959013,phase:3,pass,nolog,skipAfter:END-RESPONSE-959-BLOCKING-EVALUATION\"\n",
        "rule_id": "959",
        "sec_rule_id": "959013"
    },
    {
        "comment": "",
        "content": "SecRule TX:DETECTION_PARANOIA_LEVEL \"@lt 2\" \"id:959014,phase:4,pass,nolog,skipAfter:END-RESPONSE-959-BLOCKING-EVALUATION\"\n",
        "rule_id": "959",
        "sec_rule_id": "959014"
    },
    {
        "comment": "#\n# -= Paranoia Level 2 =- (apply only when tx.detection_paranoia_level is sufficiently high: 2 or higher)\n#\n",
        "content": "SecRule TX:DETECTION_PARANOIA_LEVEL \"@lt 3\" \"id:959015,phase:3,pass,nolog,skipAfter:END-RESPONSE-959-BLOCKING-EVALUATION\"\n",
        "rule_id": "959",
        "sec_rule_id": "959015"
    },
    {
        "comment": "",
        "content": "SecRule TX:DETECTION_PARANOIA_LEVEL \"@lt 3\" \"id:959016,phase:4,pass,nolog,skipAfter:END-RESPONSE-959-BLOCKING-EVALUATION\"\n",
        "rule_id": "959",
        "sec_rule_id": "959016"
    },
    {
        "comment": "#\n# -= Paranoia Level 3 =- (apply only when tx.detection_paranoia_level is sufficiently high: 3 or higher)\n#\n",
        "content": "SecRule TX:DETECTION_PARANOIA_LEVEL \"@lt 4\" \"id:959017,phase:3,pass,nolog,skipAfter:END-RESPONSE-959-BLOCKING-EVALUATION\"\n",
        "rule_id": "959",
        "sec_rule_id": "959017"
    },
    {
        "comment": "",
        "content": "SecRule TX:DETECTION_PARANOIA_LEVEL \"@lt 4\" \"id:959018,phase:4,pass,nolog,skipAfter:END-RESPONSE-959-BLOCKING-EVALUATION\"\n",
        "rule_id": "959",
        "sec_rule_id": "959018"
    },
    {
        "comment": "# Combine inbound and outbound scores\n",
        "content": "SecAction \\\n    \"id:980099,\\\n    phase:5,\\\n    pass,\\\n    t:none,\\\n    nolog,\\\n    noauditlog,\\\n    ver:'OWASP_CRS/3.4.0-dev',\\\n    setvar:'tx.blocking_anomaly_score=%{tx.blocking_inbound_anomaly_score}',\\\n    setvar:'tx.blocking_anomaly_score=+%{tx.blocking_outbound_anomaly_score}',\\\n    setvar:'tx.detection_anomaly_score=%{tx.detection_inbound_anomaly_score}',\\\n    setvar:'tx.detection_anomaly_score=+%{tx.detection_outbound_anomaly_score}',\\\n    setvar:'tx.anomaly_score=%{tx.blocking_inbound_anomaly_score}',\\\n    setvar:'tx.anomaly_score=+%{tx.blocking_outbound_anomaly_score}'\"\n",
        "rule_id": "980",
        "sec_rule_id": "980099"
    },
    {
        "comment": "# -= Reporting Level 0 =- (Skip over reporting when tx.reporting_level is 0)\n",
        "content": "SecRule TX:REPORTING_LEVEL \"@eq 0\" \"id:980041,phase:5,pass,nolog,skipAfter:END-REPORTING\"\n",
        "rule_id": "980",
        "sec_rule_id": "980041"
    },
    {
        "comment": "# -= Reporting Level 5 =- (Jump to reporting rule immediately when tx.reporting_level is 5 or greater)\n",
        "content": "SecRule TX:REPORTING_LEVEL \"@ge 5\" \"id:980042,phase:5,pass,nolog,skipAfter:LOG-REPORTING\"\n",
        "rule_id": "980",
        "sec_rule_id": "980042"
    },
    {
        "comment": "# -= Zero detection score =- (Skip over reporting when sum of inbound and outbound detection score is equal to 0)\n",
        "content": "SecRule TX:DETECTION_ANOMALY_SCORE \"@eq 0\" \"id:980043,phase:5,pass,nolog,skipAfter:END-REPORTING\"\n",
        "rule_id": "980",
        "sec_rule_id": "980043"
    },
    {
        "comment": "# -= Blocking score exceeds threshold =- (Jump to reporting rule immediately if a blocking score exceeds a threshold)\n",
        "content": "SecRule TX:BLOCKING_INBOUND_ANOMALY_SCORE \"@ge %{tx.inbound_anomaly_score_threshold}\" \"id:980044,phase:5,pass,nolog,skipAfter:LOG-REPORTING\"\n",
        "rule_id": "980",
        "sec_rule_id": "980044"
    },
    {
        "comment": "",
        "content": "SecRule TX:BLOCKING_OUTBOUND_ANOMALY_SCORE \"@ge %{tx.outbound_anomaly_score_threshold}\" \"id:980045,phase:5,pass,nolog,skipAfter:LOG-REPORTING\"\n",
        "rule_id": "980",
        "sec_rule_id": "980045"
    },
    {
        "comment": "# -= Reporting Level 2 =- (Skip over reporting when tx.reporting_level is less than 2)\n",
        "content": "SecRule TX:REPORTING_LEVEL \"@lt 2\" \"id:980046,phase:5,pass,nolog,skipAfter:END-REPORTING\"\n",
        "rule_id": "980",
        "sec_rule_id": "980046"
    },
    {
        "comment": "# -= Detection score exceeds threshold =- (Jump to reporting rule immediately if a detection score exceeds a threshold)\n",
        "content": "SecRule TX:DETECTION_INBOUND_ANOMALY_SCORE \"@ge %{tx.inbound_anomaly_score_threshold}\" \"id:980047,phase:5,pass,nolog,skipAfter:LOG-REPORTING\"\n",
        "rule_id": "980",
        "sec_rule_id": "980047"
    },
    {
        "comment": "",
        "content": "SecRule TX:DETECTION_OUTBOUND_ANOMALY_SCORE \"@ge %{tx.outbound_anomaly_score_threshold}\" \"id:980048,phase:5,pass,nolog,skipAfter:LOG-REPORTING\"\n",
        "rule_id": "980",
        "sec_rule_id": "980048"
    },
    {
        "comment": "# -= Reporting Level 3 =- (Skip over reporting when tx.reporting_level is less than 3)\n",
        "content": "SecRule TX:REPORTING_LEVEL \"@lt 3\" \"id:980049,phase:5,pass,nolog,skipAfter:END-REPORTING\"\n",
        "rule_id": "980",
        "sec_rule_id": "980049"
    },
    {
        "comment": "# -= Blocking score greater than zero =- (Jump to reporting rule immediately when sum of inbound and outbound blocking score is greater than zero)\n",
        "content": "SecRule TX:BLOCKING_ANOMALY_SCORE \"@gt 0\" \"id:980050,phase:5,pass,nolog,skipAfter:LOG-REPORTING\"\n",
        "rule_id": "980",
        "sec_rule_id": "980050"
    },
    {
        "comment": "# -= Reporting Level 4 =- (Skip over reporting when tx.reporting_level is less than 4)\n",
        "content": "SecRule TX:REPORTING_LEVEL \"@lt 4\" \"id:980051,phase:5,pass,nolog,skipAfter:END-REPORTING\"\n",
        "rule_id": "980",
        "sec_rule_id": "980051"
    },
    {
        "comment": "# Inbound and outbound - all requests\n",
        "content": "SecAction \\\n    \"id:980170,\\\n    phase:5,\\\n    pass,\\\n    t:none,\\\n    noauditlog,\\\n    msg:'Anomaly Scores: \\\n",
        "rule_id": "980",
        "sec_rule_id": "980170"
    },
    {
        "comment": "",
        "content": "SecRule TX:DETECTION_PARANOIA_LEVEL \"@lt 1\" \"id:980011,phase:1,pass,nolog,skipAfter:END-RESPONSE-980-CORRELATION\"\n",
        "rule_id": "980",
        "sec_rule_id": "980011"
    },
    {
        "comment": "",
        "content": "SecRule TX:DETECTION_PARANOIA_LEVEL \"@lt 1\" \"id:980012,phase:2,pass,nolog,skipAfter:END-RESPONSE-980-CORRELATION\"\n",
        "rule_id": "980",
        "sec_rule_id": "980012"
    },
    {
        "comment": "#\n# -= Paranoia Level 1 (default) =- (apply only when tx.detection_paranoia_level is sufficiently high: 1 or higher)\n#\n",
        "content": "SecRule TX:DETECTION_PARANOIA_LEVEL \"@lt 2\" \"id:980013,phase:1,pass,nolog,skipAfter:END-RESPONSE-980-CORRELATION\"\n",
        "rule_id": "980",
        "sec_rule_id": "980013"
    },
    {
        "comment": "",
        "content": "SecRule TX:DETECTION_PARANOIA_LEVEL \"@lt 2\" \"id:980014,phase:2,pass,nolog,skipAfter:END-RESPONSE-980-CORRELATION\"\n",
        "rule_id": "980",
        "sec_rule_id": "980014"
    },
    {
        "comment": "#\n# -= Paranoia Level 2 =- (apply only when tx.detection_paranoia_level is sufficiently high: 2 or higher)\n#\n",
        "content": "SecRule TX:DETECTION_PARANOIA_LEVEL \"@lt 3\" \"id:980015,phase:1,pass,nolog,skipAfter:END-RESPONSE-980-CORRELATION\"\n",
        "rule_id": "980",
        "sec_rule_id": "980015"
    },
    {
        "comment": "",
        "content": "SecRule TX:DETECTION_PARANOIA_LEVEL \"@lt 3\" \"id:980016,phase:2,pass,nolog,skipAfter:END-RESPONSE-980-CORRELATION\"\n",
        "rule_id": "980",
        "sec_rule_id": "980016"
    },
    {
        "comment": "#\n# -= Paranoia Level 3 =- (apply only when tx.detection_paranoia_level is sufficiently high: 3 or higher)\n#\n",
        "content": "SecRule TX:DETECTION_PARANOIA_LEVEL \"@lt 4\" \"id:980017,phase:1,pass,nolog,skipAfter:END-RESPONSE-980-CORRELATION\"\n",
        "rule_id": "980",
        "sec_rule_id": "980017"
    },
    {
        "comment": "",
        "content": "SecRule TX:DETECTION_PARANOIA_LEVEL \"@lt 4\" \"id:980018,phase:2,pass,nolog,skipAfter:END-RESPONSE-980-CORRELATION\"\n",
        "rule_id": "980",
        "sec_rule_id": "980018"
    }
]